I"7!<p><br /></p>

<center><img src="/assets/images/programmers/" width="100%" /></center>

<p><br /></p>

<h3 id="문제-풀이">문제 풀이</h3>
<hr />

<p>이 문제는 정수를 <strong>진수로 변환하는 방법</strong>과 <strong>소수를 판별하는 알고리즘</strong>을 잘 숙지하고 있으면 쉽게 풀 수 있다.</p>

<p><br /></p>

<h4 id="아이디어-도출">아이디어 도출</h4>

<ol>
  <li>정수 n을 k진수로 변환한다.</li>
  <li>문자열로 변환된 k진수에서 0을 기준으로 분할한다.</li>
  <li>분할된 각 원소가 소수인지 확인하여 카운트한다.</li>
</ol>

<p>위 아이디어대로 풀이방법을 자세히 살펴보자. 먼저 입력받은 정수 n을 k진수로 변환해야 한다.</p>

<blockquote>
  <p>Java에서는 <code class="language-plaintext highlighter-rouge">Integer.toString()</code> 메서드의 첫번째 인자로 변환할 정수, 두번째 인자로 변환할 진수값을 넣으면 정수를 원하는 진수로 변환할 수 있다.</p>
</blockquote>

<p>다음으로 그렇게 k진수로 변환된 문자열을 String 클래스의 <code class="language-plaintext highlighter-rouge">split()</code> 메서드를 이용해 0을 기준으로 분할하여 배열로 만든다.</p>

<p>이후, 분할된 배열을 순회하면서 각 원소가 소수인지 확인하여 카운트를 세면 된다.  이때 각 원소가 소수인지 확인하기 위해서는 단순히 반복문을 통해 2부터 해당 수까지 반복하며 소수인지 확인하는 방법도 있지만, 시간 초과를 고려해야 하기 때문에 에라토스테네스의 체나 유클리드 호제법 알고리즘을 이용해야 한다.</p>

<p>이번에는 에라토스테네스의 체 알고리즘을 이용해 소수를 판별하는 로직을 이용하여 소수를 판별하도록 구현하였다.</p>

<blockquote>
  <p>에라토스테네스의 체 알고리즘을 활용해 소수를 판별하는 방법은 이전에 풀어봤던 <a href="https://jooney-95.github.io/java/155-post/">신기한 소수 풀이</a>에서 자세하게 확인할 수 있다.</p>
</blockquote>

<p><br /><br /></p>

<h3 id="작성-코드">작성 코드</h3>
<hr />
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
</pre></td><td class="rouge-code"><pre>
<span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span> <span class="n">n</span><span class="o">,</span> <span class="kt">int</span> <span class="n">k</span><span class="o">)</span> <span class="o">{</span>
        
        <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="nc">String</span> <span class="n">toBinaryString</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">toString</span><span class="o">(</span><span class="n">n</span><span class="o">,</span> <span class="n">k</span><span class="o">);</span>
        <span class="nc">String</span><span class="o">[]</span> <span class="n">str</span> <span class="o">=</span> <span class="n">toBinaryString</span><span class="o">.</span><span class="na">split</span><span class="o">(</span><span class="s">"0"</span><span class="o">);</span>
        
        <span class="k">for</span><span class="o">(</span><span class="nc">String</span> <span class="n">s</span> <span class="o">:</span> <span class="n">str</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">if</span><span class="o">(!</span><span class="n">s</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">""</span><span class="o">))</span> <span class="o">{</span>
                <span class="kt">long</span> <span class="n">num</span> <span class="o">=</span> <span class="nc">Long</span><span class="o">.</span><span class="na">parseLong</span><span class="o">(</span><span class="n">s</span><span class="o">);</span>
                <span class="k">if</span><span class="o">(</span><span class="n">isPrime</span><span class="o">(</span><span class="n">num</span><span class="o">))</span> <span class="n">answer</span><span class="o">++;</span>
            <span class="o">}</span>
        <span class="o">}</span>

        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="c1">// 소수 판별 메서드</span>
    <span class="c1">// 에라토스테네스의 체 알고리즘을 활용해 소수를 판별함.</span>
    <span class="kd">static</span> <span class="kt">boolean</span> <span class="nf">isPrime</span><span class="o">(</span><span class="kt">long</span> <span class="n">num</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">sqrt</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span><span class="nc">Math</span><span class="o">.</span><span class="na">sqrt</span><span class="o">(</span><span class="n">num</span><span class="o">);</span>
        <span class="k">if</span><span class="o">(</span><span class="n">num</span> <span class="o">==</span> <span class="mi">0</span> <span class="o">||</span> <span class="n">num</span> <span class="o">==</span> <span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">long</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">2</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">sqrt</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="n">num</span> <span class="o">%</span> <span class="n">i</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
        <span class="o">}</span>   
        <span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
    <span class="o">}</span>
    
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">Solution</span> <span class="n">sol</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Solution</span><span class="o">();</span>
        
        <span class="c1">// int n = 437674;</span>
        <span class="c1">// int k = 3;</span>
        <span class="c1">// int n = 110011;</span>
        <span class="c1">// int k = 10;</span>
        <span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="mi">883438</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">k</span> <span class="o">=</span> <span class="mi">3</span><span class="o">;</span>

        <span class="n">sol</span><span class="o">.</span><span class="na">solution</span><span class="o">(</span><span class="n">n</span><span class="o">,</span> <span class="n">k</span><span class="o">);</span>
    <span class="o">}</span>

<span class="o">}</span>

</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="회고">회고</h3>
<ul>
  <li>
    <hr />
  </li>
</ul>

<p><br /></p>

<h3 id="출처">출처</h3>

<hr />

<ul>
  <li>해당 문제의 저작권은 문제를 만든이에게 있으며 자세한 내용은 <a href="https://school.programmers.co.kr/learn/courses/30/lessons/92335">문제 링크</a>에서 참조바랍니다.</li>
</ul>
:ET