I"e<p><br /></p>

<center><img src="/assets/images/baekjoon/2292.png" /></center>

<blockquote>
  <p>Input-1 <br />
<strong>13</strong> <br />
Output-1 <br />
<strong>3</strong></p>
</blockquote>

<h3 id="문제-풀이">문제 풀이</h3>
<p>이 문제는 특정 로직을 잘 파악하여 패턴을 나열하며 풀어야 한다.</p>

<p>먼저 1부터 N까지의 최소 루트를 구하는 것이니 N이 1일 경우엔 1이면 된다. <br />
N이 2이상일 경우에는 아래와 같은 패턴을 유추해볼 수 있다.</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">N의 범위</th>
      <th style="text-align: center">벌집의 개수</th>
      <th style="text-align: center">최소 루트</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">2 ~ 7</td>
      <td style="text-align: center">6</td>
      <td style="text-align: center">2</td>
    </tr>
    <tr>
      <td style="text-align: center">8 ~ 19</td>
      <td style="text-align: center">12</td>
      <td style="text-align: center">3</td>
    </tr>
    <tr>
      <td style="text-align: center">20 ~ 37</td>
      <td style="text-align: center">18</td>
      <td style="text-align: center">4</td>
    </tr>
    <tr>
      <td style="text-align: center">38 ~ 61</td>
      <td style="text-align: center">24</td>
      <td style="text-align: center">5</td>
    </tr>
  </tbody>
</table>

<p>위 패턴을 통해 벌집의 개수인 <strong>6의 배수 및 N의 범위별로 최소루트가 증가함</strong>을 알 수 있다. <br /></p>

<p>벌집의 개수인 특정 6의 배수보다 N보다 작을 때 최소루트를 증가시키고 아니라면 반복문을 탈출하면 된다. <br />
코드로 한번 작성해보자.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
</pre></td><td class="rouge-code"><pre><span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
<span class="kt">int</span> <span class="n">cnt</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span> <span class="c1">// 최소 루트</span>
<span class="kt">int</span> <span class="n">range</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span> <span class="c1">// n의 범위</span>
<span class="k">if</span><span class="o">(</span><span class="n">n</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
    <span class="k">while</span><span class="o">(</span><span class="n">n</span> <span class="o">&gt;</span> <span class="n">range</span><span class="o">)</span> <span class="o">{</span> <span class="c1">// n의 값과 가장 근소한 6의 배수일 경우</span>
        <span class="n">range</span> <span class="o">=</span> <span class="n">range</span> <span class="o">+</span> <span class="mi">6</span><span class="o">*</span><span class="n">cnt</span><span class="o">;</span> <span class="c1">// 6의 배수별로 순회</span>
        <span class="n">cnt</span><span class="o">++;</span> <span class="c1">// 6의 배수마다 카운트 증가</span>
    <span class="o">}</span>
<span class="o">}</span>
<span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">cnt</span> <span class="o">+</span> <span class="s">"\n"</span><span class="o">);</span> <span class="c1">// 최소 루트 출력</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><br /></p>

<h3 id="작성코드">작성코드</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">java.io.*</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">IOException</span> <span class="o">{</span>
        <span class="nc">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>
        <span class="nc">BufferedWriter</span> <span class="n">bw</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedWriter</span><span class="o">(</span><span class="k">new</span> <span class="nc">OutputStreamWriter</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">));</span>
        
        <span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
        <span class="kt">int</span> <span class="n">cnt</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span> 
        <span class="kt">int</span> <span class="n">range</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
        <span class="k">if</span><span class="o">(</span><span class="n">n</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">while</span><span class="o">(</span><span class="n">n</span> <span class="o">&gt;</span> <span class="n">range</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">range</span> <span class="o">+=</span> <span class="mi">6</span><span class="o">*</span><span class="n">cnt</span><span class="o">;</span>
                <span class="n">cnt</span><span class="o">++;</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">cnt</span> <span class="o">+</span> <span class="s">"\n"</span><span class="o">);</span>
        <span class="n">bw</span><span class="o">.</span><span class="na">flush</span><span class="o">();</span>
        <span class="n">bw</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
        <span class="n">br</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="회고">회고</h3>
<ul>
  <li>문제의 패턴을 이해하고 보니 알고리즘 자체는 쉬운편이었는데, 문제의 내용을 이해를 전혀 못해 시간이 많이 소요되었다. <br /> 
한 문제에 너무 많은 시간을 투자한 것이 아쉽지만 꼭 이 문제의 패턴이나 로직의 느낌을 잘 알아두어야 겠다.</li>
</ul>
:ET