I"m<p><br /></p>

<center><img src="/assets/images/programmers/20220831_01.png" width="700" /></center>

<p><strong>입출력 예시</strong></p>
<blockquote>
  <p>Input-1 <br />
<strong>[1,2,3,4,5]</strong> <br />
Output-1 <br />
<strong>[1]</strong></p>
</blockquote>

<blockquote>
  <p>Input-2 <br />
<strong>[1,3,2,4,2]</strong> <br />
Output-2 <br />
<strong>[1,2,3]</strong></p>
</blockquote>

<p><br /></p>

<h3 id="문제-풀이">문제 풀이</h3>
<p>해당 문제는 완전 탐색 알고리즘으로 접근해야 한다. <br />
먼저 완전 탐색 알고리즘이 뭔지 알아보자.</p>

<h4 id="완전탐색브루트포스이란">완전탐색(브루트포스)이란?</h4>
<blockquote>
  <p>간단히 가능한 모든 경우의 수를 다 체크해서 정답을 찾는 방법이다. <br /> 
무식하게 가능한 거 다 해보겠다는 방법을 의미하며 브루트포스(Brute Force)라고도 부른다. <br />
이 방법은 직관적이어서 이해하기 쉽고 문제의 정확한 결과값을 얻어낼 수 있는 가장 확실하며 기초적인 방법이다.</p>
</blockquote>

<h4 id="완전탐색의-활용법은">완전탐색의 활용법은?</h4>
<blockquote>
  <ol>
    <li>해결하고자 하는 문제의 가능한 경우의 수를 대략적으로 계산한다.</li>
    <li>가능한 모든 방법을 다 고려한다.</li>
    <li>실제 답을 구할 수 있는지 적용한다.</li>
  </ol>
</blockquote>

<p>하지만, 반대로 모든 수를 다 확인하는 만큼 팩토리얼이나 제곱단위로도 시간복잡도가 커질 수 있다. <br />
해당문제가 경우의 수를 모두 따졌을 때 일정시간 이상 소요될 경우 시간초과가 될 수 있기 때문에 유의해서 사용해야 한다.</p>

<p>이 문제에선 <strong>완전탐색 기법을 활용해 반복/조건문을 통해 가능한 모든 경우의 수</strong>를 찾아보려 한다.</p>

<p>먼저 수포자 3명의 찍는 방식 배열의 길이가 모두 다르기에 주어진 정답배열의 길이만큼 늘렸다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre><span class="nc">String</span><span class="o">[]</span> <span class="n">arr1</span> <span class="o">=</span> <span class="o">{</span><span class="s">"1"</span><span class="o">,</span><span class="s">"2"</span><span class="o">,</span><span class="s">"3"</span><span class="o">,</span><span class="s">"4"</span><span class="o">,</span><span class="s">"5"</span><span class="o">};</span> <span class="c1">// length:5</span>
<span class="nc">String</span><span class="o">[]</span> <span class="n">arr2</span> <span class="o">=</span> <span class="o">{</span><span class="s">"2"</span><span class="o">,</span><span class="s">"1"</span><span class="o">,</span><span class="s">"2"</span><span class="o">,</span><span class="s">"3"</span><span class="o">,</span><span class="s">"2"</span><span class="o">,</span><span class="s">"4"</span><span class="o">,</span><span class="s">"2"</span><span class="o">,</span><span class="s">"5"</span><span class="o">};</span> <span class="c1">// length:8 </span>
<span class="nc">String</span><span class="o">[]</span> <span class="n">arr3</span> <span class="o">=</span> <span class="o">{</span><span class="s">"3"</span><span class="o">,</span><span class="s">"3"</span><span class="o">,</span><span class="s">"1"</span><span class="o">,</span><span class="s">"1"</span><span class="o">,</span><span class="s">"2"</span><span class="o">,</span><span class="s">"2"</span><span class="o">,</span><span class="s">"4"</span><span class="o">,</span><span class="s">"4"</span><span class="o">,</span><span class="s">"5"</span><span class="o">,</span><span class="s">"5"</span><span class="o">};</span> <span class="c1">// length:10  </span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>수포자 배열들을 그대로 사용하자니 배열의 길이를 가변적으로 조정하기 어려워 별도의 list로 옮겼다.
그리고 주어진 정답 배열의 길이만큼 순회하며 인덱스 범위를 넘어갈 경우 첫 인덱스부터 다시 반복하여 채워서 늘렸다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
</pre></td><td class="rouge-code"><pre><span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">list1</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;(</span><span class="nc">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="n">arr1</span><span class="o">));</span>
<span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">list2</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;(</span><span class="nc">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="n">arr2</span><span class="o">));</span>
<span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">list3</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;(</span><span class="nc">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="n">arr3</span><span class="o">));</span>

<span class="kt">int</span> <span class="n">size1</span> <span class="o">=</span> <span class="n">list1</span><span class="o">.</span><span class="na">size</span><span class="o">();</span>
<span class="kt">int</span> <span class="n">size2</span> <span class="o">=</span> <span class="n">list2</span><span class="o">.</span><span class="na">size</span><span class="o">();</span>
<span class="kt">int</span> <span class="n">size3</span> <span class="o">=</span> <span class="n">list3</span><span class="o">.</span><span class="na">size</span><span class="o">();</span>

<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;=</span><span class="n">answers</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
    <span class="k">if</span><span class="o">(</span><span class="n">i</span><span class="o">&gt;</span><span class="n">size1</span><span class="o">)</span> <span class="n">list1</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">list1</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">-</span><span class="n">size1</span><span class="o">-</span><span class="mi">1</span><span class="o">));</span>
    <span class="k">if</span><span class="o">(</span><span class="n">i</span><span class="o">&gt;</span><span class="n">size2</span><span class="o">)</span> <span class="n">list2</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">list2</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">-</span><span class="n">size2</span><span class="o">-</span><span class="mi">1</span><span class="o">));</span>
    <span class="k">if</span><span class="o">(</span><span class="n">i</span><span class="o">&gt;</span><span class="n">size3</span><span class="o">)</span> <span class="n">list3</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">list3</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">-</span><span class="n">size3</span><span class="o">-</span><span class="mi">1</span><span class="o">));</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>이제 정답배열만큼 각 수포자 list 원소가 준비되었으니 정답 여부를 검증할 차례이다.
먼저 각 수포자 배열의 정답 카운트를 셀 변수를 선언하고 초기화하자.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
</pre></td><td class="rouge-code"><pre><span class="kt">int</span> <span class="n">cnt1</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
<span class="kt">int</span> <span class="n">cnt2</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
<span class="kt">int</span> <span class="n">cnt3</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>

<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">answers</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
    <span class="k">if</span><span class="o">(</span><span class="n">answers</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">==</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">list1</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">)))</span> <span class="n">cnt1</span><span class="o">++;</span>
    <span class="k">if</span><span class="o">(</span><span class="n">answers</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">==</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">list2</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">)))</span> <span class="n">cnt2</span><span class="o">++;</span> 
    <span class="k">if</span><span class="o">(</span><span class="n">answers</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">==</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">list3</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">)))</span> <span class="n">cnt3</span><span class="o">++;</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>그리고 위 코드와 같이 다시 정답배열을 순회하며 각 수포자 배열의 원소마다 정답여부를 확인하여 정답카운트 변수에 담았다.</p>

<p>여기서 놓치지 말아야 할 점은 <strong>가장 높은 점수를 받은 수포자만 반환</strong>해야 하는 것과 <br />
<strong>가장 높은 점수를 받은 수포자가 2명 이상일 경우 오름차순으로 배열에 넣어 반환</strong>해야 한다는 것이다.</p>

<p>나는 가장 높은 점수를 받은 수포자를 찾아 반환할 list에 넣었다.
또한 가장 높은 점수를 받은 수포자가 여럿이면 list에 오름차순으로 넣도록 작성하였다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
</pre></td><td class="rouge-code"><pre><span class="kt">int</span> <span class="n">max</span> <span class="o">=</span> <span class="nc">Math</span><span class="o">.</span><span class="na">max</span><span class="o">(</span><span class="nc">Math</span><span class="o">.</span><span class="na">max</span><span class="o">(</span><span class="n">cnt1</span><span class="o">,</span><span class="n">cnt2</span><span class="o">),</span><span class="n">cnt3</span><span class="o">);</span>
<span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">list</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>
<span class="k">if</span><span class="o">(</span><span class="n">cnt1</span> <span class="o">==</span> <span class="n">max</span><span class="o">)</span> <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="mi">1</span><span class="o">);</span>
<span class="k">if</span><span class="o">(</span><span class="n">cnt2</span> <span class="o">==</span> <span class="n">max</span><span class="o">)</span> <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="mi">2</span><span class="o">);</span>
<span class="k">if</span><span class="o">(</span><span class="n">cnt3</span> <span class="o">==</span> <span class="n">max</span><span class="o">)</span> <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="mi">3</span><span class="o">);</span>

<span class="kt">int</span><span class="o">[]</span> <span class="n">answer</span> <span class="o">=</span> <span class="n">list</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">mapToInt</span><span class="o">(</span><span class="n">i</span><span class="o">-&gt;</span><span class="n">i</span><span class="o">).</span><span class="na">toArray</span><span class="o">();</span>        
<span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>마지막으로 해당 list를 Array로 변환하여 answer에 담아 반환하였다.</p>

<p><br /></p>

<h3 id="작성-코드">작성 코드</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">Scanner</span> <span class="n">sc</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Scanner</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
        <span class="c1">// int[] arr = {1,3,2,4,2};</span>
        <span class="kt">int</span><span class="o">[]</span> <span class="n">arr</span> <span class="o">=</span> <span class="o">{</span><span class="mi">1</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="mi">3</span><span class="o">,</span><span class="mi">4</span><span class="o">,</span><span class="mi">5</span><span class="o">};</span>
        <span class="kt">long</span> <span class="n">start</span> <span class="o">=</span> <span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        <span class="n">solution</span><span class="o">(</span><span class="n">arr</span><span class="o">);</span>
        <span class="kt">long</span> <span class="n">end</span> <span class="o">=</span> <span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"\n수행시간 = "</span> <span class="o">+</span> <span class="o">(</span><span class="n">end</span><span class="o">-</span><span class="n">start</span><span class="o">));</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span><span class="o">[]</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">answers</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">String</span><span class="o">[]</span> <span class="n">arr1</span> <span class="o">=</span> <span class="o">{</span><span class="s">"1"</span><span class="o">,</span><span class="s">"2"</span><span class="o">,</span><span class="s">"3"</span><span class="o">,</span><span class="s">"4"</span><span class="o">,</span><span class="s">"5"</span><span class="o">};</span>
        <span class="nc">String</span><span class="o">[]</span> <span class="n">arr2</span> <span class="o">=</span> <span class="o">{</span><span class="s">"2"</span><span class="o">,</span><span class="s">"1"</span><span class="o">,</span><span class="s">"2"</span><span class="o">,</span><span class="s">"3"</span><span class="o">,</span><span class="s">"2"</span><span class="o">,</span><span class="s">"4"</span><span class="o">,</span><span class="s">"2"</span><span class="o">,</span><span class="s">"5"</span><span class="o">};</span> 
        <span class="nc">String</span><span class="o">[]</span> <span class="n">arr3</span> <span class="o">=</span> <span class="o">{</span><span class="s">"3"</span><span class="o">,</span><span class="s">"3"</span><span class="o">,</span><span class="s">"1"</span><span class="o">,</span><span class="s">"1"</span><span class="o">,</span><span class="s">"2"</span><span class="o">,</span><span class="s">"2"</span><span class="o">,</span><span class="s">"4"</span><span class="o">,</span><span class="s">"4"</span><span class="o">,</span><span class="s">"5"</span><span class="o">,</span><span class="s">"5"</span><span class="o">};</span>      
        
        <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">list1</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;(</span><span class="nc">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="n">arr1</span><span class="o">));</span>
        <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">list2</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;(</span><span class="nc">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="n">arr2</span><span class="o">));</span>
        <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">list3</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;(</span><span class="nc">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="n">arr3</span><span class="o">));</span>
        
        <span class="kt">int</span> <span class="n">size1</span> <span class="o">=</span> <span class="n">list1</span><span class="o">.</span><span class="na">size</span><span class="o">();</span>
        <span class="kt">int</span> <span class="n">size2</span> <span class="o">=</span> <span class="n">list2</span><span class="o">.</span><span class="na">size</span><span class="o">();</span>
        <span class="kt">int</span> <span class="n">size3</span> <span class="o">=</span> <span class="n">list3</span><span class="o">.</span><span class="na">size</span><span class="o">();</span>
        
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;=</span><span class="n">answers</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="n">i</span><span class="o">&gt;</span><span class="n">size1</span><span class="o">)</span> <span class="n">list1</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">list1</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">-</span><span class="n">size1</span><span class="o">-</span><span class="mi">1</span><span class="o">));</span>
            <span class="k">if</span><span class="o">(</span><span class="n">i</span><span class="o">&gt;</span><span class="n">size2</span><span class="o">)</span> <span class="n">list2</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">list2</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">-</span><span class="n">size2</span><span class="o">-</span><span class="mi">1</span><span class="o">));</span>
            <span class="k">if</span><span class="o">(</span><span class="n">i</span><span class="o">&gt;</span><span class="n">size3</span><span class="o">)</span> <span class="n">list3</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">list3</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">-</span><span class="n">size3</span><span class="o">-</span><span class="mi">1</span><span class="o">));</span>
        <span class="o">}</span>
        
        <span class="kt">int</span> <span class="n">cnt1</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">cnt2</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">cnt3</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">answers</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="n">answers</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">==</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">list1</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">)))</span> <span class="n">cnt1</span><span class="o">++;</span>
            <span class="k">if</span><span class="o">(</span><span class="n">answers</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">==</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">list2</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">)))</span> <span class="n">cnt2</span><span class="o">++;</span> 
            <span class="k">if</span><span class="o">(</span><span class="n">answers</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">==</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">list3</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">)))</span> <span class="n">cnt3</span><span class="o">++;</span>
        <span class="o">}</span>
        
        <span class="kt">int</span> <span class="n">max</span> <span class="o">=</span> <span class="nc">Math</span><span class="o">.</span><span class="na">max</span><span class="o">(</span><span class="nc">Math</span><span class="o">.</span><span class="na">max</span><span class="o">(</span><span class="n">cnt1</span><span class="o">,</span><span class="n">cnt2</span><span class="o">),</span><span class="n">cnt3</span><span class="o">);</span>
        <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">list</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>
        <span class="k">if</span><span class="o">(</span><span class="n">cnt1</span> <span class="o">==</span> <span class="n">max</span><span class="o">)</span> <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="mi">1</span><span class="o">);</span>
        <span class="k">if</span><span class="o">(</span><span class="n">cnt2</span> <span class="o">==</span> <span class="n">max</span><span class="o">)</span> <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="mi">2</span><span class="o">);</span>
        <span class="k">if</span><span class="o">(</span><span class="n">cnt3</span> <span class="o">==</span> <span class="n">max</span><span class="o">)</span> <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="mi">3</span><span class="o">);</span>
        
        <span class="kt">int</span><span class="o">[]</span> <span class="n">answer</span> <span class="o">=</span> <span class="n">list</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">mapToInt</span><span class="o">(</span><span class="n">i</span><span class="o">-&gt;</span><span class="n">i</span><span class="o">).</span><span class="na">toArray</span><span class="o">();</span>        
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="회고">회고</h3>
<ul>
  <li>평소에 반복문을 통해 문제를 많이 푸는데 완전 탐색 알고리즘과 관련지어 생각해볼 수 있었고, 완전탐색 기법을 어떻게 활용해야 효율적일지 공부할 수 있었다.</li>
</ul>
:ET