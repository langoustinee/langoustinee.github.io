I"1%<p><br /></p>
<center><img src="/assets/images/programmers/20230303_01.png" width="100%" /></center>
<center><img src="/assets/images/programmers/20230303_02.png" width="100%" /></center>
<p><br /></p>

<p><br /></p>

<h3 id="문제-풀이">문제 풀이</h3>
<hr />
<p>이번 <code class="language-plaintext highlighter-rouge">기사단원의 무기</code> 문제는 전반적인 구현까지의 과정은 단순하나 중간에 필요한 <strong>약수 개수를 구하는 알고리즘</strong>을 잘 구성해야 한다.</p>

<p><br /></p>

<h4 id="아이디어-도출">아이디어 도출</h4>
<ul>
  <li>주어진 number 만큼 1부터 number까지 배열로 만든다.</li>
  <li>위에서 만든 배열을 순회하면서 각 요소마다 <strong>약수의 개수</strong>를 구하고 이를 공격력으로 칭한 변수에 담는다.
    <ul>
      <li>약수의 개수를 구하는 로직을 <strong>별도의 함수에서 수행</strong>한다.</li>
    </ul>
  </li>
  <li>구한 공격력(약수의 개수)가 limit보다 크다면, power로 대체한다.</li>
  <li>마지막으로 모든 공격력의 누적합을 구하면 요구하는 철의 무게가 된다.</li>
</ul>

<h4 id="일반적으로-약수의-개수-구하기">일반적으로 약수의 개수 구하기</h4>
<p>이 방법은 number의 수가 커질수록 그만큼 반복문이 돌아야 하기 때문에 시간적으로 매우 비효율적이다.
해당 방법으로 약수를 구하는 함수를 구성하였더니, 시간초과가 발생하였다.</p>

<p>문제의 제한사항을 살펴보니 다음과 같았다.</p>

<ul>
  <li>1 ≤ number ≤ 100,000</li>
  <li>2 ≤ limit ≤ 100</li>
  <li>1 ≤ power ≤ limit</li>
</ul>

<p>number가 최대 십만까지 주어질 수 있기에 그만큼 배열의 길이가 늘어날테니 이를 고려하기 위해서는 결국 약수를 구하는 로직의 시간을 줄여야 한다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre><span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">n</span><span class="o">;</span> <span class="n">i</span><span class="o">++){</span>
    <span class="k">if</span><span class="o">(</span><span class="n">n</span> <span class="o">%</span> <span class="n">i</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="n">cnt</span><span class="o">++;</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="약수의-개수를-보다-효율적으로-구하기">약수의 개수를 보다 효율적으로 구하기</h4>
<p>시간초과 해결을 위해 약수 개수 구하는 알고리즘 수정</p>

<p><br /><br /></p>

<h3 id="작성-코드">작성 코드</h3>
<hr />
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span> <span class="n">number</span><span class="o">,</span> <span class="kt">int</span> <span class="n">limit</span><span class="o">,</span> <span class="kt">int</span> <span class="n">power</span><span class="o">)</span> <span class="o">{</span>

        <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="kt">int</span><span class="o">[]</span> <span class="n">knights</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">number</span><span class="o">];</span>

        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">number</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="n">knights</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">;</span>
        <span class="o">}</span>

        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">knights</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="kt">int</span> <span class="n">atk</span> <span class="o">=</span> <span class="n">divisor</span><span class="o">(</span><span class="n">knights</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
            <span class="k">if</span><span class="o">(</span><span class="n">atk</span> <span class="o">&gt;</span> <span class="n">limit</span><span class="o">)</span> <span class="n">atk</span> <span class="o">=</span> <span class="n">power</span><span class="o">;</span>
            <span class="n">answer</span> <span class="o">+=</span> <span class="n">atk</span><span class="o">;</span>
        <span class="o">}</span>
        
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
    
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">divisor</span><span class="o">(</span><span class="kt">int</span> <span class="n">n</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">cnt</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="c1">// 더 효율적인 방법</span>
        <span class="c1">// number의 약수가 1일 때 다른 약수는 number/1이 되므로 다른 하나의 약수는 number가 된다.</span>
        <span class="c1">// number의 약수 중 하나가 i 라고 했을 때, 다른 약수는 number / i 가 되므로 하나의 약수를 알면 다른 하나의 존재가 보장된다.</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span> <span class="n">i</span><span class="o">*</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">n</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="n">i</span> <span class="o">*</span> <span class="n">i</span> <span class="o">==</span> <span class="n">n</span><span class="o">)</span> <span class="n">cnt</span><span class="o">++;</span>
            <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">n</span> <span class="o">%</span> <span class="n">i</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="n">cnt</span><span class="o">+=</span><span class="mi">2</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">cnt</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
        <span class="nc">Solution</span> <span class="n">sol</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Solution</span><span class="o">();</span>
        <span class="kt">int</span> <span class="n">number</span> <span class="o">=</span> <span class="mi">10</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">limit</span> <span class="o">=</span> <span class="mi">3</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">power</span> <span class="o">=</span> <span class="mi">2</span><span class="o">;</span>
        <span class="n">sol</span><span class="o">.</span><span class="na">solution</span><span class="o">(</span><span class="n">number</span><span class="o">,</span> <span class="n">limit</span><span class="o">,</span> <span class="n">power</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="회고">회고</h3>
<ul>
  <li></li>
</ul>
:ET