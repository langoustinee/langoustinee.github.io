I"pD<p><br /><br /></p>

<h3 id="문제-풀이">문제 풀이</h3>

<hr />

<p>이 문제는 자료구조 중 <strong>양쪽 연산이 가능한 Deque(덱)</strong>을 이용해 풀 수 있는 문제이다.</p>

<p>덱을 이용하는 이유는 바로 시간초과를 피하기 위함이다. 필자는 아무 생각 없이 문제 제약사항을 읽지 않고 배열을 뒤집는 R 함수의 과정에서 Collections.reverse() 메소드를 이용해 풀었더니 <strong>시간초과가 발생</strong>했다.</p>

<p>그런데 문제를 조금 만 더 자세히 살펴보면, 주어진 배열을 뒤집을 필요가 없다는 것을 알 수 있었다. 아래 예시를 살펴보자.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
</pre></td><td class="rouge-code"><pre><span class="o">[</span><span class="mi">1</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="mi">3</span><span class="o">,</span><span class="mi">4</span><span class="o">],</span> <span class="n">front</span><span class="o">=</span><span class="mi">1</span>

<span class="mi">1</span><span class="o">.</span> <span class="no">R</span> <span class="n">함수</span> <span class="n">실행</span>
<span class="o">[</span><span class="mi">1</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="mi">3</span><span class="o">,</span><span class="mi">4</span><span class="o">]</span> <span class="n">front</span><span class="o">=</span><span class="mi">4</span>

<span class="mi">2</span><span class="o">.</span> <span class="no">D</span> <span class="n">함수</span> <span class="n">실행</span>
<span class="o">[</span><span class="mi">1</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="mi">3</span><span class="o">]</span> <span class="n">front</span><span class="o">=</span><span class="mi">3</span>

<span class="mi">2</span><span class="o">.</span> <span class="no">D</span> <span class="n">함수</span> <span class="n">실행</span>
<span class="o">[</span><span class="mi">1</span><span class="o">,</span><span class="mi">2</span><span class="o">]</span> <span class="n">front</span><span class="o">=</span><span class="mi">2</span>

<span class="o">=&gt;</span> <span class="o">[</span><span class="mi">2</span><span class="o">,</span><span class="mi">1</span><span class="o">]</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><br /></p>

<h4 id="아이디어-도출">아이디어 도출</h4>

<p><br /></p>

<p>문제 풀이를 위해 작성한 코드는 아래와 같다.</p>

<h3 id="작성코드">작성코드</h3>

<hr />

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">java.io.*</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>    

    <span class="c1">// 전역으로 사용할 Deque 선언</span>
    <span class="kd">static</span> <span class="nc">ArrayDeque</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">d</span><span class="o">;</span>

    <span class="c1">// 각 테스트케이스별 결과를 담을 StringBuilder 선언</span>
    <span class="kd">static</span> <span class="nc">StringBuilder</span> <span class="n">sb</span><span class="o">;</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">IOException</span> <span class="o">{</span>

        <span class="cm">/**
         * Deque을 활용해 R 함수를 구현하는 것이 핵심이다.
         */</span>

        <span class="nc">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>
        <span class="nc">BufferedWriter</span> <span class="n">bw</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedWriter</span><span class="o">(</span><span class="k">new</span> <span class="nc">OutputStreamWriter</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">));</span>
        
        <span class="kt">int</span> <span class="no">T</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="no">T</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>

            <span class="c1">// 주어진 배열 원소를 담아 연산을 수행할 Deque</span>
            <span class="n">d</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayDeque</span><span class="o">&lt;&gt;();</span>

            <span class="c1">// 결과를 담을 문자열</span>
            <span class="n">sb</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringBuilder</span><span class="o">();</span>

            <span class="c1">// 입력으로 주어지는 함수, 배열의 길이, 배열 원소</span>
            <span class="nc">String</span> <span class="n">p</span> <span class="o">=</span> <span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">();</span>
            <span class="kt">int</span> <span class="n">length</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
            <span class="nc">String</span> <span class="n">input_nums</span> <span class="o">=</span> <span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">();</span>

            <span class="c1">// 주어진 배열이 함수를 수행할 수 있는 원소가 있을 경우만 연산을 수행한다.</span>
            <span class="k">if</span><span class="o">(</span><span class="n">length</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
                <span class="c1">// 주어진 배열 파싱하여 Deque에 답는다.</span>
                <span class="n">input_nums</span> <span class="o">=</span> <span class="n">input_nums</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="n">input_nums</span><span class="o">.</span><span class="na">length</span><span class="o">()-</span><span class="mi">1</span><span class="o">);</span>
                <span class="nc">String</span><span class="o">[]</span> <span class="n">nums</span> <span class="o">=</span> <span class="n">input_nums</span><span class="o">.</span><span class="na">split</span><span class="o">(</span><span class="s">","</span><span class="o">);</span>
                <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">j</span><span class="o">&lt;</span><span class="n">nums</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
                    <span class="n">d</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">nums</span><span class="o">[</span><span class="n">j</span><span class="o">]));</span>
                <span class="o">}</span>
            <span class="o">}</span>
            
            <span class="cm">/**
             * 함수 수행 - R, D
             * R일 때 Collections.reverse() 메소드를 사용하면 시간초과가 발생한다.
             * Deque의 특성을 이용해 양쪽으로 front를 변경해가며 연산을 수행하면 된다.
             */</span>
            <span class="no">AC</span><span class="o">(</span><span class="n">p</span><span class="o">,</span> <span class="n">d</span><span class="o">);</span>

            <span class="c1">// AC 함수 호출을 통해 쌓인 StringBuilder 출력.</span>
            <span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">sb</span><span class="o">+</span><span class="s">"\n"</span><span class="o">);</span>
            
        <span class="o">}</span>

        <span class="n">bw</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
        <span class="n">br</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
    <span class="o">}</span>

    <span class="cm">/**
     * R 함수시 스위치만 해준 후, Deque에 D 연산으로 양쪽 제거를 먼저 한다.
     * D 연산이 모두 종료된 후 스위치변수와 Deque 원소를 통해 내림차순이나 오름차순 정렬을 해준다.
     */</span>
    <span class="kd">static</span> <span class="kt">void</span> <span class="nf">AC</span><span class="o">(</span><span class="nc">String</span> <span class="n">p</span><span class="o">,</span> <span class="nc">ArrayDeque</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">d</span><span class="o">)</span> <span class="o">{</span>
        
        <span class="nc">String</span><span class="o">[]</span> <span class="n">cmds</span> <span class="o">=</span> <span class="n">p</span><span class="o">.</span><span class="na">split</span><span class="o">(</span><span class="s">""</span><span class="o">);</span>
        
        <span class="c1">// R 함수를 수행하기 위해 양쪽으로 스위치하기 위한 변수</span>
        <span class="kt">boolean</span> <span class="n">reverse</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>

        <span class="k">for</span><span class="o">(</span><span class="nc">String</span> <span class="n">cmd</span> <span class="o">:</span> <span class="n">cmds</span><span class="o">)</span> <span class="o">{</span>
            <span class="c1">// R 함수로 인해 뒤집어야 할 경우 스위치한다.</span>
            <span class="k">if</span><span class="o">(</span><span class="n">cmd</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"R"</span><span class="o">))</span> <span class="o">{</span>
                <span class="n">reverse</span> <span class="o">=</span> <span class="o">!</span><span class="n">reverse</span><span class="o">;</span>
            <span class="o">}</span>
            <span class="cm">/**
             * D 함수일 경우 빈 덱을 삭제하려고 할 경우 error를 담는다.
             * 
             */</span>
            <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">cmd</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"D"</span><span class="o">))</span> <span class="o">{</span>
                <span class="k">if</span><span class="o">(</span><span class="n">reverse</span><span class="o">)</span> <span class="o">{</span>
                    <span class="k">if</span><span class="o">(</span><span class="n">d</span><span class="o">.</span><span class="na">pollLast</span><span class="o">()</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
                        <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"error"</span><span class="o">);</span>
                        <span class="k">return</span><span class="o">;</span>
                    <span class="o">}</span>
                <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
                    <span class="k">if</span><span class="o">(</span><span class="n">d</span><span class="o">.</span><span class="na">pollFirst</span><span class="o">()</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
                        <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"error"</span><span class="o">);</span>
                        <span class="k">return</span><span class="o">;</span>
                    <span class="o">}</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>

        <span class="cm">/**
         * D 연산 종료 후 배열 원소를 정렬하여 저장한다. 
         * reverse==true라면 마지막 수 저장후, 내핌차순(덱의 역방향) 정렬
         * reverse==false라면 첫번째 수 저장후, 오름차순(덱의 정방향) 정렬
         * 이떄, Duque의 원소가 1개 이상 있어야 한다.
         */</span>
        <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"["</span><span class="o">);</span>
        <span class="k">if</span><span class="o">(</span><span class="n">d</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="n">reverse</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">d</span><span class="o">.</span><span class="na">pollLast</span><span class="o">());</span>
                <span class="k">while</span><span class="o">(!</span><span class="n">d</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">())</span> <span class="o">{</span>
                    <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">","</span> <span class="o">+</span> <span class="n">d</span><span class="o">.</span><span class="na">pollLast</span><span class="o">());</span>
                <span class="o">}</span>
            <span class="o">}</span> 
            <span class="k">else</span> <span class="o">{</span>
                <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">d</span><span class="o">.</span><span class="na">pollFirst</span><span class="o">());</span>
                <span class="k">while</span><span class="o">(!</span><span class="n">d</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">())</span> <span class="o">{</span>
                    <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">","</span> <span class="o">+</span> <span class="n">d</span><span class="o">.</span><span class="na">pollFirst</span><span class="o">());</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>
        
        <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"]"</span><span class="o">);</span>

    <span class="o">}</span>

<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="출처">출처</h3>

<hr />

<ul>
  <li>해당 문제의 저작권은 문제를 만든이에게 있으며 자세한 내용은 <a href="https://www.acmicpc.net/problem/5430">문제 링크</a>에서 참조바랍니다.</li>
</ul>
:ET