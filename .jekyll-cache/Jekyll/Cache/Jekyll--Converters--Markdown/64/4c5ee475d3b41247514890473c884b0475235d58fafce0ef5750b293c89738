I">+<p><br /></p>
<center><img src="/assets/images/programmers/20221103_01.png" width="100%" /></center>
<p><br /></p>

<p><br /></p>

<h3 id="문제-풀이">문제 풀이</h3>
<hr />
<p>문재의 지문은 어려워 보이지만 테스트케이스를 잘 보면 쉽게 풀 수 있다. <br />
요구하는 내용을 잘 살펴보면 <strong>1번, 2번, 3번 음식을 몇 번 먹었는지를 ‘데칼코마니’처럼 “0”을 사이에 두고 출력</strong>하면 된다.</p>

<p><br /></p>

<h4 id="아이디어-도출">아이디어 도출</h4>
<ul>
  <li>food 배열의 1번째 음식인 1번째 원소부터 2명이서 나누어 먹을 수 있는지를 확인하며 <strong>남는 음식은 신경쓰지 않고 2명에게 분배</strong>한다.</li>
  <li>두명 모두 같은 음식 배치로 음식을 먹어야 하기에 <strong>첫번째 선수의 음식 배치를 거꾸로하면 두번째 선수의 음식 배치</strong>가 된다.
    <ul>
      <li>결국, 첫번째 선수의 음식 배치만 구하면 <strong>두번째 선수의 음식배치는 별도로 구하지 않아도 된다.</strong></li>
    </ul>
  </li>
  <li>주어지는 food 배열의 0번째 원소, 즉 물의 양은 1로 고정이기에 신경쓰지 않아도 된다.</li>
</ul>

<p><br />
아이디어를 장황하게 작성하긴 했지만, 목적은 단순하다. <br />
핵심은 2명 중 첫번째 선수의 음식 배치를 구하면 두번째 선수의 음식배치는 반대로 하면 구할 수 있다는 것이다. <br />
바로 코드를 작성해보자.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="nc">StringBuilder</span> <span class="n">res</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringBuilder</span><span class="o">();</span>
<span class="nc">StringBuilder</span> <span class="n">first_player</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringBuilder</span><span class="o">();</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>StringBuilder를 활용하여 음식 배치를 담으려 한다. <br />
먼저 두 선수의 음식 배치를 담을 res와 첫번째 선수의 음식배치를 담을 first_player를 선언하자.</p>

<blockquote>
  <p><strong>왜 첫번째 선수의 음식배치를 담을 StringBuilder를 별도로 만들었나?</strong> <br />
첫번째 선수의 음식 배치를 구하고 이를 반대로 뒤집어서 두번째 선수의 음식배치를 구해야 하는데, <strong>물인 “0”을 중간에 추가한다면 첫번째 선수의 음식배치에 “0”이 포함된 채로 뒤집어지기 때문에</strong> 별도로 2개의 StringBuilder에 담았다.</p>
</blockquote>

<p><br /></p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="rouge-code"><pre><span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">food</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
    <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">j</span><span class="o">&lt;</span><span class="n">food</span><span class="o">[</span><span class="n">i</span><span class="o">]/</span><span class="mi">2</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
        <span class="n">res</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
        <span class="n">first_player</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>다음으로 첫번째 선수의 음식 배치를 구한다. food 배열에서 1번음식부터 N번째 음식이 몇가지 준비되었는지 확인하고 <br />
2명의 선수가 나눠먹도록 N번째 음식을 2로 나누어 분배한다. 결국 첫번째 선수가 먹어야할 음식배치를 구할 수 있게 된다. <br />
또한, 이중 for문 종료후 반대로 뒤집어 두번째 선수의 음식배치를 구하기 위해 첫번째 선수의 음식배치도 함께 담는다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre><span class="n">first_player</span><span class="o">.</span><span class="na">reverse</span><span class="o">();</span>
<span class="n">res</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"0"</span><span class="o">);</span>
<span class="n">res</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">first_player</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><br /><br /></p>

<h3 id="작성-코드">작성 코드</h3>
<hr />
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">Scanner</span> <span class="n">sc</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Scanner</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>

        <span class="kt">int</span><span class="o">[]</span> <span class="n">food</span> <span class="o">=</span> <span class="o">{</span><span class="mi">1</span><span class="o">,</span><span class="mi">3</span><span class="o">,</span><span class="mi">4</span><span class="o">,</span><span class="mi">6</span><span class="o">};</span>
        <span class="c1">// int[] food = {1,7,1,2};</span>
        <span class="c1">// int[] food = {1,5,3,4};</span>

        <span class="kt">long</span> <span class="n">start</span> <span class="o">=</span> <span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        <span class="n">solution</span><span class="o">(</span><span class="n">food</span><span class="o">);</span>
        <span class="kt">long</span> <span class="n">end</span> <span class="o">=</span> <span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"\n수행시간 = "</span> <span class="o">+</span> <span class="o">(</span><span class="n">end</span><span class="o">-</span><span class="n">start</span><span class="o">));</span>
    <span class="o">}</span>
    
    <span class="kd">public</span> <span class="kd">static</span> <span class="nc">String</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">food</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">StringBuilder</span> <span class="n">res</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringBuilder</span><span class="o">();</span>
        <span class="nc">StringBuilder</span> <span class="n">first_player</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringBuilder</span><span class="o">();</span>

        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">food</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">j</span><span class="o">&lt;</span><span class="n">food</span><span class="o">[</span><span class="n">i</span><span class="o">]/</span><span class="mi">2</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
                <span class="n">res</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
                <span class="n">first_player</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
            <span class="o">}</span>
        <span class="o">}</span>
        
        <span class="n">first_player</span><span class="o">.</span><span class="na">reverse</span><span class="o">();</span>
        <span class="n">res</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"0"</span><span class="o">);</span>
        <span class="n">res</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">first_player</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>

        <span class="k">return</span> <span class="n">res</span><span class="o">.</span><span class="na">toString</span><span class="o">();</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="회고">회고</h3>
<ul>
  <li></li>
</ul>
:ET