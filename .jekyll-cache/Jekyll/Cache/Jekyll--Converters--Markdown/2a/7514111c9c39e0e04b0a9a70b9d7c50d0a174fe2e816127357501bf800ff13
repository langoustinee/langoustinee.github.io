I"Ӏ<p><br /><br /></p>

<h3 id="문제-풀이">문제 풀이</h3>

<hr />

<p>이번 문제는 <strong>완전 탐색</strong>을 이용해 풀 수 있는 문제이다.</p>

<p><br /></p>

<h4 id="아이디어-도출">아이디어 도출</h4>

<p>이 문제는 완전탐색을 통해 주어진 2차원 배열을 순회하면서 조건에 부합하는지를 확인하면 된다.</p>

<p>문제 풀이를 위한 아이디어를 살퍄보자.</p>

<ol>
  <li>땅을 평탄화하기 위해 쌓을 수 있는 <strong>최소 층과 최대 층 수</strong>를 구한다.</li>
  <li>층별로 블록을 채우거나 제거한 후의 <strong>블록의 개수가 0개 이상(양수)</strong>이어야 한다.</li>
  <li>층별로 평탄화 작업에 걸리는 시간을 통해 가장 적게 걸리는 <strong>최소시간</strong>과 그때의 <strong>층수</strong>를 구하면 된다.</li>
</ol>

<p>말로만 들으면 잘 모를 수 있으니 예시를 들어보자.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre><span class="mi">2</span> <span class="mi">2</span> <span class="mi">2</span>
<span class="mi">5</span> <span class="mi">1</span>
<span class="mi">2</span> <span class="mi">5</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>위 입력예제를 들어보았을 때, 가장 낮은 블록의 높이는 1층부터 가장 높은 블록의 높이는 5층까지 존재한다. 이를 통해 우리가 평탄화를 통해 만들 수 있는 땅의 높이는 1층부터 5층까지 만들 수 있다는 것이다. 그러면 단순하게 1~5까지 순회하며 평탄화 작업을 실시하여 걸리는 시간을 계산하면 된다.</p>

<blockquote>
  <p>1층으로 만들 경우 <br /></p>
</blockquote>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre><span class="mi">5</span><span class="n">층</span> <span class="o">-&gt;</span> <span class="mi">1</span><span class="n">층으로</span> <span class="n">만들기</span> <span class="n">위해</span> <span class="n">블록을</span> <span class="n">제거한다</span><span class="o">.</span> <span class="n">얻는</span> <span class="n">블록의</span> <span class="n">수는</span> <span class="mi">4</span><span class="n">개이며</span><span class="o">,</span> <span class="n">평탄화</span> <span class="n">작업에</span> <span class="n">걸리는</span> <span class="n">시간은</span> <span class="mi">8</span><span class="n">초이다</span><span class="o">.</span>
<span class="mi">1</span><span class="n">층</span> <span class="o">-&gt;</span> <span class="n">층이</span> <span class="n">같기에</span> <span class="n">작업</span> <span class="n">필요</span> <span class="no">X</span>
<span class="mi">2</span><span class="n">층</span> <span class="o">-&gt;</span> <span class="mi">1</span><span class="n">층으로</span> <span class="n">만들기</span> <span class="n">위해</span> <span class="n">블록을</span> <span class="n">제거한다</span><span class="o">.</span> <span class="n">얻는</span> <span class="n">블록의</span> <span class="n">수는</span> <span class="mi">1</span><span class="n">개이며</span><span class="o">,</span> <span class="n">평탄화</span> <span class="n">작업에</span> <span class="n">걸리는</span> <span class="n">시간은</span> <span class="mi">2</span><span class="n">초이다</span><span class="o">.</span>
<span class="mi">5</span><span class="n">층</span> <span class="o">-&gt;</span> <span class="mi">1</span><span class="n">층으로</span> <span class="n">만들기</span> <span class="n">위해</span> <span class="n">블록을</span> <span class="n">제거한다</span><span class="o">.</span> <span class="n">얻는</span> <span class="n">블록의</span> <span class="n">수는</span> <span class="mi">4</span><span class="n">개이며</span><span class="o">,</span> <span class="n">평탄화</span> <span class="n">작업에</span> <span class="n">걸리는</span> <span class="n">시간은</span> <span class="mi">8</span><span class="n">초이다</span><span class="o">.</span>

<span class="n">총</span> <span class="n">평탄화</span> <span class="n">작업</span> <span class="nl">시간:</span> <span class="mi">18</span><span class="n">초</span>
<span class="n">인벤토리</span> <span class="n">블록의</span> <span class="nl">개수:</span> <span class="mi">11</span><span class="n">개</span><span class="o">(</span><span class="n">기존2개</span><span class="o">+</span><span class="mi">8</span><span class="n">개</span><span class="o">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<blockquote>
  <p>2층으로 만들 경우 <br /></p>
</blockquote>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre><span class="mi">5</span><span class="n">층</span> <span class="o">-&gt;</span> <span class="mi">2</span><span class="n">층으로</span> <span class="n">만들기</span> <span class="n">위해</span> <span class="n">블록을</span> <span class="n">제거한다</span><span class="o">.</span> <span class="n">얻는</span> <span class="n">블록의</span> <span class="n">수는</span> <span class="mi">3</span><span class="n">개이며</span><span class="o">,</span> <span class="n">평탄화</span> <span class="n">작업에</span> <span class="n">걸리는</span> <span class="n">시간은</span> <span class="mi">6</span><span class="n">초이다</span><span class="o">.</span>
<span class="mi">1</span><span class="n">층</span> <span class="o">-&gt;</span> <span class="mi">2</span><span class="n">층으로</span> <span class="n">만들기</span> <span class="n">위해</span> <span class="n">블록을</span> <span class="n">채운다</span><span class="o">.</span> <span class="n">차감되는</span> <span class="n">블록</span> <span class="n">수는</span> <span class="o">-</span><span class="mi">1</span><span class="n">개이며</span><span class="o">,</span> <span class="n">평탄화</span> <span class="n">작업에</span> <span class="n">걸리는</span> <span class="n">시간은</span> <span class="mi">1</span><span class="n">초이다</span><span class="o">.</span>
<span class="mi">2</span><span class="n">층</span> <span class="o">-&gt;</span> <span class="n">층이</span> <span class="n">같기에</span> <span class="n">작업</span> <span class="n">필요</span> <span class="no">X</span>
<span class="mi">5</span><span class="n">층</span> <span class="o">-&gt;</span> <span class="mi">2</span><span class="n">층으로</span> <span class="n">만들기</span> <span class="n">위해</span> <span class="n">블록을</span> <span class="n">제거한다</span><span class="o">.</span> <span class="n">얻는</span> <span class="n">블록의</span> <span class="n">수는</span> <span class="mi">3</span><span class="n">개이며</span><span class="o">,</span> <span class="n">평탄화</span> <span class="n">작업에</span> <span class="n">걸리는</span> <span class="n">시간은</span> <span class="mi">6</span><span class="n">초이다</span><span class="o">.</span>

<span class="n">총</span> <span class="n">평탄화</span> <span class="n">작업</span> <span class="nl">시간:</span> <span class="mi">13</span><span class="n">초</span>
<span class="n">인벤토리</span> <span class="n">블록의</span> <span class="nl">개수:</span> <span class="mi">7</span><span class="n">개</span><span class="o">(</span><span class="n">기존2개</span><span class="o">+</span><span class="mi">5</span><span class="n">개</span><span class="o">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<blockquote>
  <p>3층으로 만들 경우 <br /></p>
</blockquote>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre><span class="mi">5</span><span class="n">층</span> <span class="o">-&gt;</span> <span class="mi">3</span><span class="n">층으로</span> <span class="n">만들기</span> <span class="n">위해</span> <span class="n">블록을</span> <span class="n">제거한다</span><span class="o">.</span> <span class="n">얻는</span> <span class="n">블록의</span> <span class="n">수는</span> <span class="mi">2</span><span class="n">개이며</span><span class="o">,</span> <span class="n">평탄화</span> <span class="n">작업에</span> <span class="n">걸리는</span> <span class="n">시간은</span> <span class="mi">4</span><span class="n">초이다</span><span class="o">.</span>
<span class="mi">1</span><span class="n">층</span> <span class="o">-&gt;</span> <span class="mi">3</span><span class="n">층으로</span> <span class="n">만들기</span> <span class="n">위해</span> <span class="n">블록을</span> <span class="n">채운다</span><span class="o">.</span> <span class="n">차감되는</span> <span class="n">블록</span> <span class="n">수는</span> <span class="o">-</span><span class="mi">2</span><span class="n">개이며</span><span class="o">,</span> <span class="n">평탄화</span> <span class="n">작업에</span> <span class="n">걸리는</span> <span class="n">시간은</span> <span class="mi">2</span><span class="n">초이다</span><span class="o">.</span>
<span class="mi">2</span><span class="n">층</span> <span class="o">-&gt;</span> <span class="mi">3</span><span class="n">층으로</span> <span class="n">만들기</span> <span class="n">위해</span> <span class="n">블록을</span> <span class="n">채운다</span><span class="o">.</span> <span class="n">차감되는</span> <span class="n">블록</span> <span class="n">수는</span> <span class="o">-</span><span class="mi">1</span><span class="n">개이며</span><span class="o">,</span> <span class="n">평탄화</span> <span class="n">작업에</span> <span class="n">걸리는</span> <span class="n">시간은</span> <span class="mi">1</span><span class="n">초이다</span><span class="o">.</span>
<span class="mi">5</span><span class="n">층</span> <span class="o">-&gt;</span> <span class="mi">3</span><span class="n">층으로</span> <span class="n">만들기</span> <span class="n">위해</span> <span class="n">블록을</span> <span class="n">제거한다</span><span class="o">.</span> <span class="n">얻는</span> <span class="n">블록의</span> <span class="n">수는</span> <span class="mi">2</span><span class="n">개이며</span><span class="o">,</span> <span class="n">평탄화</span> <span class="n">작업에</span> <span class="n">걸리는</span> <span class="n">시간은</span> <span class="mi">4</span><span class="n">초이다</span><span class="o">.</span>

<span class="n">총</span> <span class="n">평탄화</span> <span class="n">작업</span> <span class="nl">시간:</span> <span class="mi">11</span><span class="n">초</span>
<span class="n">인벤토리</span> <span class="n">블록의</span> <span class="nl">개수:</span> <span class="mi">3</span><span class="n">개</span><span class="o">(</span><span class="n">기존2개</span><span class="o">+</span><span class="mi">1</span><span class="n">개</span><span class="o">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<blockquote>
  <p>4층으로 만들 경우 <br /></p>
</blockquote>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre><span class="mi">5</span><span class="n">층</span> <span class="o">-&gt;</span> <span class="mi">4</span><span class="n">층으로</span> <span class="n">만들기</span> <span class="n">위해</span> <span class="n">블록을</span> <span class="n">제거한다</span><span class="o">.</span> <span class="n">얻는</span> <span class="n">블록의</span> <span class="n">수는</span> <span class="mi">1</span><span class="n">개이며</span><span class="o">,</span> <span class="n">평탄화</span> <span class="n">작업에</span> <span class="n">걸리는</span> <span class="n">시간은</span> <span class="mi">2</span><span class="n">초이다</span><span class="o">.</span>
<span class="mi">1</span><span class="n">층</span> <span class="o">-&gt;</span> <span class="mi">4</span><span class="n">층으로</span> <span class="n">만들기</span> <span class="n">위해</span> <span class="n">블록을</span> <span class="n">채운다</span><span class="o">.</span> <span class="n">차감되는</span> <span class="n">블록</span> <span class="n">수는</span> <span class="o">-</span><span class="mi">3</span><span class="n">개이며</span><span class="o">,</span> <span class="n">평탄화</span> <span class="n">작업에</span> <span class="n">걸리는</span> <span class="n">시간은</span> <span class="mi">3</span><span class="n">초이다</span><span class="o">.</span>
<span class="mi">2</span><span class="n">층</span> <span class="o">-&gt;</span> <span class="mi">4</span><span class="n">층으로</span> <span class="n">만들기</span> <span class="n">위해</span> <span class="n">블록을</span> <span class="n">채운다</span><span class="o">.</span> <span class="n">차감되는</span> <span class="n">블록</span> <span class="n">수는</span> <span class="o">-</span><span class="mi">2</span><span class="n">개이며</span><span class="o">,</span> <span class="n">평탄화</span> <span class="n">작업에</span> <span class="n">걸리는</span> <span class="n">시간은</span> <span class="mi">2</span><span class="n">초이다</span><span class="o">.</span>
<span class="mi">5</span><span class="n">층</span> <span class="o">-&gt;</span> <span class="mi">4</span><span class="n">층으로</span> <span class="n">만들기</span> <span class="n">위해</span> <span class="n">블록을</span> <span class="n">제거한다</span><span class="o">.</span> <span class="n">얻는</span> <span class="n">블록의</span> <span class="n">수는</span> <span class="mi">1</span><span class="n">개이며</span><span class="o">,</span> <span class="n">평탄화</span> <span class="n">작업에</span> <span class="n">걸리는</span> <span class="n">시간은</span> <span class="mi">2</span><span class="n">초이다</span><span class="o">.</span>

<span class="n">총</span> <span class="n">평탄화</span> <span class="n">작업</span> <span class="nl">시간:</span> <span class="mi">9</span><span class="n">초</span>
<span class="n">인벤토리</span> <span class="n">블록의</span> <span class="nl">개수:</span> <span class="o">-</span><span class="mi">1</span><span class="n">개</span><span class="o">(</span><span class="n">기존2개</span><span class="o">+(-</span><span class="mi">3</span><span class="n">개</span><span class="o">))</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<blockquote>
  <p>5층으로 만들 경우 <br /></p>
</blockquote>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre><span class="mi">5</span><span class="n">층</span> <span class="o">-&gt;</span> <span class="n">층이</span> <span class="n">같기에</span> <span class="n">작업</span> <span class="n">필요</span> <span class="no">X</span>
<span class="mi">1</span><span class="n">층</span> <span class="o">-&gt;</span> <span class="mi">5</span><span class="n">층으로</span> <span class="n">만들기</span> <span class="n">위해</span> <span class="n">블록을</span> <span class="n">채운다</span><span class="o">.</span> <span class="n">차감되는</span> <span class="n">블록</span> <span class="n">수는</span> <span class="o">-</span><span class="mi">4</span><span class="n">개이며</span><span class="o">,</span> <span class="n">평탄화</span> <span class="n">작업에</span> <span class="n">걸리는</span> <span class="n">시간은</span> <span class="mi">4</span><span class="n">초이다</span><span class="o">.</span>
<span class="mi">2</span><span class="n">층</span> <span class="o">-&gt;</span> <span class="mi">5</span><span class="n">층으로</span> <span class="n">만들기</span> <span class="n">위해</span> <span class="n">블록을</span> <span class="n">채운다</span><span class="o">.</span> <span class="n">차감되는</span> <span class="n">블록</span> <span class="n">수는</span> <span class="o">-</span><span class="mi">3</span><span class="n">개이며</span><span class="o">,</span> <span class="n">평탄화</span> <span class="n">작업에</span> <span class="n">걸리는</span> <span class="n">시간은</span> <span class="mi">3</span><span class="n">초이다</span><span class="o">.</span>
<span class="mi">5</span><span class="n">층</span> <span class="o">-&gt;</span> <span class="n">층이</span> <span class="n">같기에</span> <span class="n">작업</span> <span class="n">필요</span> <span class="no">X</span>

<span class="n">총</span> <span class="n">평탄화</span> <span class="n">작업</span> <span class="nl">시간:</span> <span class="mi">7</span><span class="n">초</span>
<span class="n">인벤토리</span> <span class="n">블록의</span> <span class="nl">개수:</span> <span class="o">-</span><span class="mi">5</span><span class="n">개</span><span class="o">(</span><span class="n">기존2개</span><span class="o">+(-</span><span class="mi">7</span><span class="n">개</span><span class="o">))</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>위와 같이 1층부터 5층까지 평탄화 작업을 실시해가면서 구해낸** 최소시간은 11초**이며, 11초가 걸리는 층수는 3층이다.</p>

<p>필자가 적어둔 예제를 보면 알 수 있듯이. 층이 높아질 수록 시간과, 블록의 개수는 낮아지고, 높이는 높아진다.</p>

<p>이렇다면 위 행동을 반복할때, 블록이 0보다 낮아지기 전까지 계속 시간과 층을 저장하면, 제일 높은 층과 제일 낮은</p>

<p>저장 될 것이고, 블록이 음수가 되었을때 반복문을 종료하면 원하는 출력값을 얻을 수  있다.</p>

<p>주의할 점은 필자도 단순한거지만 간과해서 여러번 틀린 부분인데.</p>

<p>최소 시간이 올 수 있는 최댓값을 처음엔 1000을 잡았다… 크게 생각 못한 부분인걸 인정한다.</p>

<p>필자가 얼추 계산해봤을때 올 수 있는 최댓값은 6400만인것 같고, 넉넉 잡아 9999만으로 잡아줬다.</p>

<p>이것만 주의하면 크게 문제 될 건 없는 문제이다.</p>

<p><br /></p>

<p>문제 풀이를 위해 작성한 코드는 아래와 같다.</p>

<h3 id="작성코드">작성코드</h3>

<hr />

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
</pre></td><td class="rouge-code"><pre><span class="kn">package</span> <span class="nn">java_study</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.io.*</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>    

    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">IOException</span> <span class="o">{</span>
        
        <span class="nc">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>
        <span class="nc">BufferedWriter</span> <span class="n">bw</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedWriter</span><span class="o">(</span><span class="k">new</span> <span class="nc">OutputStreamWriter</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">));</span>
        
        <span class="nc">StringTokenizer</span> <span class="n">st</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>

        <span class="kt">int</span> <span class="no">N</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
        <span class="kt">int</span> <span class="no">M</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
        <span class="kt">int</span> <span class="no">B</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
        
        <span class="kt">int</span><span class="o">[][]</span> <span class="n">arr</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="no">N</span><span class="o">][</span><span class="no">M</span><span class="o">];</span>

        <span class="c1">// 만들 수 있는 가장 낮은 층과 가장 높은 층</span>
        <span class="kt">int</span> <span class="n">min_height</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">MAX_VALUE</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">max_height</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">MIN_VALUE</span><span class="o">;</span>

        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="no">N</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="n">st</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">j</span><span class="o">&lt;</span><span class="no">M</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
                <span class="n">arr</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
                <span class="n">min_height</span> <span class="o">=</span> <span class="nc">Math</span><span class="o">.</span><span class="na">min</span><span class="o">(</span><span class="n">min_height</span><span class="o">,</span> <span class="n">arr</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]);</span>
                <span class="n">max_height</span> <span class="o">=</span> <span class="nc">Math</span><span class="o">.</span><span class="na">max</span><span class="o">(</span><span class="n">max_height</span><span class="o">,</span> <span class="n">arr</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]);</span>
            <span class="o">}</span>
        <span class="o">}</span>

        <span class="c1">// 가장 낮은 층부터 가장 높은 층까지 작업에 걸리는 시간 중 최소시간을 담을 time 변수</span>
        <span class="kt">int</span> <span class="n">time</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">MAX_VALUE</span><span class="o">;</span>
        
        <span class="c1">// 최소시간일 경우 땅의 높이를 담을 floor 변수</span>
        <span class="kt">int</span> <span class="n">floor</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>

        <span class="cm">/**
         * 가장 낮은 층부터 높은 층까지 평탄화를 해가면서 층별로 걸리는 시간을 구한다.
         * 이때, 가장 최소시간이 걸리는 시간과 층수를 구하면 된다.
         */</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">idx</span><span class="o">=</span><span class="n">min_height</span><span class="o">;</span> <span class="n">idx</span><span class="o">&lt;=</span><span class="n">max_height</span><span class="o">;</span> <span class="n">idx</span><span class="o">++)</span> <span class="o">{</span>
            
            <span class="c1">// 층별로 작업에 걸리는 시간을 담을 sec 변수</span>
            <span class="kt">int</span> <span class="n">sec</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>            
            
            <span class="c1">// 층별로 작업 이후 인벤토리에 남은 블록의 개수</span>
            <span class="kt">int</span> <span class="n">block</span> <span class="o">=</span> <span class="no">B</span><span class="o">;</span>

            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="no">N</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
                <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">j</span><span class="o">&lt;</span><span class="no">M</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
                    
                    <span class="cm">/*
                     * 현재 블록의 높이가 만들어야 할 층보다 높다면 블록을 깎아 인벤토리에 넣는다.
                     * 블록을 깎을 때는 2배만큼 시간이 걸린다.
                     */</span>
                    <span class="k">if</span><span class="o">(</span><span class="n">arr</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]</span> <span class="o">&gt;</span> <span class="n">idx</span><span class="o">)</span> <span class="o">{</span>
                        <span class="n">sec</span> <span class="o">+=</span> <span class="o">(</span><span class="n">arr</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]</span> <span class="o">-</span> <span class="n">idx</span><span class="o">)</span> <span class="o">*</span> <span class="mi">2</span><span class="o">;</span>
                        <span class="n">block</span> <span class="o">+=</span> <span class="o">(</span><span class="n">arr</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]</span> <span class="o">-</span> <span class="n">idx</span><span class="o">);</span>
                    <span class="o">}</span>
                    <span class="cm">/**
                     * 현재 블록의 높이가 만드렁야 할 층보다 낮다면 인벤토리에 있는 블록으로 채운다.
                     * 블록을 채울 때는 1배만큼 시간이 걸린다.
                     */</span>
                    <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">arr</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]</span> <span class="o">&lt;</span> <span class="n">idx</span><span class="o">)</span> <span class="o">{</span>
                        <span class="n">sec</span> <span class="o">+=</span> <span class="o">(</span><span class="n">idx</span> <span class="o">-</span> <span class="n">arr</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]);</span>
                        <span class="n">block</span> <span class="o">-=</span> <span class="o">(</span><span class="n">idx</span> <span class="o">-</span> <span class="n">arr</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]);</span>
                    <span class="o">}</span>
                    
                <span class="o">}</span>
            <span class="o">}</span>

            <span class="c1">// 블록의 개수가 음수라면 블록을 채울 수가 없기 때문에 조건에 맞지 않는다.</span>
            <span class="k">if</span><span class="o">(</span><span class="n">block</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
                <span class="k">break</span><span class="o">;</span>
            <span class="o">}</span>

            <span class="c1">// 층별로 작업에 걸린 시간이 이전 층의 작업 시간보다 적다면, 현재 층의 작업시간과 층수를 저장한다.            </span>
            <span class="k">if</span><span class="o">(</span><span class="n">time</span> <span class="o">&gt;=</span> <span class="n">sec</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">time</span> <span class="o">=</span> <span class="n">sec</span><span class="o">;</span>      
                <span class="n">floor</span> <span class="o">=</span> <span class="n">idx</span><span class="o">;</span>
            <span class="o">}</span>
            
        <span class="o">}</span>
        
        <span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">time</span> <span class="o">+</span> <span class="s">" "</span> <span class="o">+</span> <span class="n">floor</span> <span class="o">+</span> <span class="s">"\n"</span><span class="o">);</span>

        <span class="n">bw</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
        <span class="n">br</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
    <span class="o">}</span>    

<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="출처">출처</h3>

<hr />

<ul>
  <li>해당 문제의 저작권은 문제를 만든이에게 있으며 자세한 내용은 <a href="https://www.acmicpc.net/problem/18111">문제 링크</a>에서 참조바랍니다.</li>
</ul>
:ET