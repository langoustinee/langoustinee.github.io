I"B<p><br /></p>

<center><img src="/assets/images/baekjoon/2447.png" /></center>

<p><br /><br /></p>

<h3 id="문제-풀이">문제 풀이</h3>
<hr />
<p>N이 3이라면 가운데 한칸이 공백인 사각형을 나타냄을 알 수 있다.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="rouge-code"><pre>N=3
***
* *
***
</pre></td></tr></tbody></table></code></pre></div></div>

<p><br /></p>

<p>그러면 N이 3보다 큰 거듭제곱일 경우는 어떨까? <br />
N이 9일 경우와 27일 경우에 별이 출력되는 패턴을 살펴보자. <br />
보기 편하도록 * 사이에 공백을 추가한 사진을 첨부한다</p>

<p><img src="/assets/images/baekjoon/2447-attach1.png" width="300" border-radius="1" /></p>

<p><br /></p>

<p><img src="/assets/images/baekjoon/2447-attach2.png" width="500" border-radius="1" /></p>

<p>잘 보면 N이 9일 때와 27일 때 모두 N이 3일 때의 블록을 <strong>3X3의 크기로 출력</strong>됨을 알 수 있다. <br />
즉 <strong>N/3 만큼 반복</strong>하여 각 블록을 채우고 있음을 알 수 있다.</p>

<ul>
  <li>N = 27일 경우는 9X9 크기의 별 사각형을 3X3 크기의 블록으로 출력한다. -&gt; 9번 출력</li>
  <li>N = 9일 경우는 3X3 크기의 별 사각형을 3X3 크기의 블록으로 출력한다. -&gt; 3번 출력</li>
  <li>N = 3일 경우는 3X3 크기의 별 사각형을 한 번 출력한다. -&gt; 1번 출력</li>
</ul>

<p>이를 통해 <strong>재귀함수 호출횟수는 N/3</strong>번이라는 것을 유추할 수 있다. <br /></p>

<h4 id="아이디어-도출">아이디어 도출</h4>
<p>재귀함수를 이용한 아이디어를 생각해보았다.</p>

<ol>
  <li>모든 원소에 공백값이 저장된 2차원 배열을 활용한다. <br />
 1.1 <strong>3X3 크기로 블록을 나누어 별을 출력한다고 생각하면 결국 가운데 칸인 (1,1) 좌표만 공백이 되면 된다.</strong> <br />
 1.2 결국 (1,1) 좌표가 아닌 경우는 *을 저장하면 된다. <br />
 1.3 모든 원소에 공백값을 저장하고 재귀함수를 통해 <strong>공백값이 아닌 위치에만 *을 저장</strong>한다. <br />
 1.4 <strong>재귀함수의 종료 조건</strong>은 (N/3)만큼 재귀함수가 호출되면서 결국 <strong>N이 1이 되는 순간에 2차원 배열에 *을 저장</strong>한다.</li>
  <li>N/3만큼 1번 과정을 수행하는 재귀함수를 호출한다.</li>
  <li>*과 공백이 저장된 2치원 배열을 출력한다.</li>
</ol>

<p><br /></p>

<p>위 아이디어를 통해 생각해낸 재귀함수의 코드를 작성해보자.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="kt">int</span> <span class="no">N</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>        
<span class="nc">String</span><span class="o">[][]</span> <span class="n">arr</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">String</span><span class="o">[</span><span class="no">N</span><span class="o">][</span><span class="no">N</span><span class="o">];</span>   
</pre></td></tr></tbody></table></code></pre></div></div>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="rouge-code"><pre><span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="no">N</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
    <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">j</span><span class="o">&lt;</span><span class="no">N</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
        <span class="n">arr</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]</span> <span class="o">=</span> <span class="s">" "</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>먼저 위 아이디어대로 2차원 배열을</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
</pre></td><td class="rouge-code"><pre><span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">star</span><span class="o">(</span><span class="nc">String</span><span class="o">[][]</span> <span class="n">arr</span><span class="o">,</span> <span class="kt">int</span> <span class="no">X</span><span class="o">,</span> <span class="kt">int</span> <span class="no">Y</span><span class="o">,</span> <span class="kt">int</span> <span class="no">N</span><span class="o">)</span> <span class="o">{</span>
    <span class="k">if</span><span class="o">(</span><span class="no">N</span> <span class="o">==</span> <span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">arr</span><span class="o">[</span><span class="no">X</span><span class="o">][</span><span class="no">Y</span><span class="o">]</span> <span class="o">=</span> <span class="s">"*"</span><span class="o">;</span>
        <span class="k">return</span><span class="o">;</span>
    <span class="o">}</span>
    <span class="k">else</span> <span class="o">{</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="mi">3</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">j</span><span class="o">&lt;</span><span class="mi">3</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
                <span class="k">if</span><span class="o">(!(</span><span class="n">i</span><span class="o">==</span><span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="n">j</span><span class="o">==</span><span class="mi">1</span><span class="o">))</span> <span class="o">{</span>
                    <span class="n">star</span><span class="o">(</span><span class="n">arr</span><span class="o">,</span> <span class="no">X</span><span class="o">+</span><span class="n">i</span><span class="o">*(</span><span class="no">N</span><span class="o">/</span><span class="mi">3</span><span class="o">),</span> <span class="no">Y</span><span class="o">+</span><span class="n">j</span><span class="o">*(</span><span class="no">N</span><span class="o">/</span><span class="mi">3</span><span class="o">),</span> <span class="o">(</span><span class="no">N</span><span class="o">/</span><span class="mi">3</span><span class="o">));</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>재귀함수 star는 매개변수로 2차원 배열과 x,y 좌표값, N을 받아 실행한다. <br />
N이 1이 될 때까지 가운데 칸, 즉 <strong>(1,1) 좌표값이 아닐 경우에만 *을 저장해야 하기에 2중 for문 내에 ‘!(i==1 &amp;&amp; j==1)’라는 조건을 부여</strong>했다. <br />
그렇게 N/3만큼 재귀함수를 호출해가며 <strong>N이 1이 되는 순간에 *을 저장</strong>하면 된다.</p>

<p><br /><br /></p>

<h3 id="작성코드">작성코드</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">java.io.*</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">IOException</span> <span class="o">{</span>
        <span class="nc">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>
        <span class="nc">BufferedWriter</span> <span class="n">bw</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedWriter</span><span class="o">(</span><span class="k">new</span> <span class="nc">OutputStreamWriter</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">));</span>

        <span class="kt">int</span> <span class="no">N</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>        
        <span class="nc">String</span><span class="o">[][]</span> <span class="n">arr</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">String</span><span class="o">[</span><span class="no">N</span><span class="o">][</span><span class="no">N</span><span class="o">];</span>        

        <span class="c1">// 1. 먼저 arr를 공백으로 채운다.</span>
        <span class="c1">// 2. star 함수에서 공백이 아닌 자리에 *을 채운다.</span>

        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="no">N</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">j</span><span class="o">&lt;</span><span class="no">N</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
                <span class="n">arr</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]</span> <span class="o">=</span> <span class="s">" "</span><span class="o">;</span>
            <span class="o">}</span>
        <span class="o">}</span>

        <span class="n">star</span><span class="o">(</span><span class="n">arr</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="no">N</span><span class="o">);</span>

        <span class="k">for</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">arrs</span> <span class="o">:</span> <span class="n">arr</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">for</span><span class="o">(</span><span class="nc">String</span> <span class="n">s</span> <span class="o">:</span> <span class="n">arrs</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">s</span><span class="o">+</span><span class="s">""</span><span class="o">);</span>
            <span class="o">}</span>
            <span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="s">"\n"</span><span class="o">);</span>
        <span class="o">}</span>

        <span class="n">bw</span><span class="o">.</span><span class="na">flush</span><span class="o">();</span>
        <span class="n">bw</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
        <span class="n">br</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
    <span class="o">}</span>   
    
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">star</span><span class="o">(</span><span class="nc">String</span><span class="o">[][]</span> <span class="n">arr</span><span class="o">,</span> <span class="kt">int</span> <span class="no">X</span><span class="o">,</span> <span class="kt">int</span> <span class="no">Y</span><span class="o">,</span> <span class="kt">int</span> <span class="no">N</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">if</span><span class="o">(</span><span class="no">N</span> <span class="o">==</span> <span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">arr</span><span class="o">[</span><span class="no">X</span><span class="o">][</span><span class="no">Y</span><span class="o">]</span> <span class="o">=</span> <span class="s">"*"</span><span class="o">;</span>
            <span class="k">return</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="k">else</span> <span class="o">{</span>
            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="mi">3</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
                <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">j</span><span class="o">&lt;</span><span class="mi">3</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
                    <span class="k">if</span><span class="o">(!(</span><span class="n">i</span><span class="o">==</span><span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="n">j</span><span class="o">==</span><span class="mi">1</span><span class="o">))</span> <span class="o">{</span>
                        <span class="n">star</span><span class="o">(</span><span class="n">arr</span><span class="o">,</span> <span class="no">X</span><span class="o">+</span><span class="n">i</span><span class="o">*(</span><span class="no">N</span><span class="o">/</span><span class="mi">3</span><span class="o">),</span> <span class="no">Y</span><span class="o">+</span><span class="n">j</span><span class="o">*(</span><span class="no">N</span><span class="o">/</span><span class="mi">3</span><span class="o">),</span> <span class="o">(</span><span class="no">N</span><span class="o">/</span><span class="mi">3</span><span class="o">));</span>
                    <span class="o">}</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="회고">회고</h3>
<ul>
  <li></li>
</ul>
:ET