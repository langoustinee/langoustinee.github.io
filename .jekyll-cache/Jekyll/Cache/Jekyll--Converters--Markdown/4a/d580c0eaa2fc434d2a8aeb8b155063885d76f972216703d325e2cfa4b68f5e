I"B.<p><br /><br /></p>

<h3 id="문제-풀이">문제 풀이</h3>

<hr />

<p>이번 문제는 <strong>다이나믹 프로그래밍(DP)</strong>을 이용해 풀 수 있다.</p>

<p><br /></p>

<h4 id="아이디어-도출">아이디어 도출</h4>

<p>이 문제는 재귀함수를 활용해 DP 점화식을 세워 풀어보려 한다.</p>

<p>N을 1로 만들기 위한 최소 연산 횟수를 구할 때, 꼭 3이나 2로 나누어야 최솟값이 나오는 것은 아니기에 <strong>1을 빼는 경우도 함께 고려</strong>해야 한다.
이를 통해 생각한 점화식은 다음과 같다.</p>

<blockquote>
  <p><code class="language-plaintext highlighter-rouge">D[i] = Math.min((N/3 or N/2) and N-1)</code></p>
</blockquote>

<ol>
  <li>6으로, 3으로, 2로 나눠지는 경우와 그렇지 않은 경우까지 총 4가지 조건을 세운다.</li>
  <li>4가지 조건 안에서 DP 테이블을 <strong>재귀 호출을 통해 구한 최솟값으로 갱신</strong>해주면 된다.
    <ul>
      <li>6으로 나눠지는 경우는 N/3, N/2, N-1 중의 최솟값으로 갱신</li>
      <li>3으로 나눠지는 경우는 N/3, N-1 주에 최솟값으로 갱신</li>
      <li>2로 나눠지는 경우는 N/2, N-1 중 최솟값으로 갱신</li>
      <li>그외는 1을 빼는 경우의 수를 재귀 호출로 구하면 된다.</li>
    </ul>
  </li>
  <li>각 재귀 호출 시 <strong>최솟값에 1을 더한 값이 현재 N에 대한 최소연산 횟수</strong>가 된다.</li>
</ol>

<p><br /></p>

<p>마지막으로 문제 풀이를 위해 작성한 코드는 아래와 같다.</p>

<h3 id="작성코드">작성코드</h3>

<hr />

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
</pre></td><td class="rouge-code"><pre><span class="kn">package</span> <span class="nn">java_study</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.io.*</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
    <span class="c1">// DP 테이블 선언</span>
    <span class="kd">static</span> <span class="kt">int</span><span class="o">[]</span> <span class="no">D</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">IOException</span> <span class="o">{</span>
        <span class="nc">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>
        <span class="nc">BufferedWriter</span> <span class="n">bw</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedWriter</span><span class="o">(</span><span class="k">new</span> <span class="nc">OutputStreamWriter</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">));</span>
        
        <span class="kt">int</span> <span class="no">N</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
        
        <span class="c1">// DP 테이블을 N+1 크기로 선언 및 -1로 초기화</span>
        <span class="no">D</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="no">N</span><span class="o">+</span><span class="mi">1</span><span class="o">];</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="no">N</span><span class="o">;</span> <span class="n">i</span><span class="o">++</span> <span class="o">)</span> <span class="o">{</span>
            <span class="no">D</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="c1">// N은 최소 1부터 시작하기에 0과 1은 제외하도록 0으로 설정</span>
        <span class="no">D</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="no">D</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>

        <span class="c1">// changeToOne 재귀 함수를 호출하여 얻어낸 값을 출력</span>
        <span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">changeToOne</span><span class="o">(</span><span class="no">N</span><span class="o">)+</span><span class="s">"\n"</span><span class="o">);</span>

        <span class="n">bw</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
        <span class="n">br</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
    <span class="o">}</span>

    <span class="c1">// ** DP 재귀함수</span>
    <span class="c1">// 점화식: D[i] = Math.min((N/3 or N/2) and N-1)</span>
    <span class="c1">// 꼭 3이나 2로 나누어야 최솟값이 나오는 것은 아니기에 1을 빼는 경우도 함께 고려해야 한다.</span>
    <span class="kd">static</span> <span class="kt">int</span> <span class="nf">changeToOne</span><span class="o">(</span><span class="kt">int</span> <span class="no">N</span><span class="o">)</span> <span class="o">{</span>
        <span class="c1">// N이 1이라면 0 반환 </span>
        <span class="k">if</span><span class="o">(</span><span class="no">N</span> <span class="o">==</span> <span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">return</span> <span class="mi">0</span><span class="o">;</span>
        <span class="o">}</span>

        <span class="c1">// 메모이제이션 적용, 이미 구한 최소 연산 횟수라면 바로 반환한다.</span>
        <span class="k">if</span><span class="o">(</span><span class="no">D</span><span class="o">[</span><span class="no">N</span><span class="o">]</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">return</span> <span class="no">D</span><span class="o">[</span><span class="no">N</span><span class="o">];</span>
        <span class="o">}</span>

        <span class="c1">// 무조건 큰 수로 나누는 것이 최솟값이 되진 않는다.</span>
        <span class="c1">// 2와 3의 배수인 6으로 나눠지는 경우의 수</span>
        <span class="k">if</span><span class="o">(</span><span class="no">N</span> <span class="o">%</span> <span class="mi">6</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
            <span class="no">D</span><span class="o">[</span><span class="no">N</span><span class="o">]</span> <span class="o">=</span> <span class="nc">Math</span><span class="o">.</span><span class="na">min</span><span class="o">(</span><span class="n">changeToOne</span><span class="o">(</span><span class="no">N</span><span class="o">-</span><span class="mi">1</span><span class="o">),</span> <span class="nc">Math</span><span class="o">.</span><span class="na">min</span><span class="o">(</span><span class="n">changeToOne</span><span class="o">(</span><span class="no">N</span><span class="o">/</span><span class="mi">3</span><span class="o">),</span> <span class="n">changeToOne</span><span class="o">(</span><span class="no">N</span><span class="o">/</span><span class="mi">2</span><span class="o">)))+</span><span class="mi">1</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="c1">// 3으로 나눠지는 겨웅의 수</span>
        <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="no">N</span> <span class="o">%</span> <span class="mi">3</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
            <span class="no">D</span><span class="o">[</span><span class="no">N</span><span class="o">]</span> <span class="o">=</span> <span class="nc">Math</span><span class="o">.</span><span class="na">min</span><span class="o">(</span><span class="n">changeToOne</span><span class="o">(</span><span class="no">N</span><span class="o">/</span><span class="mi">3</span><span class="o">),</span> <span class="n">changeToOne</span><span class="o">(</span><span class="no">N</span><span class="o">-</span><span class="mi">1</span><span class="o">))+</span><span class="mi">1</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="c1">// 2로 나눠지는 경우의 수</span>
        <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="no">N</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
            <span class="no">D</span><span class="o">[</span><span class="no">N</span><span class="o">]</span> <span class="o">=</span> <span class="nc">Math</span><span class="o">.</span><span class="na">min</span><span class="o">(</span><span class="n">changeToOne</span><span class="o">(</span><span class="no">N</span><span class="o">/</span><span class="mi">2</span><span class="o">),</span> <span class="n">changeToOne</span><span class="o">(</span><span class="no">N</span><span class="o">-</span><span class="mi">1</span><span class="o">))+</span><span class="mi">1</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="c1">// 2와 3으로 나눠지지 않는 경우의 수</span>
        <span class="k">else</span> <span class="o">{</span>
            <span class="no">D</span><span class="o">[</span><span class="no">N</span><span class="o">]</span> <span class="o">=</span> <span class="n">changeToOne</span><span class="o">(</span><span class="no">N</span><span class="o">-</span><span class="mi">1</span><span class="o">)+</span><span class="mi">1</span><span class="o">;</span>
        <span class="o">}</span>
        
        <span class="k">return</span> <span class="no">D</span><span class="o">[</span><span class="no">N</span><span class="o">];</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="출처">출처</h3>

<hr />

<ul>
  <li>해당 문제의 저작권은 문제를 만든이에게 있으며 자세한 내용은 <a href="https://www.acmicpc.net/problem/2805">문제 링크</a>에서 참조바랍니다.</li>
</ul>
:ET