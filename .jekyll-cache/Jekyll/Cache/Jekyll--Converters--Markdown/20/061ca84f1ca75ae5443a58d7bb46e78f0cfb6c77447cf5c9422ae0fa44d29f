I"h?<p><br /></p>

<center><img src="/assets/images/programmers/" width="100%" /></center>

<p><br /></p>

<h3 id="문제-풀이">문제 풀이</h3>
<hr />

<p>이 문제는 <strong>HashMap</strong>을 활용하여 문자열을 정수형으로 변환해가며 시간 계산하면 되는 문제이다.</p>

<p><br /></p>

<h4 id="아이디어-도출">아이디어 도출</h4>

<p>주차장에 입차된 차는 출차가 되는 것을 입출차라고 본다면 입차만 있는 차의 경우 <code class="language-plaintext highlighter-rouge">23:59</code>분에 출차하는 것으로 간주해야 한다. 입차만 있는 차들을 <code class="language-plaintext highlighter-rouge">23:59</code>분에 출차시키는 방법을 알아보자.</p>

<ol>
  <li>차마다 입차시간과 출차시간을 HashMap(A)과 차별 총 주차시간을 담을 HashMap(B)까지 총 2개의 HashMap을 사용한다.</li>
  <li>주어진 입충차내역 배열을 순회하며 A 맵에는</li>
</ol>

<h4 id="런타임-에러">런타임 에러?!</h4>

<p>마지막에 자정에 OUT하는 차들의 주차시간을 계산할 때 런타임에러가 발생할 수 있다.
Map에 남아있는 차들은 23:59에 나가는 차들이기 때문에 한번 더 Map을 순회하며 주차시간을 연산하게 되는데, 앞서 IN 시간을 담은 Map에서 처럼 Map의 원소를 삭제하게 되면 런타임 에러가 발생한다.</p>

<blockquote>
  <p>런타임 에러가 발생하는 이유는 Map의 <strong>keySet() 메서드로 순회하고 있는 도중 key를 삭제하려고 할 경우 동시성 오류가 발생</strong>하기 때문이다.</p>
</blockquote>

<p><br /></p>

<p>문제 풀이를 위해 작성한 코드는 아래와 같다.</p>

<p><br /><br /></p>

<h3 id="작성-코드">작성 코드</h3>
<hr />
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
</pre></td><td class="rouge-code"><pre>
<span class="kn">package</span> <span class="nn">java_study</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>

    <span class="kd">public</span> <span class="kt">int</span><span class="o">[]</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">fees</span><span class="o">,</span> <span class="nc">String</span><span class="o">[]</span> <span class="n">records</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">HashMap</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">String</span><span class="o">&gt;</span> <span class="n">tempMap</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HashMap</span><span class="o">&lt;&gt;();</span>
        <span class="nc">TreeMap</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">timeMap</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">TreeMap</span><span class="o">&lt;&gt;();</span>
        <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">result</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>

        <span class="k">for</span><span class="o">(</span><span class="nc">String</span> <span class="n">record</span> <span class="o">:</span> <span class="n">records</span><span class="o">)</span> <span class="o">{</span>
            <span class="nc">String</span><span class="o">[]</span> <span class="n">split</span> <span class="o">=</span> <span class="n">record</span><span class="o">.</span><span class="na">split</span><span class="o">(</span><span class="s">" "</span><span class="o">);</span>
            <span class="nc">String</span> <span class="n">time</span> <span class="o">=</span> <span class="n">split</span><span class="o">[</span><span class="mi">0</span><span class="o">];</span>
            <span class="nc">String</span> <span class="n">carNumber</span> <span class="o">=</span> <span class="n">split</span><span class="o">[</span><span class="mi">1</span><span class="o">];</span>

            <span class="k">if</span><span class="o">(</span><span class="n">record</span><span class="o">.</span><span class="na">contains</span><span class="o">(</span><span class="s">"IN"</span><span class="o">))</span> <span class="o">{</span>
                <span class="n">tempMap</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">carNumber</span><span class="o">,</span> <span class="n">time</span><span class="o">);</span>
            <span class="o">}</span> <span class="k">else</span> <span class="k">if</span><span class="o">(</span><span class="n">record</span><span class="o">.</span><span class="na">contains</span><span class="o">(</span><span class="s">"OUT"</span><span class="o">))</span> <span class="o">{</span>
                <span class="kt">int</span> <span class="n">min</span> <span class="o">=</span> <span class="n">getMin</span><span class="o">(</span><span class="n">time</span><span class="o">,</span> <span class="n">tempMap</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">carNumber</span><span class="o">));</span>
                <span class="n">timeMap</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">carNumber</span><span class="o">,</span> <span class="n">timeMap</span><span class="o">.</span><span class="na">getOrDefault</span><span class="o">(</span><span class="n">carNumber</span><span class="o">,</span> <span class="mi">0</span><span class="o">)+</span><span class="n">min</span><span class="o">);</span>
                <span class="n">tempMap</span><span class="o">.</span><span class="na">remove</span><span class="o">(</span><span class="n">carNumber</span><span class="o">);</span>
            <span class="o">}</span>
        <span class="o">}</span>

        <span class="k">if</span><span class="o">(!</span><span class="n">tempMap</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">())</span> <span class="o">{</span>
            <span class="k">for</span><span class="o">(</span><span class="nc">String</span> <span class="n">carNumber</span> <span class="o">:</span> <span class="n">tempMap</span><span class="o">.</span><span class="na">keySet</span><span class="o">())</span> <span class="o">{</span>
                <span class="kt">int</span> <span class="n">min</span> <span class="o">=</span> <span class="n">getMin</span><span class="o">(</span><span class="s">"23:59"</span><span class="o">,</span> <span class="n">tempMap</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">carNumber</span><span class="o">));</span>
                <span class="n">timeMap</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">carNumber</span><span class="o">,</span> <span class="n">timeMap</span><span class="o">.</span><span class="na">getOrDefault</span><span class="o">(</span><span class="n">carNumber</span><span class="o">,</span> <span class="mi">0</span><span class="o">)+</span><span class="n">min</span><span class="o">);</span>
                <span class="c1">// 여기서 남은 tempMap의 원소를 remove하면 런타임 에러가 발생한다.</span>
                <span class="c1">// 런타임 에러가 발생하는 이유는 Map의 keySet() 메서드로 순회하고 있는 도중 key를 삭제하려고 할 경우 동시성 오류가 발생하기 때문이다.</span>
                <span class="c1">// tempMap.remove(carNumber);</span>
            <span class="o">}</span>
        <span class="o">}</span>

        <span class="k">for</span><span class="o">(</span><span class="nc">String</span> <span class="n">carNumber</span> <span class="o">:</span> <span class="n">timeMap</span><span class="o">.</span><span class="na">keySet</span><span class="o">())</span> <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="n">timeMap</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">carNumber</span><span class="o">)</span> <span class="o">&lt;=</span> <span class="n">fees</span><span class="o">[</span><span class="mi">0</span><span class="o">])</span> <span class="o">{</span>
                <span class="n">result</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">fees</span><span class="o">[</span><span class="mi">1</span><span class="o">]);</span>
                <span class="k">continue</span><span class="o">;</span>
            <span class="o">}</span>
            <span class="kt">int</span> <span class="n">price</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="o">(</span><span class="n">fees</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="o">+</span> <span class="nc">Math</span><span class="o">.</span><span class="na">ceil</span><span class="o">((</span><span class="kt">double</span><span class="o">)(</span><span class="n">timeMap</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">carNumber</span><span class="o">)</span> <span class="o">-</span> <span class="n">fees</span><span class="o">[</span><span class="mi">0</span><span class="o">])</span> <span class="o">/</span> <span class="n">fees</span><span class="o">[</span><span class="mi">2</span><span class="o">])</span> <span class="o">*</span> <span class="n">fees</span><span class="o">[</span><span class="mi">3</span><span class="o">]);</span>
            <span class="n">result</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">price</span><span class="o">);</span>
        <span class="o">}</span>
        
        <span class="k">return</span> <span class="n">result</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">mapToInt</span><span class="o">(</span><span class="nl">Integer:</span><span class="o">:</span><span class="n">intValue</span><span class="o">).</span><span class="na">toArray</span><span class="o">();</span>
    <span class="o">}</span>
    
    <span class="kd">static</span> <span class="kt">int</span> <span class="nf">getMin</span><span class="o">(</span><span class="nc">String</span> <span class="n">out</span><span class="o">,</span> <span class="nc">String</span> <span class="n">in</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">String</span><span class="o">[]</span> <span class="n">out_time</span> <span class="o">=</span> <span class="n">out</span><span class="o">.</span><span class="na">split</span><span class="o">(</span><span class="s">":"</span><span class="o">);</span>
        <span class="nc">String</span><span class="o">[]</span> <span class="n">in_time</span> <span class="o">=</span> <span class="n">in</span><span class="o">.</span><span class="na">split</span><span class="o">(</span><span class="s">":"</span><span class="o">);</span>
        <span class="k">return</span> <span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">out_time</span><span class="o">[</span><span class="mi">0</span><span class="o">])</span> <span class="o">-</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">in_time</span><span class="o">[</span><span class="mi">0</span><span class="o">]))</span> <span class="o">*</span> <span class="mi">60</span> <span class="o">+</span> <span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">out_time</span><span class="o">[</span><span class="mi">1</span><span class="o">])</span> <span class="o">-</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">in_time</span><span class="o">[</span><span class="mi">1</span><span class="o">]));</span>
    <span class="o">}</span>
    
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">Solution</span> <span class="n">sol</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Solution</span><span class="o">();</span>
        
        <span class="c1">// int[] fees = new int[]{180, 5000, 10, 600};</span>
        <span class="c1">// String[] records = new String[]{"05:34 5961 IN",</span>
        <span class="c1">//                                 "06:00 0000 IN", </span>
        <span class="c1">//                                 "06:34 0000 OUT", </span>
        <span class="c1">//                                 "07:59 5961 OUT", </span>
        <span class="c1">//                                 "07:59 0148 IN", </span>
        <span class="c1">//                                 "18:59 0000 IN", </span>
        <span class="c1">//                                 "19:09 0148 OUT", </span>
        <span class="c1">//                                 "22:59 5961 IN", </span>
        <span class="c1">//                                 "23:00 5961 OUT"};</span>
        
        <span class="c1">// int[] fees = new int[]{120, 0, 60, 591};</span>
        <span class="c1">// String[] records = new String[]{"16:00 3961 IN",</span>
        <span class="c1">//                                 "16:00 0202 IN",</span>
        <span class="c1">//                                 "18:00 3961 OUT",</span>
        <span class="c1">//                                 "18:00 0202 OUT",</span>
        <span class="c1">//                                 "23:58 3961 IN"};</span>
                                        
        <span class="kt">int</span><span class="o">[]</span> <span class="n">fees</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[]{</span><span class="mi">1</span><span class="o">,</span> <span class="mi">461</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">10</span><span class="o">};</span>
        <span class="nc">String</span><span class="o">[]</span> <span class="n">records</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">String</span><span class="o">[]{</span><span class="s">"00:00 1234 IN"</span><span class="o">};</span>

        <span class="n">sol</span><span class="o">.</span><span class="na">solution</span><span class="o">(</span><span class="n">fees</span><span class="o">,</span> <span class="n">records</span><span class="o">);</span>
    <span class="o">}</span>

<span class="o">}</span>

</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="회고">회고</h3>
<ul>
  <li>
    <hr />
  </li>
</ul>

<p><br /></p>

<h3 id="출처">출처</h3>
<p>-
—</p>

<ul>
  <li>해당 문제의 저작권은 문제를 만든이에게 있으며 자세한 내용은 <a href="https://school.programmers.co.kr/learn/courses/30/lessons/92341">문제 링크</a>에서 참조바랍니다.</li>
</ul>
:ET