I"V`<p><br /></p>

<center><img src="/assets/images/programmers/20220908_02.png" width="700" /></center>
<p><br /></p>

<p><strong>입출력 예시</strong></p>
<blockquote>
  <p>Input-1 <br />
<strong>[[60, 50], [30, 70], [60, 30], [80, 40]]</strong> <br />
Output-1 <br />
<strong>4000</strong></p>
</blockquote>

<blockquote>
  <p>Input-2 <br />
<strong>[[10, 7], [12, 3], [8, 15], [14, 7], [5, 15]]</strong> <br />
Output-2 <br />
<strong>120</strong></p>
</blockquote>

<blockquote>
  <p>Input-3 <br />
<strong>[[14, 4], [19, 6], [6, 16], [18, 7], [7, 11]]</strong> <br />
Output-3 <br />
<strong>133</strong></p>
</blockquote>

<p><br /></p>

<h3 id="문제-풀이">문제 풀이</h3>
<p>주어진 2차원 배열에서 명함의 가로와 세로길이 [w, h]에서 <strong>w와 h의 크고 작은 값을 비교</strong>해야 한다. <br />
그리고 <strong>큰값과 작은값의 최대값</strong>을 찾아 곱하면 모든 명함의 길이를 수용할 수 있는 최소의 크기를 구할 수 있다.</p>

<p>내가 생각한 아이디어는 아래와 같다.</p>
<ul>
  <li>w의 합과 h의 합을 구한다.</li>
  <li>만약 w의 합이 h의 합보다 더 크다면, w가 h보다 작을 때 w와 h값을 치환한다.</li>
  <li>만약 h의 합이 w의 합보다 더 크다면, h가 w보다 작을 때 w와 h값을 치환한다.</li>
  <li>w와 h의 최대값을 구해 곱한다.</li>
</ul>

<p>한 번 코드로 작성해보자. <br />
먼저 w와 h의 합을 저장할 변수를 초기화한다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="kt">int</span> <span class="n">w_sum</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
<span class="kt">int</span> <span class="n">h_sum</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p><br /></p>

<p>그리고 sizes 2차원 배열을 순회하며 w와 h의 합을 구한다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="rouge-code"><pre><span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">sizes</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
    <span class="n">w_sum</span> <span class="o">+=</span> <span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">0</span><span class="o">];</span>
    <span class="n">h_sum</span> <span class="o">+=</span> <span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">1</span><span class="o">];</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><br /></p>

<p>w합과 h합을 구했으니, 둘의 크고 작음을 확인하여 w와 h를 치환한다. <br />
w합이 h홥보다 크면, w로 큰 값을 몰아줘야 하니, w값이 작을 때만 치환하면 된다. <br />
반대로, h합이 w합보다 크면, h로 큰 값을 몰아줘야 하기에 h값이 작을 때만 치환한다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
</pre></td><td class="rouge-code"><pre><span class="k">if</span><span class="o">(</span><span class="n">w_sum</span> <span class="o">&gt;</span> <span class="n">h_sum</span><span class="o">)</span> <span class="o">{</span> <span class="c1">// w합이 h보다 클 경우</span>
    <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">sizes</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">temp</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="k">if</span><span class="o">(</span><span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">0</span><span class="o">]</span> <span class="o">&lt;</span> <span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">1</span><span class="o">])</span> <span class="o">{</span> <span class="c1">// w&lt;h 일 때 치환</span>
            <span class="n">temp</span> <span class="o">=</span> <span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">0</span><span class="o">];</span>
            <span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">0</span><span class="o">]</span> <span class="o">=</span> <span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">1</span><span class="o">];</span>
            <span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">1</span><span class="o">]</span> <span class="o">=</span> <span class="n">temp</span><span class="o">;</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>
<span class="k">else</span> <span class="o">{</span> <span class="c1">// h합이 w합보다 클 경우</span>
    <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">sizes</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">temp</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="k">if</span><span class="o">(</span><span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">0</span><span class="o">]</span> <span class="o">&gt;</span> <span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">1</span><span class="o">])</span> <span class="o">{</span> <span class="c1">// h&lt;w 일 때 치환</span>
            <span class="n">temp</span> <span class="o">=</span> <span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">0</span><span class="o">];</span>
            <span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">0</span><span class="o">]</span> <span class="o">=</span> <span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">1</span><span class="o">];</span>
            <span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">1</span><span class="o">]</span> <span class="o">=</span> <span class="n">temp</span><span class="o">;</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p><br /></p>

<p>마지막으로 치환된 sizes 배열에서 w와 h의 최대값을 찾아 곰하여 반환하면 된다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre><span class="kt">int</span> <span class="n">w_max</span> <span class="o">=</span> <span class="n">sizes</span><span class="o">[</span><span class="mi">0</span><span class="o">][</span><span class="mi">0</span><span class="o">];</span> <span class="c1">// width 최대값</span>
<span class="kt">int</span> <span class="n">h_max</span> <span class="o">=</span> <span class="n">sizes</span><span class="o">[</span><span class="mi">0</span><span class="o">][</span><span class="mi">1</span><span class="o">];</span> <span class="c1">// height 최대값</span>
<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">sizes</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
    <span class="k">if</span><span class="o">(</span><span class="n">w_max</span> <span class="o">&lt;</span> <span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">0</span><span class="o">])</span> <span class="n">w_max</span> <span class="o">=</span> <span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">0</span><span class="o">];</span>
    <span class="k">if</span><span class="o">(</span><span class="n">h_max</span> <span class="o">&lt;</span> <span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">1</span><span class="o">])</span> <span class="n">h_max</span> <span class="o">=</span> <span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">1</span><span class="o">];</span>
<span class="o">}</span>
<span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="n">w_max</span> <span class="o">*</span> <span class="n">h_max</span><span class="o">;</span> <span class="c1">// 최소 명함의 크기</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>제출하니 정상적으로 모든 테스트케이스를 통과하였다.</p>

<h4 id="코드-수정">코드 수정</h4>
<p>그런데, 위에서 작성한 코드가 생각보다 가독성이 좋지 않다고 느꼈고, 간결하면서 가독성이 좋은 코드로 고쳐보려 한다.</p>

<p>다시 생각해본 아이디어는 아래와 같다.</p>
<ul>
  <li>반복문을 돌며 w와 h의 크고 작은 값을 구한다.</li>
  <li>w와 h가 클 때의 최대값과 작을 때의 최대값을 함께 구한다.</li>
</ul>

<p><br /></p>

<h3 id="작성-코드">작성 코드</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        
        <span class="c1">// int[][] sizes = {{10,7},{12,3},{8,15},{14,7},{5,15}};</span>
        <span class="c1">// int[][] sizes = {{14,4},{19,6},{6,16},{18,7},{7,11}};</span>
        <span class="kt">int</span><span class="o">[][]</span> <span class="n">sizes</span> <span class="o">=</span> <span class="o">{{</span><span class="mi">60</span><span class="o">,</span><span class="mi">50</span><span class="o">},{</span><span class="mi">30</span><span class="o">,</span><span class="mi">70</span><span class="o">},{</span><span class="mi">60</span><span class="o">,</span><span class="mi">30</span><span class="o">},{</span><span class="mi">80</span><span class="o">,</span><span class="mi">40</span><span class="o">}};</span>
        

        <span class="kt">long</span> <span class="n">start</span> <span class="o">=</span> <span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        <span class="n">solution2</span><span class="o">(</span><span class="n">sizes</span><span class="o">);</span>
        <span class="kt">long</span> <span class="n">end</span> <span class="o">=</span> <span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"\n수행시간 = "</span> <span class="o">+</span> <span class="o">(</span><span class="n">end</span><span class="o">-</span><span class="n">start</span><span class="o">));</span>
    <span class="o">}</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span><span class="o">[][]</span> <span class="n">sizes</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">w_sum</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">h_sum</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">sizes</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="n">w_sum</span> <span class="o">+=</span> <span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">0</span><span class="o">];</span>
            <span class="n">h_sum</span> <span class="o">+=</span> <span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">1</span><span class="o">];</span>
        <span class="o">}</span>

        <span class="k">if</span><span class="o">(</span><span class="n">w_sum</span> <span class="o">&gt;</span> <span class="n">h_sum</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">sizes</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
                <span class="kt">int</span> <span class="n">temp</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
                <span class="k">if</span><span class="o">(</span><span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">0</span><span class="o">]</span> <span class="o">&lt;</span> <span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">1</span><span class="o">])</span> <span class="o">{</span>
                    <span class="n">temp</span> <span class="o">=</span> <span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">0</span><span class="o">];</span>
                    <span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">0</span><span class="o">]</span> <span class="o">=</span> <span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">1</span><span class="o">];</span>
                    <span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">1</span><span class="o">]</span> <span class="o">=</span> <span class="n">temp</span><span class="o">;</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="k">else</span> <span class="o">{</span>
            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">sizes</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
                <span class="kt">int</span> <span class="n">temp</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
                <span class="k">if</span><span class="o">(</span><span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">0</span><span class="o">]</span> <span class="o">&gt;</span> <span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">1</span><span class="o">])</span> <span class="o">{</span>
                    <span class="n">temp</span> <span class="o">=</span> <span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">0</span><span class="o">];</span>
                    <span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">0</span><span class="o">]</span> <span class="o">=</span> <span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">1</span><span class="o">];</span>
                    <span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">1</span><span class="o">]</span> <span class="o">=</span> <span class="n">temp</span><span class="o">;</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>

        <span class="kt">int</span> <span class="n">w_max</span> <span class="o">=</span> <span class="n">sizes</span><span class="o">[</span><span class="mi">0</span><span class="o">][</span><span class="mi">0</span><span class="o">];</span>
        <span class="kt">int</span> <span class="n">h_max</span> <span class="o">=</span> <span class="n">sizes</span><span class="o">[</span><span class="mi">0</span><span class="o">][</span><span class="mi">1</span><span class="o">];</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">sizes</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="n">w_max</span> <span class="o">&lt;</span> <span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">0</span><span class="o">])</span> <span class="n">w_max</span> <span class="o">=</span> <span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">0</span><span class="o">];</span>
            <span class="k">if</span><span class="o">(</span><span class="n">h_max</span> <span class="o">&lt;</span> <span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">1</span><span class="o">])</span> <span class="n">h_max</span> <span class="o">=</span> <span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">1</span><span class="o">];</span>
        <span class="o">}</span>
        <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="n">w_max</span> <span class="o">*</span> <span class="n">h_max</span><span class="o">;</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">solution2</span><span class="o">(</span><span class="kt">int</span><span class="o">[][]</span> <span class="n">sizes</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">big</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">sml</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>

        <span class="k">for</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">size</span> <span class="o">:</span> <span class="n">sizes</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="n">size</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">&lt;</span> <span class="n">size</span><span class="o">[</span><span class="mi">1</span><span class="o">])</span> <span class="o">{</span>
                <span class="n">big</span> <span class="o">=</span> <span class="nc">Math</span><span class="o">.</span><span class="na">max</span><span class="o">(</span><span class="n">size</span><span class="o">[</span><span class="mi">1</span><span class="o">],</span> <span class="n">big</span><span class="o">);</span>
                <span class="n">sml</span> <span class="o">=</span> <span class="nc">Math</span><span class="o">.</span><span class="na">max</span><span class="o">(</span><span class="n">size</span><span class="o">[</span><span class="mi">0</span><span class="o">],</span> <span class="n">sml</span><span class="o">);</span>
            <span class="o">}</span>
            <span class="k">else</span> <span class="o">{</span>
                <span class="n">big</span> <span class="o">=</span> <span class="nc">Math</span><span class="o">.</span><span class="na">max</span><span class="o">(</span><span class="n">size</span><span class="o">[</span><span class="mi">0</span><span class="o">],</span> <span class="n">big</span><span class="o">);</span>
                <span class="n">sml</span> <span class="o">=</span> <span class="nc">Math</span><span class="o">.</span><span class="na">max</span><span class="o">(</span><span class="n">size</span><span class="o">[</span><span class="mi">1</span><span class="o">],</span> <span class="n">sml</span><span class="o">);</span>
            <span class="o">}</span>
        <span class="o">}</span>

        <span class="k">return</span> <span class="n">big</span> <span class="o">*</span> <span class="n">sml</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="회고">회고</h3>
<ul>
  <li>큐의 FIFO 특성을 이용하여 쌓은 순서대로 꺼내어 입력 순서를 보장할 수 있었다.</li>
</ul>
:ET