I"<p><br /></p>

<center><img src="/assets/images/programmers/" width="100%" /></center>

<p><br /></p>

<h3 id="문제-풀이">문제 풀이</h3>
<hr />

<p>이번 문제는 <strong>하노이의 탑 원리</strong>를 잘 숙지하고 있으면 풀 수 있는 문제이다.</p>

<p><br /></p>

<h4 id="아이디어-도출">아이디어 도출</h4>

<p>필자는 하노이의 탑 원리를 구현하기 위해 <strong>재귀 함수</strong>를 이용했다. 또한 이번 문제는 백준에서 출제된 <a href="https://langoustinee.github.io/java/101-post/">하노이의 탑 이동순서</a> 문제와 굉장히 유사하니 해당 문제를 풀었다면 해당 문제도 쉽게 풀 수 있을 것이다.</p>

<p>재귀를 이용해 하노이의 탑에서 원판을 이동시킬 때, 첫번째 탑에서 두번째 탑으로 이동해야할 <strong>N-1개의 원판들은 재귀함수를 통해 원판이 1개가 남을 때까지 이동</strong>하게 된다.</p>

<p>문제의 예시처럼 첫번째 탑에 있는 2개의 원판을 마지막 탑으로 최소한의 과정을 통해 옮기기 위해서는 아래와 같은 과정이 필요하다.</p>

<blockquote>
  <ol>
    <li>첫번째 원판을 시작 탑에서 중간 탑으로 옮긴다.</li>
    <li>두번째 원판을 시작 탑에서 마지막 탑으로 옮긴다.</li>
    <li>중간 탑에 남아있던 첫번째 원판을 중간 탑에서 마지막 탑으로 옮긴다.</li>
  </ol>
</blockquote>

<p>위 과정을 재귀로 풀어내는 방법을 알았으니, 해당 과정에서 일어나는 이동과정을 배열에 담아서 2차원 배열로 반환하면 되는 것이다.</p>

<p>그렇게 문제풀이를 위한 아이디어는 생각해보니 다음과 같았다.</p>

<ol>
  <li>n개의 원판을 지정해 하노이 재귀 함수를 호출한다.</li>
  <li>재귀 함수를 통해 원판을 시작 탑에서 마지막 탑까지 옮긴다.</li>
  <li>원판을 옮기는 과정에서</li>
</ol>

<p><br /></p>

<p>다음으로 문제 풀이를 위해 작성한 코드는 아래와 같다.</p>

<p><br /><br /></p>

<h3 id="작성-코드">작성 코드</h3>
<hr />
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
</pre></td><td class="rouge-code"><pre>
<span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>

    <span class="c1">// 이동시 첫번째 탑과 </span>
    <span class="kd">static</span> <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">[]&gt;</span> <span class="n">result</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>

    <span class="kd">public</span> <span class="kt">int</span><span class="o">[][]</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span> <span class="n">n</span><span class="o">)</span> <span class="o">{</span>
        <span class="cm">/**
         * 3개의 탑을 두고 하노이 함수 실행
         * 첫번째 탑에 n개의 원판이 존재한다.
         */</span>
        <span class="n">hanoi</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="n">n</span><span class="o">);</span>

        <span class="c1">// Stream을 활용해 ArrayList&lt;int[]&gt; 타입을 int[][] 타입으로 변환하여 반환한다.</span>
        <span class="kt">int</span><span class="o">[][]</span> <span class="n">answer</span> <span class="o">=</span> <span class="n">result</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">toArray</span><span class="o">(</span><span class="kt">int</span><span class="o">[][]::</span><span class="k">new</span><span class="o">);</span>

        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">hanoi</span><span class="o">(</span><span class="kt">int</span> <span class="n">first</span><span class="o">,</span> <span class="kt">int</span> <span class="n">center</span><span class="o">,</span> <span class="kt">int</span> <span class="n">last</span><span class="o">,</span> <span class="kt">int</span> <span class="no">N</span><span class="o">)</span> <span class="o">{</span>
        <span class="cm">/**
         * 옮겨야 할 원판이 1개 남았다면 재귀를 종료한다.
         * 재귀 도중, 탑의 원판 이동여부를 result에 담는다.
         */</span>
        <span class="k">if</span><span class="o">(</span><span class="no">N</span> <span class="o">==</span> <span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">result</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="kt">int</span><span class="o">[]{</span><span class="n">first</span><span class="o">,</span> <span class="n">last</span><span class="o">});</span>
            <span class="k">return</span><span class="o">;</span>
        <span class="o">}</span><span class="k">else</span> <span class="o">{</span>
            <span class="n">hanoi</span><span class="o">(</span><span class="n">first</span><span class="o">,</span> <span class="n">last</span><span class="o">,</span> <span class="n">center</span><span class="o">,</span> <span class="no">N</span><span class="o">-</span><span class="mi">1</span><span class="o">);</span>
            <span class="n">result</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="kt">int</span><span class="o">[]{</span><span class="n">first</span><span class="o">,</span> <span class="n">last</span><span class="o">});</span>
            <span class="n">hanoi</span><span class="o">(</span><span class="n">center</span><span class="o">,</span> <span class="n">first</span><span class="o">,</span> <span class="n">last</span><span class="o">,</span> <span class="no">N</span><span class="o">-</span><span class="mi">1</span><span class="o">);</span>
        <span class="o">}</span>        
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        
        <span class="nc">Solution</span> <span class="n">sol</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Solution</span><span class="o">();</span>
        <span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="mi">2</span><span class="o">;</span>        
        <span class="n">sol</span><span class="o">.</span><span class="na">solution</span><span class="o">(</span><span class="n">n</span><span class="o">);</span>

    <span class="o">}</span>

<span class="o">}</span>

</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="회고">회고</h3>
<p>-</p>

<hr />

<p><br /></p>

<h3 id="출처">출처</h3>
<p>-</p>

<hr />

<ul>
  <li>해당 문제의 저작권은 문제를 만든이에게 있으며 자세한 내용은 <a href="https://school.programmers.co.kr/learn/courses/30/lessons/12946">문제 링크</a>에서 참조바랍니다.</li>
</ul>
:ET