<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2022-08-08T18:08:08+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">lango’s DevLog</title><subtitle>developer</subtitle><author><name>lango</name></author><entry><title type="html">[알고리즘 스터디 - Java] 백준 1712번</title><link href="http://localhost:4000/java/23-post/" rel="alternate" type="text/html" title="[알고리즘 스터디 - Java] 백준 1712번" /><published>2022-08-08T00:00:00+09:00</published><updated>2022-08-08T00:00:00+09:00</updated><id>http://localhost:4000/java/23-post</id><content type="html" xml:base="http://localhost:4000/java/23-post/"><![CDATA[<p><br /></p>

<center><img src="/assets/images/baekjoon/1712.png" /></center>

<blockquote>
  <p>Input-1 <br />
<strong>1000 70 170</strong> <br />
Output-1 <br />
<strong>11</strong></p>
</blockquote>

<blockquote>
  <p>Input-2 <br />
<strong>3 2 1</strong> <br />
Output-2 <br />
<strong>-1</strong></p>
</blockquote>

<blockquote>
  <p>Input-3 <br />
<strong>2100000000 9 10</strong> <br />
Output-3 <br />
<strong>2100000001</strong></p>
</blockquote>

<h3 id="문제-풀이">문제 풀이</h3>
<p>이 문제에서 중요하게 봐야할 핵심은 아래와 같다.</p>
<ul>
  <li>주어진 수가 21억 이하의 자연수이기에 int형을 사용하면 안된다.</li>
  <li>손익분기점이 존재하지 않으면 -1를 출력한다.</li>
  <li>실행 속도가 0.35초 이내여야 한다.</li>
</ul>

<p>먼저 int형의 경우 -2,147,483,648 ~ 2,147,438,647이기 때문에 이 문제에서 사용 가능한 범위가 아니다. <br />
<strong>int형보다 큰 범위를 가지는 long형을 사용</strong>해야 한다. <br /></p>
<ul>
  <li>long은 (-9,223,372,036,854,775,808 ~ 9,223,372,036,854,775,807)의 범위의 자연수 활용이 가능하다.</li>
</ul>

<p>그리고 <strong>손익분기점이 존재여부를 어떻게 측정할까?</strong> <br />
계산해보면 C-B의 값이 0보다 커야 손익분기점이 존재한다. <br />
쉽게 말하면 C의 배수의 값이 B의 배수의 값보다 커야 배수가 높아지면서 C가 B를 넘어설 수 있기 때문이다.</p>

<p>코드로 작성해보면 아래와 같다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="rouge-code"><pre><span class="k">if</span><span class="o">(</span><span class="no">B</span> <span class="o">&gt;=</span> <span class="no">C</span><span class="o">)</span> <span class="n">bep</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="o">;</span>
<span class="k">else</span> <span class="o">{</span>
    <span class="c1">// 손익분기점이 존재할 경우</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>또한 실행속도가 0.35초 이내여야 하는데 처음에는 while문 에서 A+B<em>반복횟수(총 수입)이 C</em>반복횟수(총 수입)보다 <br />
작을 경우 bep(손익분기점=반복횟수)를 증가시키고, 클 경우에는 반복문을 탈출하도록 작성하였다. <br />
그런데 시간초과가 발생하였다.</p>

<p>반복문 내에서 반복횟수별로 카운트를 증가시키는 방식으로 접근하니 시간이 초과된 것 같다.</p>

<h4 id="반복문으로-작성한-코드">반복문으로 작성한 코드</h4>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="rouge-code"><pre><span class="k">if</span><span class="o">(</span><span class="no">B</span> <span class="o">&gt;=</span> <span class="no">C</span><span class="o">)</span> <span class="n">bep</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="o">;</span>
<span class="k">else</span> <span class="o">{</span>
    <span class="k">while</span><span class="o">((</span><span class="no">A</span><span class="o">+</span><span class="no">B</span><span class="o">*</span><span class="n">bep</span><span class="o">)</span> <span class="o">&gt;=</span> <span class="o">(</span><span class="no">C</span><span class="o">*</span><span class="n">bep</span><span class="o">))</span> <span class="o">{</span> <span class="c1">// 총 수입이 총 비용보다 높을 경우</span>
        <span class="n">bep</span><span class="o">++;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>그렇다면 <strong>어떻게 시간을 줄일 수 있을까?</strong> <br />
아예 방정식같은 느낌으로 한번에 bep(손익분기점) 값을 측정해야겠다고 생각했다.</p>

<p>A+C-B의 값을 C-B의 값으로 나누니 원하는 값을 얻을 수 있었고 시간도 대폭 줄일 수 있었다. <br />
해당 식을 적용한 코드는 아래와 같다.</p>

<h4 id="식으로-작성한-코드">식으로 작성한 코드</h4>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="k">if</span><span class="o">(</span><span class="no">B</span><span class="o">&gt;=</span><span class="no">C</span><span class="o">)</span> <span class="n">bep</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="o">;</span>
<span class="k">else</span> <span class="n">bep</span> <span class="o">=</span> <span class="o">(</span><span class="no">A</span><span class="o">+</span><span class="no">C</span><span class="o">-</span><span class="no">B</span><span class="o">)</span> <span class="o">/</span> <span class="o">(</span><span class="no">C</span><span class="o">-</span><span class="no">B</span><span class="o">);</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><br /></p>

<h3 id="작성코드">작성코드</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">java.io.*</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">IOException</span> <span class="o">{</span>
        <span class="nc">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>
        <span class="nc">BufferedWriter</span> <span class="n">bw</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedWriter</span><span class="o">(</span><span class="k">new</span> <span class="nc">OutputStreamWriter</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">));</span>                
        <span class="nc">StringTokenizer</span> <span class="n">st</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>

        <span class="kt">long</span> <span class="no">A</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
        <span class="kt">long</span> <span class="no">B</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
        <span class="kt">long</span> <span class="no">C</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
        <span class="kt">long</span> <span class="n">bep</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
        
        <span class="k">if</span><span class="o">(</span><span class="no">B</span><span class="o">&gt;=</span><span class="no">C</span><span class="o">)</span> <span class="n">bep</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="o">;</span>
        <span class="k">else</span> <span class="n">bep</span> <span class="o">=</span> <span class="o">(</span><span class="no">A</span><span class="o">+</span><span class="no">C</span><span class="o">-</span><span class="no">B</span><span class="o">)</span> <span class="o">/</span> <span class="o">(</span><span class="no">C</span><span class="o">-</span><span class="no">B</span><span class="o">);</span>

        <span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">bep</span> <span class="o">+</span> <span class="s">"\n"</span><span class="o">);</span>
        <span class="n">bw</span><span class="o">.</span><span class="na">flush</span><span class="o">();</span>
        <span class="n">bw</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
        <span class="n">br</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="회고">회고</h3>
<ul>
  <li>특정 반복문 내에서 횟수별로 검증하는 것은 적은 시간을 요구하는 문제에서는 올바른 접근이 아니라는 것을 알게 되었다.</li>
  <li>특정 패턴 및 로직을 하나의 식으로 표현함으로 실행 속도 시간을 대폭 줄일 수 있었다.</li>
</ul>]]></content><author><name>lango</name></author><category term="Java" /><category term="blog" /><category term="algorithm" /><category term="study" /><category term="java" /><category term="baekjoon" /><summary type="html"><![CDATA[손익분기점]]></summary></entry><entry><title type="html">[알고리즘 스터디 - Java] 백준 2941번</title><link href="http://localhost:4000/java/21-post/" rel="alternate" type="text/html" title="[알고리즘 스터디 - Java] 백준 2941번" /><published>2022-08-05T00:00:00+09:00</published><updated>2022-08-05T00:00:00+09:00</updated><id>http://localhost:4000/java/21-post</id><content type="html" xml:base="http://localhost:4000/java/21-post/"><![CDATA[<p><br /></p>

<center><img src="/assets/images/baekjoon/2941.png" /></center>

<blockquote>
  <p>Input-1 <br />
ljes=njak <br />
Output-1 <br />
6</p>
</blockquote>

<blockquote>
  <p>Input-2 <br />
ddz=z= <br />
Output-2 <br />
3</p>
</blockquote>

<blockquote>
  <p>Input-3 <br />
nljj <br />
Output-3 <br />
3</p>
</blockquote>

<p><br /></p>

<h3 id="문제-풀이">문제 풀이</h3>
<p>주어진 단어배열의 인덱스로 접근하는 방식과 주어진 단어에서 크로아티아 알파벳을 찾아 치환하는 방식
2가지로 문제를 풀어보았다.</p>

<h4 id="배열의-인덱스로-접근하는-방식">배열의 인덱스로 접근하는 방식</h4>
<p>배열의 인덱스별로 크로아티아 알파벳의 첫 문자와 같다면 그 다음문자도 같은 방식으로 검증해보자.</p>

<p>주어진 알파벳 단어를 S라 하고 S의 길이만큼 순회해야 하니 반복문을 작성하자. <br />
만약 c를 입력받았다면 c 다음 문자가 =인지 -인지를 알아야 한다. <br />
인덱스(i)로 접근하여 c의 다음 문자가 =인지 -인지 알 수 있다. <br />
현재 문자가 c, d, l, n, s, z 일 때 조건을 실행하여 다음문자를 검증하도록 하자.</p>

<p>그리고 c의 다음 문자가 =이나 -임을 알았다면 다음 문자인 =과 -는 검증할 필요가 없으니
<strong>인덱스를 하나 증가시켜서 그 다음 문자를 검증</strong>하도록 하자.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
</pre></td><td class="rouge-code"><pre><span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">str</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
    <span class="k">if</span><span class="o">(</span><span class="n">str</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">equals</span><span class="o">(</span><span class="s">"c"</span><span class="o">))</span> <span class="o">{</span>
        <span class="k">if</span><span class="o">(</span><span class="n">i</span> <span class="o">&lt;</span> <span class="n">str</span><span class="o">.</span><span class="na">length</span><span class="o">-</span><span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="n">str</span><span class="o">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">].</span><span class="na">equals</span><span class="o">(</span><span class="s">"="</span><span class="o">))</span> <span class="o">{</span>
                <span class="n">i</span> <span class="o">+=</span> <span class="mi">1</span><span class="o">;</span> <span class="c1">// 다음 문자 =는 검증필요 X</span>
            <span class="o">}</span>
            <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">str</span><span class="o">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">].</span><span class="na">equals</span><span class="o">(</span><span class="s">"-"</span><span class="o">))</span> <span class="o">{</span>
                <span class="n">i</span> <span class="o">+=</span> <span class="mi">1</span><span class="o">;</span> <span class="c1">// 다음 문자 -는 검증필요 X</span>
            <span class="o">}</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>그런데 중요한 것은 <strong>배열의 인덱스 범위를 벗어나면 안된다.</strong> <br />
예를 들어 “dz=c”의 경우 마지막 c 다음 문자가 없기에 인덱스 범위를 벗어나게 된다.</p>

<p><strong>인덱스 범위를 벗어나지 않도록 할 수 있을까?</strong></p>
<ul>
  <li>인덱스(i)가 S.length-1 값보다 작을 때 조건을 검증하도록 해야 한다.</li>
  <li>dz=의 경우에는 연달아 2글자이기에 인덱스(i)가 S.length-2 보다 작을 때 조건을 검증한다.</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
</pre></td><td class="rouge-code"><pre><span class="k">else</span> <span class="k">if</span><span class="o">(</span><span class="n">str</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">equals</span><span class="o">(</span><span class="s">"d"</span><span class="o">))</span> <span class="o">{</span>
    <span class="k">if</span><span class="o">(</span><span class="n">i</span> <span class="o">&lt;</span> <span class="n">str</span><span class="o">.</span><span class="na">length</span><span class="o">-</span><span class="mi">1</span><span class="o">)</span> <span class="o">{</span> <span class="c1">// i+1의 인덱스가 =일 경우</span>
        <span class="k">if</span><span class="o">(</span><span class="n">str</span><span class="o">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">].</span><span class="na">equals</span><span class="o">(</span><span class="s">"z"</span><span class="o">))</span> <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="n">i</span> <span class="o">&lt;</span> <span class="n">str</span><span class="o">.</span><span class="na">length</span><span class="o">-</span><span class="mi">2</span><span class="o">)</span> <span class="o">{</span> <span class="c1">// i+2의 인덱스가 =일 경우</span>
                <span class="k">if</span><span class="o">(</span><span class="n">str</span><span class="o">[</span><span class="n">i</span><span class="o">+</span><span class="mi">2</span><span class="o">].</span><span class="na">equals</span><span class="o">(</span><span class="s">"="</span><span class="o">))</span> <span class="o">{</span>
                    <span class="n">i</span> <span class="o">+=</span> <span class="mi">2</span><span class="o">;</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">str</span><span class="o">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">].</span><span class="na">equals</span><span class="o">(</span><span class="s">"-"</span><span class="o">))</span> <span class="o">{</span>
            <span class="n">i</span> <span class="o">+=</span> <span class="mi">1</span><span class="o">;</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><br /></p>

<h4 id="문자를-치환하는-방식">문자를 치환하는 방식</h4>
<p>입력받은 문자열 중 크로아티아 알파벳에 해당하는 문자 부분만 치환하면 단어의 개수를 알 수 있다.</p>

<p>먼저 크로아티아 알파벳 배열을 선언하고 초기화 하자.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="nc">String</span><span class="o">[]</span> <span class="n">alph_list</span> <span class="o">=</span> <span class="o">{</span><span class="s">"c="</span><span class="o">,</span> <span class="s">"c-"</span><span class="o">,</span> <span class="s">"dz="</span><span class="o">,</span> <span class="s">"d-"</span><span class="o">,</span> <span class="s">"lj"</span><span class="o">,</span> <span class="s">"nj"</span><span class="o">,</span> <span class="s">"s="</span><span class="o">,</span> <span class="s">"z="</span><span class="o">};</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>위의 alph_list의 원소들이 입력받은 문자열(str)에 포함되었다면 <br />
str에서 해당 크로아티아 알파벳 문자열을 찾아 “*“로 치환하자.</p>

<p>예를 들어 예제-1의 “ljes=njak”를 입력받는다면 <br />
lj, s=, nj 를 찾아 “<em>“로 치환하여 str는 “</em>e**ak”로 변경된다.</p>

<p>그러면 찾아야 하는 단어를 *로 치환하여 하나의 단어로 판단할 수 있다. <br />
치환되지 않은 e, a, k와 더불어 *가 3개니 결국 “ljes=njak”의 크로아티아 알파벳 개수를 알 수 있다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="rouge-code"><pre><span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">alph_list</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
    <span class="k">if</span><span class="o">(</span><span class="n">str</span><span class="o">.</span><span class="na">contains</span><span class="o">(</span><span class="n">alph_list</span><span class="o">[</span><span class="n">i</span><span class="o">]))</span> <span class="o">{</span>
        <span class="n">str</span> <span class="o">=</span> <span class="n">str</span><span class="o">.</span><span class="na">replace</span><span class="o">(</span><span class="n">alph_list</span><span class="o">[</span><span class="n">i</span><span class="o">],</span> <span class="s">"*"</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
<span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">str</span><span class="o">.</span><span class="na">length</span><span class="o">()</span> <span class="o">+</span> <span class="s">"\n"</span><span class="o">);</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><br /></p>

<h3 id="작성코드">작성코드</h3>

<h4 id="작성코드---배열의-인덱스로-접근하는-방식">작성코드 - 배열의 인덱스로 접근하는 방식</h4>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">java.io.*</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">IOException</span> <span class="o">{</span>
        <span class="nc">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>
        <span class="nc">BufferedWriter</span> <span class="n">bw</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedWriter</span><span class="o">(</span><span class="k">new</span> <span class="nc">OutputStreamWriter</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">));</span>        

        <span class="nc">String</span><span class="o">[]</span> <span class="n">str</span> <span class="o">=</span> <span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">().</span><span class="na">split</span><span class="o">(</span><span class="s">""</span><span class="o">);</span>
        <span class="kt">int</span> <span class="n">cnt</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>

        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">str</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="n">str</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">equals</span><span class="o">(</span><span class="s">"c"</span><span class="o">))</span> <span class="o">{</span>
                <span class="k">if</span><span class="o">(</span><span class="n">i</span> <span class="o">&lt;</span> <span class="n">str</span><span class="o">.</span><span class="na">length</span><span class="o">-</span><span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
                    <span class="k">if</span><span class="o">(</span><span class="n">str</span><span class="o">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">].</span><span class="na">equals</span><span class="o">(</span><span class="s">"="</span><span class="o">))</span> <span class="o">{</span>
                        <span class="n">i</span> <span class="o">+=</span> <span class="mi">1</span><span class="o">;</span>
                    <span class="o">}</span>
                    <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">str</span><span class="o">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">].</span><span class="na">equals</span><span class="o">(</span><span class="s">"-"</span><span class="o">))</span> <span class="o">{</span>
                        <span class="n">i</span> <span class="o">+=</span> <span class="mi">1</span><span class="o">;</span>
                    <span class="o">}</span>
                <span class="o">}</span>
            <span class="o">}</span>
            <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">str</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">equals</span><span class="o">(</span><span class="s">"d"</span><span class="o">))</span> <span class="o">{</span>
                <span class="k">if</span><span class="o">(</span><span class="n">i</span> <span class="o">&lt;</span> <span class="n">str</span><span class="o">.</span><span class="na">length</span><span class="o">-</span><span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
                    <span class="k">if</span><span class="o">(</span><span class="n">str</span><span class="o">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">].</span><span class="na">equals</span><span class="o">(</span><span class="s">"z"</span><span class="o">))</span> <span class="o">{</span>
                        <span class="k">if</span><span class="o">(</span><span class="n">i</span> <span class="o">&lt;</span> <span class="n">str</span><span class="o">.</span><span class="na">length</span><span class="o">-</span><span class="mi">2</span><span class="o">)</span> <span class="o">{</span>
                            <span class="k">if</span><span class="o">(</span><span class="n">str</span><span class="o">[</span><span class="n">i</span><span class="o">+</span><span class="mi">2</span><span class="o">].</span><span class="na">equals</span><span class="o">(</span><span class="s">"="</span><span class="o">))</span> <span class="o">{</span>
                                <span class="n">i</span> <span class="o">+=</span> <span class="mi">2</span><span class="o">;</span>
                            <span class="o">}</span>
                        <span class="o">}</span>
                    <span class="o">}</span>
                    <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">str</span><span class="o">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">].</span><span class="na">equals</span><span class="o">(</span><span class="s">"-"</span><span class="o">))</span> <span class="o">{</span>
                        <span class="n">i</span> <span class="o">+=</span> <span class="mi">1</span><span class="o">;</span>
                    <span class="o">}</span>
                <span class="o">}</span>
            <span class="o">}</span>
            <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">str</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">equals</span><span class="o">(</span><span class="s">"l"</span><span class="o">))</span> <span class="o">{</span>
                <span class="k">if</span><span class="o">(</span><span class="n">i</span> <span class="o">&lt;</span> <span class="n">str</span><span class="o">.</span><span class="na">length</span><span class="o">-</span><span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
                    <span class="k">if</span><span class="o">(</span><span class="n">str</span><span class="o">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">].</span><span class="na">equals</span><span class="o">(</span><span class="s">"j"</span><span class="o">))</span> <span class="o">{</span>
                        <span class="n">i</span> <span class="o">+=</span> <span class="mi">1</span><span class="o">;</span>
                    <span class="o">}</span>
                <span class="o">}</span>
            <span class="o">}</span>
            <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">str</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">equals</span><span class="o">(</span><span class="s">"n"</span><span class="o">))</span> <span class="o">{</span>
                <span class="k">if</span><span class="o">(</span><span class="n">i</span> <span class="o">&lt;</span> <span class="n">str</span><span class="o">.</span><span class="na">length</span><span class="o">-</span><span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
                    <span class="k">if</span><span class="o">(</span><span class="n">str</span><span class="o">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">].</span><span class="na">equals</span><span class="o">(</span><span class="s">"j"</span><span class="o">))</span> <span class="o">{</span>
                        <span class="n">i</span> <span class="o">+=</span> <span class="mi">1</span><span class="o">;</span>
                    <span class="o">}</span>
                <span class="o">}</span>
            <span class="o">}</span>
            <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">str</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">equals</span><span class="o">(</span><span class="s">"s"</span><span class="o">))</span> <span class="o">{</span>
                <span class="k">if</span><span class="o">(</span><span class="n">i</span> <span class="o">&lt;</span> <span class="n">str</span><span class="o">.</span><span class="na">length</span><span class="o">-</span><span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
                    <span class="k">if</span><span class="o">(</span><span class="n">str</span><span class="o">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">].</span><span class="na">equals</span><span class="o">(</span><span class="s">"="</span><span class="o">))</span> <span class="o">{</span>
                        <span class="n">i</span> <span class="o">+=</span> <span class="mi">1</span><span class="o">;</span>
                    <span class="o">}</span>
                <span class="o">}</span>
            <span class="o">}</span>
            <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">str</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">equals</span><span class="o">(</span><span class="s">"z"</span><span class="o">))</span> <span class="o">{</span>
                <span class="k">if</span><span class="o">(</span><span class="n">i</span> <span class="o">&lt;</span> <span class="n">str</span><span class="o">.</span><span class="na">length</span><span class="o">-</span><span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
                    <span class="k">if</span><span class="o">(</span><span class="n">str</span><span class="o">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">].</span><span class="na">equals</span><span class="o">(</span><span class="s">"="</span><span class="o">))</span> <span class="o">{</span>
                        <span class="n">i</span> <span class="o">+=</span> <span class="mi">1</span><span class="o">;</span>
                    <span class="o">}</span>
                <span class="o">}</span>
            <span class="o">}</span>
            <span class="n">cnt</span> <span class="o">+=</span> <span class="mi">1</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">cnt</span> <span class="o">+</span> <span class="s">"\n"</span><span class="o">);</span>
        <span class="n">bw</span><span class="o">.</span><span class="na">flush</span><span class="o">();</span>
        <span class="n">bw</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
        <span class="n">br</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<h4 id="작성코드---문자를-치환하는-방식">작성코드 - 문자를 치환하는 방식</h4>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">java.io.*</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">IOException</span> <span class="o">{</span>
        <span class="nc">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>
        <span class="nc">BufferedWriter</span> <span class="n">bw</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedWriter</span><span class="o">(</span><span class="k">new</span> <span class="nc">OutputStreamWriter</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">));</span>        

        <span class="nc">String</span> <span class="n">str</span> <span class="o">=</span> <span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">();</span>
        <span class="nc">String</span><span class="o">[]</span> <span class="n">alph_list</span> <span class="o">=</span> <span class="o">{</span><span class="s">"c="</span><span class="o">,</span> <span class="s">"c-"</span><span class="o">,</span> <span class="s">"dz="</span><span class="o">,</span> <span class="s">"d-"</span><span class="o">,</span> <span class="s">"lj"</span><span class="o">,</span> <span class="s">"nj"</span><span class="o">,</span> <span class="s">"s="</span><span class="o">,</span> <span class="s">"z="</span><span class="o">};</span>

        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">alph_list</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="n">str</span><span class="o">.</span><span class="na">contains</span><span class="o">(</span><span class="n">alph_list</span><span class="o">[</span><span class="n">i</span><span class="o">]))</span> <span class="o">{</span>
                <span class="n">str</span> <span class="o">=</span> <span class="n">str</span><span class="o">.</span><span class="na">replace</span><span class="o">(</span><span class="n">alph_list</span><span class="o">[</span><span class="n">i</span><span class="o">],</span> <span class="s">"*"</span><span class="o">);</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">str</span><span class="o">.</span><span class="na">length</span><span class="o">()</span> <span class="o">+</span> <span class="s">"\n"</span><span class="o">);</span>
        <span class="n">bw</span><span class="o">.</span><span class="na">flush</span><span class="o">();</span>
        <span class="n">bw</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
        <span class="n">br</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="회고">회고</h3>
<ul>
  <li>배열의 인덱스로 접근하는 방식과 문자열을 치환하는 방식으로 문제의 비즈니스 로직 패턴을 다르게 생각하여 접근할 수 있었다.</li>
  <li>두가지 방식 모두 메모리와 실행속도는 큰 차이가 없었으나, 코드길이가 대폭 줄었다는 것만으로 뿌듯했다..</li>
</ul>
<center><img src="/assets/images/baekjoon/2941-attach.png" /></center>]]></content><author><name>lango</name></author><category term="Java" /><category term="blog" /><category term="algorithm" /><category term="study" /><category term="java" /><category term="baekjoon" /><summary type="html"><![CDATA[크로아티아 알파벳]]></summary></entry><entry><title type="html">[알고리즘 스터디 - Java] 백준 1157번</title><link href="http://localhost:4000/java/20-post/" rel="alternate" type="text/html" title="[알고리즘 스터디 - Java] 백준 1157번" /><published>2022-08-05T00:00:00+09:00</published><updated>2022-08-05T00:00:00+09:00</updated><id>http://localhost:4000/java/20-post</id><content type="html" xml:base="http://localhost:4000/java/20-post/"><![CDATA[<p><br /></p>

<center><img src="/assets/images/baekjoon/1157.png" /></center>

<blockquote>
  <p>Input-1 <br />
Mississipi <br />
Output-1 <br />
?</p>
</blockquote>

<blockquote>
  <p>Input-2 <br />
zZa <br />
Output-2 <br />
Z</p>
</blockquote>

<blockquote>
  <p>Input-3 <br />
baaa <br />
Output-3 <br />
A</p>
</blockquote>

<p><br /></p>

<h3 id="문제-풀이">문제 풀이</h3>
<p>알파벳 대소문자로된 단어가 주어지면 해당 단어의 범위는 아래와 같다.</p>
<ul>
  <li>a~z 또는 A~Z</li>
</ul>

<p>이 문제의 핵심은 <strong>문자의 인코딩 값을 다루는 것</strong>이다.</p>

<p>먼저 각 알파벳 별로 사용된 빈도수를 측정하기 위한 배열을 선언한다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="kt">int</span><span class="o">[]</span> <span class="n">alph_list</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="mi">26</span><span class="o">];</span> <span class="c1">// 알파벳은 총 26개</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>그리고 단어를 입력받는데 대소문자는 구분하지 않으니 
대문자이거나 소문자이거나 같은 위치의 배열 값을 증가시켜야 한다.</p>
<ul>
  <li>입력 단어가 C든 c든 alph_list에서는 c의 자리인 2번 원소 값을 증가시켜야 한다.</li>
</ul>

<p><strong>어떻게 대소문자 구분없이 같은 원소에 접근할 수 있을까?</strong><br />
주어진 단어를 아스키코드로 변환하여 접근해야 한다.</p>
<ul>
  <li>소문자인 a~z는 97~122이고 대문자인 A~Z는 65~90이다.</li>
</ul>

<p>만약 대문자 C를 입력받았다면 C를 아스키코드로 변환하면 67이기에 65를 빼면 2이다.
또한 소문자 c를 입력받았다면 c를 아스키코드로 변환하면 99이고 97을 빼면 2가 된다.
2는 alph_list에서 2 원소값을 담당하고 있지 않은가..!</p>

<p>그렇게 주어진 단어를 아스키 코드로 변환하여 
대문자면 65, 소문자면 97를 뺀 값으로 alph_list 배열의 원소로 접근할 수 있다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre><span class="nc">String</span> <span class="n">str</span> <span class="o">=</span> <span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">();</span> <span class="c1">// 입력받은 단어</span>
<span class="c1">// 1. 대문자일 경우 주어진 단어에서 65를 뺀 값으로 원소에 접근하여 증가시킨다.</span>
<span class="c1">// 2. 소문자일 경우 97을 뺀 값으로 원소에 접근하여 증가시킨다.</span>
<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">str</span><span class="o">.</span><span class="na">length</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
    <span class="k">if</span><span class="o">(</span><span class="n">str</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">)&gt;=</span><span class="mi">65</span> <span class="o">&amp;&amp;</span> <span class="n">str</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">)&lt;=</span><span class="mi">90</span><span class="o">)</span> <span class="n">alph_list</span><span class="o">[</span><span class="n">str</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">)-</span><span class="mi">65</span><span class="o">]</span> <span class="o">+=</span> <span class="mi">1</span><span class="o">;</span>
    <span class="k">else</span> <span class="n">alph_list</span><span class="o">[</span><span class="n">str</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">)-</span><span class="mi">97</span><span class="o">]</span> <span class="o">+=</span> <span class="mi">1</span><span class="o">;</span>     
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>주어진 단어를 통해 알파벳 배열에서의 사용 빈도수를 측정했으니 
해당 배열들의 <strong>원소값을 비교하여 가장 큰 값을 가진 원소</strong>를 찾아야 한다.
기존에 알고 있던 배열에서의 최댓값 구하는 로직을 그대로 적용하였다.</p>

<p>가장 큰 값을 가진 원소의 인덱스를 찾으면 대문자로 출력해야 하니 
해당 인덱스에 65를 더하고 char형으로 파싱하여 대문자로 출력할 수 있다.</p>

<p>여기서 만약 가장 큰 값(max)이 2개 이상이라면 ?를 출력할 수 있도록 작성하였다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
</pre></td><td class="rouge-code"><pre><span class="kt">int</span> <span class="n">max</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
<span class="kt">char</span> <span class="n">result</span> <span class="o">=</span> <span class="sc">'?'</span><span class="o">;</span>
<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">j</span><span class="o">&lt;</span><span class="n">alph_list</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
    <span class="k">if</span> <span class="o">(</span><span class="n">max</span> <span class="o">&lt;</span> <span class="n">alph_list</span><span class="o">[</span><span class="n">j</span><span class="o">])</span> <span class="o">{</span>
        <span class="n">max</span> <span class="o">=</span> <span class="n">alph_list</span><span class="o">[</span><span class="n">j</span><span class="o">];</span>
        <span class="n">result</span> <span class="o">=</span> <span class="o">(</span><span class="kt">char</span><span class="o">)</span> <span class="o">(</span><span class="n">j</span><span class="o">+</span><span class="mi">65</span><span class="o">);</span>
    <span class="o">}</span>
    <span class="k">else</span> <span class="nf">if</span> <span class="o">(</span><span class="n">max</span> <span class="o">==</span> <span class="n">alph_list</span><span class="o">[</span><span class="n">j</span><span class="o">])</span> <span class="n">result</span> <span class="o">=</span> <span class="sc">'?'</span><span class="o">;</span>
<span class="o">}</span>
<span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">result</span> <span class="o">+</span> <span class="s">"\n"</span><span class="o">);</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>char형으로 파싱하며 왜 char형은 홑 따옴표를 쓰는지 궁금해서 찾아보았다.</p>

<blockquote>
  <p>문자형 char란?</p>
  <ul>
    <li>하나의 문자를 저장하기 위한 변수를 선언할 때 사용된다.</li>
    <li>말 그대로 하나의 문자만 저장할 수 있다.</li>
    <li>주로 문자, 유니코드, 아스키코드를 나타낼 수 있다.</li>
    <li>꼭 홑 따옴표로 감싸주어야 한다. <strong>ex) char c = ‘a’;</strong></li>
  </ul>
</blockquote>

<p><br /></p>

<h3 id="작성코드">작성코드</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">java.io.*</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">IOException</span> <span class="o">{</span>
        <span class="nc">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>
        <span class="nc">BufferedWriter</span> <span class="n">bw</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedWriter</span><span class="o">(</span><span class="k">new</span> <span class="nc">OutputStreamWriter</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">));</span>
        
        <span class="kt">int</span><span class="o">[]</span> <span class="n">alph_list</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="mi">26</span><span class="o">];</span>
        <span class="nc">String</span> <span class="n">str</span> <span class="o">=</span> <span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">();</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">str</span><span class="o">.</span><span class="na">length</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="n">str</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">)&gt;=</span><span class="mi">65</span> <span class="o">&amp;&amp;</span> <span class="n">str</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">)&lt;=</span><span class="mi">90</span><span class="o">)</span> <span class="n">alph_list</span><span class="o">[</span><span class="n">str</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">)-</span><span class="mi">65</span><span class="o">]</span> <span class="o">+=</span> <span class="mi">1</span><span class="o">;</span>
            <span class="k">else</span> <span class="n">alph_list</span><span class="o">[</span><span class="n">str</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">)-</span><span class="mi">97</span><span class="o">]</span> <span class="o">+=</span> <span class="mi">1</span><span class="o">;</span>
        <span class="o">}</span>

        <span class="kt">int</span> <span class="n">max</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="kt">char</span> <span class="n">result</span> <span class="o">=</span> <span class="sc">'?'</span><span class="o">;</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">j</span><span class="o">&lt;</span><span class="n">alph_list</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">max</span> <span class="o">&lt;</span> <span class="n">alph_list</span><span class="o">[</span><span class="n">j</span><span class="o">])</span> <span class="o">{</span>
                <span class="n">max</span> <span class="o">=</span> <span class="n">alph_list</span><span class="o">[</span><span class="n">j</span><span class="o">];</span>
                <span class="n">result</span> <span class="o">=</span> <span class="o">(</span><span class="kt">char</span><span class="o">)</span> <span class="o">(</span><span class="n">j</span><span class="o">+</span><span class="mi">65</span><span class="o">);</span>
            <span class="o">}</span>
            <span class="k">else</span> <span class="nf">if</span> <span class="o">(</span><span class="n">max</span> <span class="o">==</span> <span class="n">alph_list</span><span class="o">[</span><span class="n">j</span><span class="o">])</span> <span class="n">result</span> <span class="o">=</span> <span class="sc">'?'</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">result</span> <span class="o">+</span> <span class="s">"\n"</span><span class="o">);</span>

        <span class="n">bw</span><span class="o">.</span><span class="na">flush</span><span class="o">();</span>
        <span class="n">bw</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
        <span class="n">br</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="회고">회고</h3>
<ul>
  <li>문자의 인코딩 값에 대해 제대로 파악하지 못해 많은 시간을 들여 문제를 풀게 되었다.</li>
  <li>문자형 char를 활용함으로써 훨씬 안정적이고 좋은 성능을 낼 수 있다고 알게 되었다.</li>
</ul>]]></content><author><name>lango</name></author><category term="Java" /><category term="blog" /><category term="algorithm" /><category term="study" /><category term="java" /><category term="baekjoon" /><summary type="html"><![CDATA[단어 공부]]></summary></entry><entry><title type="html">[알고리즘 스터디 - Java] 백준 1316번</title><link href="http://localhost:4000/java/22-post/" rel="alternate" type="text/html" title="[알고리즘 스터디 - Java] 백준 1316번" /><published>2022-08-05T00:00:00+09:00</published><updated>2022-08-05T00:00:00+09:00</updated><id>http://localhost:4000/java/22-post</id><content type="html" xml:base="http://localhost:4000/java/22-post/"><![CDATA[<p><br /></p>

<center><img src="/assets/images/baekjoon/1316.png" /></center>

<blockquote>
  <p>Input-1 <br />
3 <br />
happy <br />
new <br />
year <br />
Output-1 <br />
3</p>
</blockquote>

<blockquote>
  <p>Input-2 <br />
4 <br />
aba <br />
abab <br />
abcabc <br />
a <br />
Output-2 <br />
1</p>
</blockquote>

<blockquote>
  <p>Input-3 <br />
5 <br />
ab <br />
aa <br />
aca <br />
ba <br />
bb <br />
Output-3 <br />
4</p>
</blockquote>

<h3 id="문제-풀이">문제 풀이</h3>
<p>주어진 단어를 순회하며 문자별로 그룹단어인지 검증하기 위해서는 아래의 조건이 검증되어야 한다.</p>
<ul>
  <li><strong>문자가 중복으로 입력</strong>되었을 경우(단, 연속된 문자는 예외)</li>
</ul>

<p>상기 조건이 충족되는 경우 그룹단어가 아닌 것으로 간주한다.</p>

<p>substring() 함수를 통해 현재문자 이후의 문자열을 슬라이싱하여 another 변수에 담는다. <br />
현재 문자가 another 값에 포함되었다면, 연속된 문자열인지를 검증할 수 있다. <br />
연속된 문자열이 아니라 중복된 문자열일 경우 그룹단어가 아니므로 개수를 세면 안된다.</p>

<p>예를 들어 happy의 경우 첫번째 p에서 그룹단어 여부를 검증하게 된다. <br />
그런데 <strong>pp는 연속된 문자열이기에 중복된 문자열로 보지 않는다.</strong></p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
</pre></td><td class="rouge-code"><pre><span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span> <span class="n">j</span><span class="o">&lt;</span><span class="n">str</span><span class="o">.</span><span class="na">length</span><span class="o">();</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
    <span class="nc">String</span> <span class="n">another</span> <span class="o">=</span> <span class="n">str</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="n">j</span><span class="o">,</span> <span class="n">str</span><span class="o">.</span><span class="na">length</span><span class="o">());</span> <span class="c1">// 현재문자 이후의 문자열</span>
    <span class="k">if</span><span class="o">(</span><span class="n">another</span><span class="o">.</span><span class="na">contains</span><span class="o">(</span><span class="n">strs</span><span class="o">[</span><span class="n">j</span><span class="o">-</span><span class="mi">1</span><span class="o">]))</span> <span class="o">{</span> <span class="c1">// 현재문자가 이후 문자열에 포함되었다면(중복)</span>
        <span class="k">if</span><span class="o">(</span><span class="n">strs</span><span class="o">[</span><span class="n">j</span><span class="o">-</span><span class="mi">1</span><span class="o">].</span><span class="na">equals</span><span class="o">(</span><span class="n">strs</span><span class="o">[</span><span class="n">j</span><span class="o">]))</span> <span class="o">{</span>
            <span class="k">continue</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="k">else</span> <span class="o">{</span>
            <span class="n">cnt</span> <span class="o">-=</span> <span class="mi">1</span><span class="o">;</span>
            <span class="k">break</span><span class="o">;</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><br /></p>

<h3 id="작성코드">작성코드</h3>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">java.io.*</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">IOException</span> <span class="o">{</span>
        <span class="nc">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>
        <span class="nc">BufferedWriter</span> <span class="n">bw</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedWriter</span><span class="o">(</span><span class="k">new</span> <span class="nc">OutputStreamWriter</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">));</span>        
        
        <span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
        <span class="kt">int</span> <span class="n">cnt</span> <span class="o">=</span> <span class="n">n</span><span class="o">;</span>
        
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="nc">String</span> <span class="n">str</span> <span class="o">=</span> <span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">();</span>
            <span class="nc">String</span><span class="o">[]</span> <span class="n">strs</span> <span class="o">=</span> <span class="n">str</span><span class="o">.</span><span class="na">split</span><span class="o">(</span><span class="s">""</span><span class="o">);</span>
            
            <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span> <span class="n">j</span><span class="o">&lt;</span><span class="n">str</span><span class="o">.</span><span class="na">length</span><span class="o">();</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
                <span class="nc">String</span> <span class="n">another</span> <span class="o">=</span> <span class="n">str</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="n">j</span><span class="o">,</span> <span class="n">str</span><span class="o">.</span><span class="na">length</span><span class="o">());</span>
                <span class="k">if</span><span class="o">(</span><span class="n">another</span><span class="o">.</span><span class="na">contains</span><span class="o">(</span><span class="n">strs</span><span class="o">[</span><span class="n">j</span><span class="o">-</span><span class="mi">1</span><span class="o">]))</span> <span class="o">{</span>
                    <span class="k">if</span><span class="o">(</span><span class="n">strs</span><span class="o">[</span><span class="n">j</span><span class="o">-</span><span class="mi">1</span><span class="o">].</span><span class="na">equals</span><span class="o">(</span><span class="n">strs</span><span class="o">[</span><span class="n">j</span><span class="o">]))</span> <span class="o">{</span>
                        <span class="k">continue</span><span class="o">;</span>
                    <span class="o">}</span>
                    <span class="k">else</span> <span class="o">{</span>
                        <span class="n">cnt</span> <span class="o">-=</span> <span class="mi">1</span><span class="o">;</span>
                        <span class="k">break</span><span class="o">;</span>
                    <span class="o">}</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">cnt</span> <span class="o">+</span> <span class="s">"\n"</span><span class="o">);</span>
        <span class="n">bw</span><span class="o">.</span><span class="na">flush</span><span class="o">();</span>
        <span class="n">bw</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
        <span class="n">br</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="회고">회고</h3>
<ul>
  <li>패턴을 구성할 때 연속된 문자열은 제외하고 중복된 문자열을 어떻게 찾을까 고민을 많이 했다.</li>
  <li>복잡하기보단 단순하게 현재 문자 이후의 문자열에 포함여부를 어떻게 알 수 있을까? 라는 생각으로 접근하여 해결하였다.</li>
</ul>]]></content><author><name>lango</name></author><category term="Java" /><category term="blog" /><category term="algorithm" /><category term="study" /><category term="java" /><category term="baekjoon" /><summary type="html"><![CDATA[그룹 단어 체커]]></summary></entry><entry><title type="html">[알고리즘 스터디 - Java] 백준 1065번</title><link href="http://localhost:4000/java/18-post/" rel="alternate" type="text/html" title="[알고리즘 스터디 - Java] 백준 1065번" /><published>2022-08-04T00:00:00+09:00</published><updated>2022-08-04T00:00:00+09:00</updated><id>http://localhost:4000/java/18-post</id><content type="html" xml:base="http://localhost:4000/java/18-post/"><![CDATA[<p><br /></p>

<center><img src="/assets/images/baekjoon/1065.png" /></center>

<blockquote>
  <p>Input-1 <br />
110 <br />
Output-1 <br />
99</p>
</blockquote>

<blockquote>
  <p>Input-2 <br />
210 <br />
Output-2 <br />
105</p>
</blockquote>

<blockquote>
  <p>Input-3 <br />
1000 <br />
Output-3 <br />
144</p>
</blockquote>

<p><br /></p>

<h3 id="문제-풀이">문제 풀이</h3>
<p>문제 풀이에 앞서 한수가 무엇인지 이해가 잘 되지 않았다.<br />
한수를 알려면 등차수열에 대해서도 알아야 한다.</p>

<blockquote>
  <p><strong>한수란?</strong><br />
어떤 정수 A의 각 자리수가 등차수열을 이루는 수이다.</p>
</blockquote>

<blockquote>
  <p><strong>등차수열이란?</strong><br />
연속된 두 개의 수의 차이가 일정한 수열을 말한다.</p>
</blockquote>

<ol>
  <li>
    <p>그러면 1부터 9까지는 항이 하나뿐인데 등차수열인가?<br />
1~9까지는 하나의 등차수열로 본다.</p>
  </li>
  <li>
    <p>그러면 10부터 99까지는 항이 두개인데 등차수열인가?<br />
10의 경우 길이가 2이고 첫번째 항이 1, 두번째 항이 0이며 공차가 -1인 등차수열로 볼 수 있다.</p>
  </li>
</ol>

<p>두자리수인 <strong>99까지는 모두 등차수열</strong>인 것이다.</p>

<p>자 그러면 <strong>100부터 주어진 수(N)의 자리수별 차이가 같은 수</strong>를 찾으면 된다.</p>

<p>주어진 수가 100 이상이라면 각 자리수를 구하여 첫째항과 둘째항의 차와 둘째항과 셋째항의 차가 같은지 검증하는 로직을
<strong>checkHansoo 함수에 작성</strong>하였다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
</pre></td><td class="rouge-code"><pre><span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">checkHansoo</span><span class="o">(</span><span class="kt">int</span> <span class="n">n</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">list</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>
        <span class="k">while</span><span class="o">(</span><span class="n">n</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span> <span class="c1">// 주어진 수(n)의 자리수를 구해 list에 저장</span>
            <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">n</span> <span class="o">%</span> <span class="mi">10</span><span class="o">);</span>
            <span class="n">n</span> <span class="o">/=</span> <span class="mi">10</span><span class="o">;</span>    
        <span class="o">}</span>
        <span class="k">if</span><span class="o">((</span><span class="n">list</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">)-</span><span class="n">list</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">1</span><span class="o">))</span> <span class="o">==</span> <span class="o">(</span><span class="n">list</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">1</span><span class="o">)-</span><span class="n">list</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">2</span><span class="o">)))</span> <span class="k">return</span> <span class="mi">1</span><span class="o">;</span>
        <span class="k">else</span> <span class="k">return</span> <span class="mi">0</span><span class="o">;</span>
    <span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>마지막은 결국 주어진 수까지 한수의 개수를 구하는 것이기에 주어진 수(N)만큼 반복하며 한수의 개수를 측정하였다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
</pre></td><td class="rouge-code"><pre><span class="k">if</span><span class="o">(</span><span class="n">n</span> <span class="o">&lt;</span> <span class="mi">100</span><span class="o">)</span> <span class="n">hs</span> <span class="o">=</span> <span class="n">n</span><span class="o">;</span> <span class="c1">// 1부터 99까지는 모두 한수</span>
<span class="k">else</span> <span class="o">{</span> <span class="c1">// 100부터 1000까지</span>
    <span class="n">hs</span> <span class="o">=</span> <span class="mi">99</span><span class="o">;</span>
    <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">100</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;=</span><span class="n">n</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
        <span class="n">hs</span> <span class="o">+=</span> <span class="n">checkHansoo</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>        
    <span class="o">}</span>   
    <span class="k">if</span><span class="o">(</span><span class="n">n</span> <span class="o">==</span> <span class="mi">1000</span><span class="o">)</span> <span class="n">hs</span> <span class="o">-=</span> <span class="mi">1</span><span class="o">;</span> 
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><br /></p>

<h3 id="작성코드">작성코드</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">java.io.*</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">IOException</span> <span class="o">{</span>
        <span class="nc">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>
        <span class="nc">BufferedWriter</span> <span class="n">bw</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedWriter</span><span class="o">(</span><span class="k">new</span> <span class="nc">OutputStreamWriter</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">));</span>
        <span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
        <span class="kt">int</span> <span class="n">hs</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>

        <span class="k">if</span><span class="o">(</span><span class="n">n</span> <span class="o">&lt;</span> <span class="mi">100</span><span class="o">)</span> <span class="n">hs</span> <span class="o">=</span> <span class="n">n</span><span class="o">;</span>
        <span class="k">else</span> <span class="o">{</span>
            <span class="n">hs</span> <span class="o">=</span> <span class="mi">99</span><span class="o">;</span>
            <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">100</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;=</span><span class="n">n</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
                <span class="n">hs</span> <span class="o">+=</span> <span class="n">checkHansoo</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>        
            <span class="o">}</span>   
            <span class="k">if</span><span class="o">(</span><span class="n">n</span> <span class="o">==</span> <span class="mi">1000</span><span class="o">)</span> <span class="n">hs</span> <span class="o">-=</span> <span class="mi">1</span><span class="o">;</span> 
        <span class="o">}</span>

        <span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">hs</span> <span class="o">+</span> <span class="s">"\n"</span><span class="o">);</span>
        <span class="n">bw</span><span class="o">.</span><span class="na">flush</span><span class="o">();</span>
        <span class="n">bw</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
        <span class="n">br</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">checkHansoo</span><span class="o">(</span><span class="kt">int</span> <span class="n">n</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">list</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>
        
        <span class="k">while</span><span class="o">(</span><span class="n">n</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">n</span> <span class="o">%</span> <span class="mi">10</span><span class="o">);</span>
            <span class="n">n</span> <span class="o">/=</span> <span class="mi">10</span><span class="o">;</span>    
        <span class="o">}</span>

        <span class="k">if</span><span class="o">((</span><span class="n">list</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">)-</span><span class="n">list</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">1</span><span class="o">))</span> <span class="o">==</span> <span class="o">(</span><span class="n">list</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">1</span><span class="o">)-</span><span class="n">list</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">2</span><span class="o">)))</span> <span class="k">return</span> <span class="mi">1</span><span class="o">;</span>
        <span class="k">else</span> <span class="k">return</span> <span class="mi">0</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="회고">회고</h3>
<ul>
  <li>4673번 셀프넘버 문제에서도 정수의 자리수를 알아야 했는데 이번 1065 문제에서도 동일한 요구사항이 있었던 것으로 보아 자리수 별로 접근하는 방식을 명확하게 알고 있어야 한다고 느꼈다.</li>
</ul>]]></content><author><name>lango</name></author><category term="Java" /><category term="blog" /><category term="algorithm" /><category term="study" /><category term="java" /><category term="baekjoon" /><summary type="html"><![CDATA[한수]]></summary></entry><entry><title type="html">[알고리즘 스터디 - Java] 백준 2675번</title><link href="http://localhost:4000/java/19-post/" rel="alternate" type="text/html" title="[알고리즘 스터디 - Java] 백준 2675번" /><published>2022-08-04T00:00:00+09:00</published><updated>2022-08-04T00:00:00+09:00</updated><id>http://localhost:4000/java/19-post</id><content type="html" xml:base="http://localhost:4000/java/19-post/"><![CDATA[<p><br /></p>

<center><img src="/assets/images/baekjoon/2675.png" /></center>

<blockquote>
  <p>Input <br />
2 <br />
3 ABC <br />
5 /HTP</p>
</blockquote>

<blockquote>
  <p>Output <br />
AAABBBCCC <br />
/////HHHHHTTTTTPPPPP <br /></p>
</blockquote>

<p><br /></p>

<h3 id="문제-풀이">문제 풀이</h3>
<p>테스트케이스의 수를 T, T별로 반복할 횟수를 R, 주어진 문자열을 S, 새로운 문자열을 P라고 해보자.
여기서 테스트케이스만큼 입력받는 동안 S의 각 문자를 R번 반복한 P로 만들어 출력하면 된다.</p>

<p>먼저 T를 입력받고 T만큼 반복하며 입력받은 줄에서 R과 S를 추려낸다.
그리고 S의 각 문자별로 R만큼 반복하여 P를 만든다.
<strong>str.repeat()</strong> 함수를 이용해 S의 각 문자별로 반복할 수 있도록 하였다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="rouge-code"><pre><span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">t</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
    <span class="n">st</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span> <span class="c1">// 하나의 테스트케이스</span>
    <span class="kt">int</span> <span class="n">r</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span> <span class="c1">// 반복횟수 R</span>
    <span class="nc">String</span><span class="o">[]</span> <span class="n">s</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">String</span><span class="o">[</span><span class="n">r</span><span class="o">];</span> <span class="c1">// 주어진 문자열 S 초기화</span>
    <span class="n">s</span> <span class="o">=</span> <span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">().</span><span class="na">split</span><span class="o">(</span><span class="s">""</span><span class="o">);</span> <span class="c1">// S 값 정의</span>
    
    <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">j</span><span class="o">&lt;</span><span class="n">s</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
        <span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">s</span><span class="o">[</span><span class="n">j</span><span class="o">].</span><span class="na">repeat</span><span class="o">(</span><span class="n">r</span><span class="o">)</span> <span class="o">+</span> <span class="s">""</span><span class="o">);</span> <span class="c1">// P 출력</span>
    <span class="o">}</span>
    <span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="s">"\n"</span><span class="o">);</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><br /></p>

<h3 id="작성코드">작성코드</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">java.io.*</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">IOException</span> <span class="o">{</span>
        <span class="nc">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>
        <span class="nc">BufferedWriter</span> <span class="n">bw</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedWriter</span><span class="o">(</span><span class="k">new</span> <span class="nc">OutputStreamWriter</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">));</span>
        
        <span class="kt">int</span> <span class="n">t</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
        <span class="nc">StringTokenizer</span> <span class="n">st</span><span class="o">;</span>
        
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">t</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="n">st</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
            <span class="kt">int</span> <span class="n">r</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
            <span class="nc">String</span><span class="o">[]</span> <span class="n">s</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">String</span><span class="o">[</span><span class="n">r</span><span class="o">];</span>
            <span class="n">s</span> <span class="o">=</span> <span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">().</span><span class="na">split</span><span class="o">(</span><span class="s">""</span><span class="o">);</span>
            
            <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">j</span><span class="o">&lt;</span><span class="n">s</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
                <span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">s</span><span class="o">[</span><span class="n">j</span><span class="o">].</span><span class="na">repeat</span><span class="o">(</span><span class="n">r</span><span class="o">)</span> <span class="o">+</span> <span class="s">""</span><span class="o">);</span>
            <span class="o">}</span>
            <span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="s">"\n"</span><span class="o">);</span>
        <span class="o">}</span>

        <span class="n">bw</span><span class="o">.</span><span class="na">flush</span><span class="o">();</span>
        <span class="n">bw</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
        <span class="n">br</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
    <span class="o">}</span>

<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>]]></content><author><name>lango</name></author><category term="Java" /><category term="blog" /><category term="algorithm" /><category term="study" /><category term="java" /><category term="baekjoon" /><summary type="html"><![CDATA[문자열 반복]]></summary></entry><entry><title type="html">[알고리즘 스터디 - Java] 백준 4673번</title><link href="http://localhost:4000/java/17-post/" rel="alternate" type="text/html" title="[알고리즘 스터디 - Java] 백준 4673번" /><published>2022-08-03T00:00:00+09:00</published><updated>2022-08-03T00:00:00+09:00</updated><id>http://localhost:4000/java/17-post</id><content type="html" xml:base="http://localhost:4000/java/17-post/"><![CDATA[<p><br /></p>

<center><img src="/assets/images/baekjoon/4673.png" /></center>

<blockquote>
  <p>Output</p>
  <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
</pre></td><td class="rouge-code"><pre>1
3
5
7
9
20
31
42
53
64
 |
 |       &lt;-- a lot more numbers
 |
9903
9914
9925
9927
9938
9949
9960
9971
9982
9993
</pre></td></tr></tbody></table></code></pre></div>  </div>
</blockquote>

<h3 id="접근-방식">접근 방식</h3>

<p>핵심은 셀프넘버인 수를 구하는 것이 아니라 셀프넘버가 아닌 수를 구하는 것이다.</p>

<p>먼저 셀프넘버를 구하는 함수(notSelfNum)를 작성하였다.</p>
<ul>
  <li>셀프넘버 = 본인 + <strong>본인의 N자리별 수</strong></li>
</ul>

<p>본인의 N자리별 수를 알아내려면 숫자(a)를 10으로 반복해서 나눠가면서, 10으로 나머지 연산을 하면 일의 자리를 얻어낼 수 있다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
</pre></td><td class="rouge-code"><pre><span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">notSelfNum</span><span class="o">(</span><span class="kt">int</span> <span class="n">a</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">self</span> <span class="o">=</span> <span class="n">a</span><span class="o">;</span>
        <span class="k">while</span><span class="o">(</span><span class="n">a</span> <span class="o">!=</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">self</span> <span class="o">=</span> <span class="n">self</span> <span class="o">+</span> <span class="o">(</span><span class="n">a</span> <span class="o">%</span> <span class="mi">10</span><span class="o">);</span>
            <span class="n">a</span> <span class="o">/=</span> <span class="mi">10</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">self</span><span class="o">;</span>
    <span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<blockquote>
  <p>셀프넘버를 구했으니 셀프넘버가 아닌 수를 어떻게 찾아야 할까?</p>
</blockquote>

<p>1부터 10000까지 수 중 셀프넘버인 수를 제거하는 방식으로 작성하였다.</p>
<ul>
  <li>1-10000까지 모든 수가 존재하는 배열(A)과 1-10000까지의 셀프넘버 배열(B)을 만든다.</li>
  <li>A에서 B의 원소를 제거한다.</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
</pre></td><td class="rouge-code"><pre><span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">result</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span> <span class="c1">// A</span>
<span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">self_nums</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span> <span class="c1">// B</span>

<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;=</span><span class="n">n</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
    <span class="n">result</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">i</span><span class="o">);</span> <span class="c1">// 1-10000까지 모든 수 배열</span>
    <span class="n">self_nums</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="nc">Main</span><span class="o">.</span><span class="na">notSelfNum</span><span class="o">(</span><span class="n">i</span><span class="o">));</span> <span class="c1">// // 1-10000까지 셀프넘버 배열</span>
<span class="o">}</span>
<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">j</span><span class="o">&lt;=</span><span class="n">n</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span> <span class="c1">// A배열에서 셀프넘버 숫자만 제거</span>
    <span class="n">result</span><span class="o">.</span><span class="na">remove</span><span class="o">(</span><span class="n">self_nums</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">j</span><span class="o">));</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><br /></p>

<h3 id="작성코드">작성코드</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="mi">10000</span><span class="o">;</span>
        <span class="n">selfNum</span><span class="o">(</span><span class="n">n</span><span class="o">);</span>   
    <span class="o">}</span>
    
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">selfNum</span><span class="o">(</span><span class="kt">int</span> <span class="n">n</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">result</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>
        <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">self_nums</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;=</span><span class="n">n</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="n">result</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
            <span class="n">self_nums</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="nc">Main</span><span class="o">.</span><span class="na">notSelfNum</span><span class="o">(</span><span class="n">i</span><span class="o">));</span>
        <span class="o">}</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">j</span><span class="o">&lt;=</span><span class="n">n</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
            <span class="n">result</span><span class="o">.</span><span class="na">remove</span><span class="o">(</span><span class="n">self_nums</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">j</span><span class="o">));</span>
        <span class="o">}</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">a</span> <span class="o">:</span> <span class="n">result</span><span class="o">)</span> <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">a</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">notSelfNum</span><span class="o">(</span><span class="kt">int</span> <span class="n">a</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">self</span> <span class="o">=</span> <span class="n">a</span><span class="o">;</span>
        <span class="k">while</span><span class="o">(</span><span class="n">a</span> <span class="o">!=</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">self</span> <span class="o">=</span> <span class="n">self</span> <span class="o">+</span> <span class="o">(</span><span class="n">a</span> <span class="o">%</span> <span class="mi">10</span><span class="o">);</span>
            <span class="n">a</span> <span class="o">/=</span> <span class="mi">10</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">self</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="회고">회고</h3>
<ul>
  <li>셀프넘버를 구하는 로직을 별도로 함수를 작성하여 핵심 비즈니스 로직을 분리함으로 깔끔한 코드를 작성할 수 있다는 것을 알게되었다.</li>
  <li>효율적인 알고리즘 패턴을 우선적으로 찾지 않고 코딩부터 시작하였는데, 더 효율적인 패턴을 찾게되면 로직을 변경해야 하는 경우가 생겨 불필요한 시간을 소모하였다.</li>
</ul>]]></content><author><name>lango</name></author><category term="Java" /><category term="Blog" /><category term="algorithm" /><category term="study" /><category term="java" /><category term="baekjoon" /><summary type="html"><![CDATA[셀프 넘버]]></summary></entry><entry><title type="html">[알고리즘 스터디 - Java] 백준 8958번</title><link href="http://localhost:4000/java/16-post/" rel="alternate" type="text/html" title="[알고리즘 스터디 - Java] 백준 8958번" /><published>2022-08-03T00:00:00+09:00</published><updated>2022-08-03T00:00:00+09:00</updated><id>http://localhost:4000/java/16-post</id><content type="html" xml:base="http://localhost:4000/java/16-post/"><![CDATA[<p><br /></p>

<center><img src="/assets/images/baekjoon/8958.png" /></center>

<blockquote>
  <p>Input-1) <br />
5 <br />
OOXXOXXOOO <br />
OOXXOOXXOO <br />
OXOXOXOXOXOXOX <br />
OOOOOOOOOO <br />
OOOOXOOOOXOOOOX <br /></p>
</blockquote>

<blockquote>
  <p>Output-1) <br />
10 <br />
9 <br />
7 <br />
55 <br />
30 <br /></p>
</blockquote>

<h3 id="접근-방식">접근 방식</h3>
<p>OX 퀴즈 결과 문자열을 순회하며 아래의 조건을 통해 점수를 계산하였다.</p>
<ul>
  <li>1) O인 경우 점수를 1 증가시킨다.</li>
  <li>2) X인 경우 점수를 증가시키지 않는다.</li>
  <li>3) 점수가 계산될 떄마다 해당 점수를 합한다.</li>
</ul>

<p>하나의 OX퀴즈 문자열 점수 계산이 끝나고 합을 구했다면 4) 별도의 합 점수 배열에 담는다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
</pre></td><td class="rouge-code"><pre><span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
    <span class="n">ox_arr</span> <span class="o">=</span> <span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">().</span><span class="na">split</span><span class="o">(</span><span class="s">""</span><span class="o">);</span> <span class="c1">// 입력받을 OX퀴즈 문자열</span>
    <span class="n">sum</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="c1">// 문자열 점수들의 합</span>
    <span class="n">score</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="c1">// 해당 문자열의 점수</span>
    <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">j</span><span class="o">&lt;</span><span class="n">ox_arr</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
        <span class="k">if</span><span class="o">(</span><span class="n">ox_arr</span><span class="o">[</span><span class="n">j</span><span class="o">].</span><span class="na">equals</span><span class="o">(</span><span class="s">"O"</span><span class="o">))</span> <span class="o">{</span> <span class="c1">// 1번</span>
            <span class="n">score</span> <span class="o">+=</span> <span class="mi">1</span><span class="o">;</span> 
            <span class="n">sum</span> <span class="o">+=</span> <span class="n">score</span><span class="o">;</span> <span class="c1">// 3번</span>
        <span class="o">}</span>
        <span class="k">else</span> <span class="o">{</span> <span class="c1">// 2번</span>
            <span class="n">score</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
            <span class="n">sum</span> <span class="o">+=</span> <span class="n">score</span><span class="o">;</span> <span class="c1">// 3번</span>
        <span class="o">}</span>
    <span class="o">}</span>
    <span class="n">ox_scores</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="n">sum</span><span class="o">;</span> <span class="c1">// 4번</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><br /></p>

<h3 id="작성코드">작성코드</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">java.io.BufferedReader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.BufferedWriter</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.InputStreamReader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.OutputStreamWriter</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">IOException</span> <span class="o">{</span>
        
        <span class="nc">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>
        <span class="nc">BufferedWriter</span> <span class="n">bw</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedWriter</span><span class="o">(</span><span class="k">new</span> <span class="nc">OutputStreamWriter</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">));</span>

        <span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
        <span class="kt">int</span> <span class="n">sum</span><span class="o">,</span> <span class="n">score</span><span class="o">;</span>
        <span class="nc">String</span><span class="o">[]</span> <span class="n">ox_arr</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">String</span><span class="o">[</span><span class="n">n</span><span class="o">];</span>
        <span class="kt">int</span><span class="o">[]</span> <span class="n">ox_scores</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">n</span><span class="o">];</span>

        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="n">ox_arr</span> <span class="o">=</span> <span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">().</span><span class="na">split</span><span class="o">(</span><span class="s">""</span><span class="o">);</span>
            <span class="n">sum</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
            <span class="n">score</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
            <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">j</span><span class="o">&lt;</span><span class="n">ox_arr</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
                <span class="k">if</span><span class="o">(</span><span class="n">ox_arr</span><span class="o">[</span><span class="n">j</span><span class="o">].</span><span class="na">equals</span><span class="o">(</span><span class="s">"O"</span><span class="o">))</span> <span class="o">{</span>
                    <span class="n">score</span> <span class="o">+=</span> <span class="mi">1</span><span class="o">;</span>
                    <span class="n">sum</span> <span class="o">+=</span> <span class="n">score</span><span class="o">;</span>
                <span class="o">}</span>
                <span class="k">else</span> <span class="o">{</span>
                    <span class="n">score</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
                    <span class="n">sum</span> <span class="o">+=</span> <span class="n">score</span><span class="o">;</span>
                <span class="o">}</span>
            <span class="o">}</span>
            <span class="n">ox_scores</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="n">sum</span><span class="o">;</span>
        <span class="o">}</span>

        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">ox_score</span> <span class="o">:</span> <span class="n">ox_scores</span><span class="o">)</span> <span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">ox_score</span> <span class="o">+</span> <span class="s">"\n"</span><span class="o">);</span>
        
        <span class="n">bw</span><span class="o">.</span><span class="na">flush</span><span class="o">();</span>
        <span class="n">bw</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
        <span class="n">br</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>]]></content><author><name>lango</name></author><category term="Java" /><category term="Blog" /><category term="algorithm" /><category term="study" /><category term="java" /><category term="baekjoon" /><summary type="html"><![CDATA[OX 퀴즈]]></summary></entry><entry><title type="html">[알고리즘 스터디 - Java] 백준 2577번</title><link href="http://localhost:4000/java/15-post/" rel="alternate" type="text/html" title="[알고리즘 스터디 - Java] 백준 2577번" /><published>2022-08-02T00:00:00+09:00</published><updated>2022-08-02T00:00:00+09:00</updated><id>http://localhost:4000/java/15-post</id><content type="html" xml:base="http://localhost:4000/java/15-post/"><![CDATA[<p><br /></p>

<center><img src="/assets/images/baekjoon/2577.png" /></center>

<blockquote>
  <p>Input-1) <br />
150 <br />
266 <br />
427 <br /></p>
</blockquote>

<blockquote>
  <p>Output-1) <br />
3 <br />
1 <br />
0 <br />
2 <br />
0 <br />
0 <br />
0 <br />
2 <br />
0 <br />
0 <br /></p>
</blockquote>

<h3 id="접근-방식">접근 방식</h3>
<p>a, b, c를 곱한 값을 arr(배열)로 가지고 있다고 하면, 
0부터 9까지의 인덱스가 arr의 값과 <strong>중복</strong>되는지를 검증하여 세면 될 것이라 생각했다.</p>

<p>먼저 a, b, c를 곱하여 arr이라는 배열로 파싱한다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="c1">// 세 수를 곱한 값을 배열로 파싱</span>
<span class="nc">String</span><span class="o">[]</span> <span class="n">arr</span> <span class="o">=</span> <span class="nc">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">a</span><span class="o">*</span><span class="n">b</span><span class="o">*</span><span class="n">c</span><span class="o">).</span><span class="na">split</span><span class="o">(</span><span class="s">""</span><span class="o">);</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>그리고 반복문을 통해 0~9까지 돌며 arr 배열의 값과 같은지를 검증한다.
같다면 cnt(개수)를 증가시킨다.
바깥 반복문 사이클이 한바퀴씩 돌때마다 <strong>cnt를 0으로 초기화</strong>하여 인덱스별 개수를 세도록 하였다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre><span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;=</span><span class="mi">9</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span> 
    <span class="n">cnt</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="c1">// i가 한바퀴 돌때마다 cnt 초기화</span>
    <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">j</span><span class="o">&lt;</span><span class="n">arr</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span> <span class="c1">// arr를 돌며 같으면 cnt 증가</span>
        <span class="k">if</span><span class="o">(</span><span class="n">i</span> <span class="o">==</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">arr</span><span class="o">[</span><span class="n">j</span><span class="o">]))</span> <span class="n">cnt</span> <span class="o">+=</span> <span class="mi">1</span><span class="o">;</span>
    <span class="o">}</span>
    <span class="n">counter</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">toString</span><span class="o">(</span><span class="n">i</span><span class="o">),</span> <span class="n">cnt</span><span class="o">);</span> <span class="c1">// 현재 i까지 저장된 cnt를 counter 맵에 저장</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><br /></p>

<h3 id="작성코드">작성코드</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">java.io.BufferedReader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.BufferedWriter</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.InputStreamReader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.OutputStreamWriter</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.HashMap</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">IOException</span> <span class="o">{</span>
        <span class="nc">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>
        <span class="nc">BufferedWriter</span> <span class="n">bw</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedWriter</span><span class="o">(</span><span class="k">new</span> <span class="nc">OutputStreamWriter</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">));</span>

        <span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
        <span class="kt">int</span> <span class="n">b</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
        <span class="kt">int</span> <span class="n">c</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
        <span class="kt">int</span> <span class="n">cnt</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        
        <span class="nc">String</span><span class="o">[]</span> <span class="n">arr</span> <span class="o">=</span> <span class="nc">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">a</span><span class="o">*</span><span class="n">b</span><span class="o">*</span><span class="n">c</span><span class="o">).</span><span class="na">split</span><span class="o">(</span><span class="s">""</span><span class="o">);</span>
        <span class="nc">HashMap</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">counter</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HashMap</span><span class="o">&lt;&gt;();</span>

        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;=</span><span class="mi">9</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="n">cnt</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
            <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">j</span><span class="o">&lt;</span><span class="n">arr</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
                <span class="k">if</span><span class="o">(</span><span class="n">i</span> <span class="o">==</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">arr</span><span class="o">[</span><span class="n">j</span><span class="o">]))</span> <span class="n">cnt</span> <span class="o">+=</span> <span class="mi">1</span><span class="o">;</span>
            <span class="o">}</span>
            <span class="n">counter</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">toString</span><span class="o">(</span><span class="n">i</span><span class="o">),</span> <span class="n">cnt</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">res</span> <span class="o">:</span> <span class="n">counter</span><span class="o">.</span><span class="na">values</span><span class="o">())</span> <span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">res</span> <span class="o">+</span> <span class="s">"\n"</span><span class="o">);</span>

        <span class="n">bw</span><span class="o">.</span><span class="na">flush</span><span class="o">();</span>
        <span class="n">bw</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
        <span class="n">br</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>]]></content><author><name>lango</name></author><category term="Java" /><category term="Blog" /><category term="algorithm" /><category term="study" /><category term="java" /><category term="baekjoon" /><summary type="html"><![CDATA[숫자의 개수]]></summary></entry><entry><title type="html">[알고리즘 스터디 - Java] 백준 1110번</title><link href="http://localhost:4000/java/14-post/" rel="alternate" type="text/html" title="[알고리즘 스터디 - Java] 백준 1110번" /><published>2022-08-02T00:00:00+09:00</published><updated>2022-08-02T00:00:00+09:00</updated><id>http://localhost:4000/java/14-post</id><content type="html" xml:base="http://localhost:4000/java/14-post/"><![CDATA[<p><br /></p>

<center><img src="/assets/images/baekjoon/1110.png" /></center>

<blockquote>
  <p>Input-1) <br />
26 <br /></p>
</blockquote>

<blockquote>
  <p>Output-1) <br />
4 <br /></p>
</blockquote>

<blockquote>
  <p>Input-2) <br />
55 <br /></p>
</blockquote>

<blockquote>
  <p>Output-2) <br />
3 <br /></p>
</blockquote>

<h3 id="접근-방식">접근 방식</h3>
<p>주어진 수를 N, 새로운 수를 T라고 가정하자.<br />
<strong>N의 일의 자리가 T의 십의 자리수가 되고, N을 합한 수의 일의 자리가 T의 일의 자리수가 된다.</strong></p>
<ul>
  <li>N[0] + N[1] = T[ N[1] + (N[0]+N[1])[1] ]</li>
</ul>

<p>N과 T의 자리수를 파악할 수 있게 2칸 크기의 문자열 배열을 통해 위 패턴을 구현하였다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="rouge-code"><pre><span class="nc">String</span> <span class="n">n</span> <span class="o">=</span> <span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">();</span> <span class="c1">// 입력값</span>
<span class="kt">int</span> <span class="n">first</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">n</span><span class="o">);</span> <span class="c1">// 최초 입력 숫자 저장</span>
<span class="nc">String</span> <span class="no">N</span><span class="o">[]</span> <span class="o">=</span> <span class="n">n</span><span class="o">.</span><span class="na">split</span><span class="o">(</span><span class="s">""</span><span class="o">);</span> <span class="c1">// 입력 숫자 배열</span>
<span class="nc">String</span> <span class="no">T</span><span class="o">[]</span> <span class="o">=</span> <span class="n">n</span><span class="o">.</span><span class="na">split</span><span class="o">(</span><span class="s">""</span><span class="o">);</span> <span class="c1">// 입력 숫자 합 배열</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>또한 T를 만들려면 N의 합이 필요하기에 N의 합을 구한 뒤 
sum(N의 합)이 10 보다 큰지 작은지 여부를 검증한 후 T의 자리수를 세팅하였다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
</pre></td><td class="rouge-code"><pre><span class="n">sum</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="no">N</span><span class="o">[</span><span class="mi">0</span><span class="o">])</span> <span class="o">+</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="no">N</span><span class="o">[</span><span class="mi">1</span><span class="o">]);</span>
<span class="k">if</span><span class="o">(</span><span class="n">sum</span> <span class="o">&gt;=</span> <span class="mi">10</span><span class="o">)</span> <span class="o">{</span>
    <span class="no">T</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">=</span> <span class="no">N</span><span class="o">[</span><span class="mi">1</span><span class="o">];</span>
    <span class="no">T</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="o">=</span> <span class="nc">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">sum</span><span class="o">).</span><span class="na">split</span><span class="o">(</span><span class="s">""</span><span class="o">)[</span><span class="mi">1</span><span class="o">];</span>
<span class="o">}</span><span class="k">else</span> <span class="o">{</span>
    <span class="no">T</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">=</span> <span class="no">N</span><span class="o">[</span><span class="mi">1</span><span class="o">];</span>
    <span class="no">T</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="o">=</span> <span class="nc">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">sum</span><span class="o">);</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>주어진 N의 값이 계속해서 새로운 T값으로 대체해줘야 하기에 
T가 구해지면 N값으로 대체하도록 하였다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="no">N</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">=</span> <span class="no">T</span><span class="o">[</span><span class="mi">0</span><span class="o">];</span>
<span class="no">N</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="o">=</span> <span class="no">T</span><span class="o">[</span><span class="mi">1</span><span class="o">];</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>결국 N의 정수값이 최초 입력받은 first값과 동일할 경우 반복문에서 탈출하도록 구현하였다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="k">if</span><span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="no">N</span><span class="o">[</span><span class="mi">0</span><span class="o">])*</span><span class="mi">10</span> <span class="o">+</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="no">N</span><span class="o">[</span><span class="mi">1</span><span class="o">])</span> <span class="o">==</span> <span class="n">first</span><span class="o">)</span> <span class="k">break</span><span class="o">;</span>    
</pre></td></tr></tbody></table></code></pre></div></div>

<p><br /></p>

<h3 id="문제-해결">문제 해결</h3>
<ol>
  <li>N의 초기값이 10 이하인 수라면 반복문에서 예외가 발생한다.<br />
<strong>N이 10 이하일 경우 앞에 “0”을 붙이도록 수정하였다.</strong></li>
</ol>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="k">if</span><span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">n</span><span class="o">)</span> <span class="o">&lt;</span> <span class="mi">10</span><span class="o">)</span> <span class="n">n</span> <span class="o">=</span> <span class="s">"0"</span> <span class="o">+</span> <span class="n">n</span><span class="o">;</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><br /></p>

<h3 id="작성코드">작성코드</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">java.io.BufferedReader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.BufferedWriter</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.InputStreamReader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.OutputStreamWriter</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">IOException</span> <span class="o">{</span>
        <span class="nc">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>
        <span class="nc">BufferedWriter</span> <span class="n">bw</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedWriter</span><span class="o">(</span><span class="k">new</span> <span class="nc">OutputStreamWriter</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">));</span>
        <span class="nc">String</span> <span class="n">n</span> <span class="o">=</span> <span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">();</span>
        <span class="kt">int</span> <span class="n">sum</span><span class="o">,</span> <span class="n">cnt</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">first</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">n</span><span class="o">);</span> <span class="c1">// 최초 입력 숫자 저장</span>
        <span class="k">if</span><span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">n</span><span class="o">)</span> <span class="o">&lt;</span> <span class="mi">10</span><span class="o">)</span> <span class="n">n</span> <span class="o">=</span> <span class="s">"0"</span> <span class="o">+</span> <span class="n">n</span><span class="o">;</span>
        <span class="nc">String</span> <span class="no">N</span><span class="o">[]</span> <span class="o">=</span> <span class="n">n</span><span class="o">.</span><span class="na">split</span><span class="o">(</span><span class="s">""</span><span class="o">);</span> <span class="c1">// 입력 숫자 배열</span>
        <span class="nc">String</span> <span class="no">T</span><span class="o">[]</span> <span class="o">=</span> <span class="n">n</span><span class="o">.</span><span class="na">split</span><span class="o">(</span><span class="s">""</span><span class="o">);</span> <span class="c1">// 입력 숫자 합 배열</span>
        <span class="k">while</span> <span class="o">(</span><span class="kc">true</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">n</span><span class="o">)</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">cnt</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
                <span class="k">break</span><span class="o">;</span>
            <span class="o">}</span>
            <span class="n">sum</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="no">N</span><span class="o">[</span><span class="mi">0</span><span class="o">])</span> <span class="o">+</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="no">N</span><span class="o">[</span><span class="mi">1</span><span class="o">]);</span>
            <span class="k">if</span><span class="o">(</span><span class="n">sum</span> <span class="o">&gt;=</span> <span class="mi">10</span><span class="o">)</span> <span class="o">{</span>
                <span class="no">T</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">=</span> <span class="no">N</span><span class="o">[</span><span class="mi">1</span><span class="o">];</span>
                <span class="no">T</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="o">=</span> <span class="nc">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">sum</span><span class="o">).</span><span class="na">split</span><span class="o">(</span><span class="s">""</span><span class="o">)[</span><span class="mi">1</span><span class="o">];</span>
            <span class="o">}</span><span class="k">else</span> <span class="o">{</span>
                <span class="no">T</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">=</span> <span class="no">N</span><span class="o">[</span><span class="mi">1</span><span class="o">];</span>
                <span class="no">T</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="o">=</span> <span class="nc">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">sum</span><span class="o">);</span>
            <span class="o">}</span>
            <span class="no">N</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">=</span> <span class="no">T</span><span class="o">[</span><span class="mi">0</span><span class="o">];</span>
            <span class="no">N</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="o">=</span> <span class="no">T</span><span class="o">[</span><span class="mi">1</span><span class="o">];</span>
            <span class="n">cnt</span> <span class="o">+=</span> <span class="mi">1</span><span class="o">;</span>
            <span class="k">if</span><span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="no">N</span><span class="o">[</span><span class="mi">0</span><span class="o">])*</span><span class="mi">10</span> <span class="o">+</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="no">N</span><span class="o">[</span><span class="mi">1</span><span class="o">])</span> <span class="o">==</span> <span class="n">first</span><span class="o">)</span> <span class="k">break</span><span class="o">;</span>    
        <span class="o">}</span>
        <span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">cnt</span> <span class="o">+</span> <span class="s">"\n"</span><span class="o">);</span>
        <span class="n">bw</span><span class="o">.</span><span class="na">flush</span><span class="o">();</span>
        <span class="n">bw</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
        <span class="n">br</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><br /></p>

<h2 id="회고">회고</h2>
<ul>
  <li>1110번 문제의 알고리즘 패턴의 경우 생각보다는 단순해보였는데, 실제로 해당 로직을 구현하고 보니, 더 좋은 패턴으로 풀 수 있었을 것 같다.</li>
  <li>십의 자리수와 일의 자리수 조합을 아름답게 사용하면 코드길이를 대폭 줄일 수 있을 것 같다.</li>
</ul>]]></content><author><name>lango</name></author><category term="Java" /><category term="Blog" /><category term="algorithm" /><category term="study" /><category term="java" /><category term="baekjoon" /><summary type="html"><![CDATA[더하기 사이클]]></summary></entry></feed>