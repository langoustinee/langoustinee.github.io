<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2022-09-08T18:12:18+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">lango’s DevLog</title><subtitle>developer</subtitle><author><name>lango</name></author><entry><title type="html">[Java] 프로그래머스(level-2) - 최댓값과 최솟값</title><link href="http://localhost:4000/java/54-post/" rel="alternate" type="text/html" title="[Java] 프로그래머스(level-2) - 최댓값과 최솟값" /><published>2022-09-08T00:00:00+09:00</published><updated>2022-09-08T00:00:00+09:00</updated><id>http://localhost:4000/java/54-post</id><content type="html" xml:base="http://localhost:4000/java/54-post/"><![CDATA[<p><br /></p>

<center><img src="/assets/images/programmers/20220908_03.png" width="700" /></center>
<p><br /></p>

<p><strong>입출력 예시</strong></p>
<blockquote>
  <p>Input-1 <br />
<strong>“1 2 3 4”</strong> <br />
Output-1 <br />
<strong>“1 4”</strong></p>
</blockquote>

<blockquote>
  <p>Input-2 <br />
<strong>“-1 -2 -3 -4”</strong> <br />
Output-2 <br />
<strong>“-4 -1”</strong></p>
</blockquote>

<blockquote>
  <p>Input-3 <br />
<strong>“-1 -1”</strong> <br />
Output-3 <br />
<strong>“-1 -1”</strong></p>
</blockquote>

<p><br /></p>

<h3 id="문제-풀이">문제 풀이</h3>
<p>주어진 문자열의 숫자 중에서 최솟값과 최댓값을 찾아야 한다. <br />
문자열을 순회하며 현재 수와 비교하여 가장 크고, 가장 작은 값을 구하면 된다. <br /></p>

<p>한 번 코드로 작성해보자.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre><span class="nc">String</span><span class="o">[]</span> <span class="n">arr</span> <span class="o">=</span> <span class="n">s</span><span class="o">.</span><span class="na">split</span><span class="o">(</span><span class="s">" "</span><span class="o">);</span>
<span class="kt">int</span> <span class="n">max</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">arr</span><span class="o">[</span><span class="mi">0</span><span class="o">]);</span>
<span class="kt">int</span> <span class="n">min</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">arr</span><span class="o">[</span><span class="mi">0</span><span class="o">]);</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>먼저 공백이 포함된 문자열에서 공백을 기준으로 잘라 배열로 만들었고, 최댓값과 최솟값을 저장할 max와 min 변수를 초기화하였다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="rouge-code"><pre><span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">arr</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
    <span class="k">if</span><span class="o">(</span><span class="n">max</span> <span class="o">&lt;</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">arr</span><span class="o">[</span><span class="n">i</span><span class="o">]))</span> <span class="n">max</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">arr</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
    <span class="k">if</span><span class="o">(</span><span class="n">min</span> <span class="o">&gt;</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">arr</span><span class="o">[</span><span class="n">i</span><span class="o">]))</span> <span class="n">min</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">arr</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
<span class="o">}</span>
<span class="k">return</span> <span class="n">min</span> <span class="o">+</span> <span class="s">" "</span> <span class="o">+</span> <span class="n">max</span><span class="o">;</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>위에서 자른 배열의 숫자들을 순회하며 최댓값과 최솟값을 구하고 <strong>문제 요구사항대로 “(최소값) (최대값)” 형태</strong>로 반환하자.</p>

<p><br /></p>

<h3 id="작성-코드">작성 코드</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">Scanner</span> <span class="n">sc</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Scanner</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
        <span class="nc">String</span> <span class="n">s</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextLine</span><span class="o">();</span>

        <span class="kt">long</span> <span class="n">start</span> <span class="o">=</span> <span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        <span class="n">solution</span><span class="o">(</span><span class="n">s</span><span class="o">);</span>
        <span class="kt">long</span> <span class="n">end</span> <span class="o">=</span> <span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"\n수행시간 = "</span> <span class="o">+</span> <span class="o">(</span><span class="n">end</span><span class="o">-</span><span class="n">start</span><span class="o">));</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="nc">String</span> <span class="nf">solution</span><span class="o">(</span><span class="nc">String</span> <span class="n">s</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">String</span><span class="o">[]</span> <span class="n">arr</span> <span class="o">=</span> <span class="n">s</span><span class="o">.</span><span class="na">split</span><span class="o">(</span><span class="s">" "</span><span class="o">);</span>
        <span class="kt">int</span> <span class="n">max</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">arr</span><span class="o">[</span><span class="mi">0</span><span class="o">]);</span>
        <span class="kt">int</span> <span class="n">min</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">arr</span><span class="o">[</span><span class="mi">0</span><span class="o">]);</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">arr</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="n">max</span> <span class="o">&lt;</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">arr</span><span class="o">[</span><span class="n">i</span><span class="o">]))</span> <span class="n">max</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">arr</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
            <span class="k">if</span><span class="o">(</span><span class="n">min</span> <span class="o">&gt;</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">arr</span><span class="o">[</span><span class="n">i</span><span class="o">]))</span> <span class="n">min</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">arr</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">min</span> <span class="o">+</span> <span class="s">" "</span> <span class="o">+</span> <span class="n">max</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="회고">회고</h3>
<ul>
  <li>이제는 어떻게 최대값과 최소값을 구해야 할지 어느정도 감이 잡힌 것 같다.</li>
</ul>]]></content><author><name>lango</name></author><category term="Java" /><category term="blog" /><category term="algorithm" /><category term="study" /><category term="java" /><category term="programmers" /><summary type="html"><![CDATA[level 2 - 최댓값과 최솟값]]></summary></entry><entry><title type="html">[Java] 프로그래머스(level-1) - 같은 숫자는 싫어</title><link href="http://localhost:4000/java/52-post/" rel="alternate" type="text/html" title="[Java] 프로그래머스(level-1) - 같은 숫자는 싫어" /><published>2022-09-08T00:00:00+09:00</published><updated>2022-09-08T00:00:00+09:00</updated><id>http://localhost:4000/java/52-post</id><content type="html" xml:base="http://localhost:4000/java/52-post/"><![CDATA[<p><br /></p>

<center><img src="/assets/images/programmers/20220908_01.png" width="700" /></center>
<p><br /></p>

<p><strong>입출력 예시</strong></p>
<blockquote>
  <p>Input-1 <br />
<strong>[1,1,3,3,0,1,1]</strong> <br />
Output-1 <br />
<strong>[1,3,0,1]</strong></p>
</blockquote>

<blockquote>
  <p>Input-2 <br />
<strong>[4,4,4,3,3]</strong> <br />
Output-2 <br />
<strong>[4,3]</strong></p>
</blockquote>

<p><br /></p>

<h3 id="문제-풀이">문제 풀이</h3>
<p>이 문제는 큐의 <strong>FIFO</strong> 특성을 활용해 풀어보았다. <br />
주어진 배열의 원소를 순회하며 현재 수와 이전 수가 다를 경우에만 큐에 넣어둔다면 연속으로 나타난 수, 즉 <strong>중복을 제거</strong>할 수 있다.</p>

<p>한 번 코드로 작성해보자.</p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="nc">Queue</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">qu</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">LinkedList</span><span class="o">&lt;&gt;();</span> <span class="c1">// 중복 제거된 수 삽입</span>
<span class="kt">int</span> <span class="n">prev</span> <span class="o">=</span> <span class="n">arr</span><span class="o">[</span><span class="mi">0</span><span class="o">];</span> <span class="c1">// 이전 수 저장</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>prev변수를 배열의 첫번째 수로 초기화하고, 함께 사용할 큐를 초기화하였다.</p>

<p><br /></p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="rouge-code"><pre><span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">arr</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
    <span class="k">if</span><span class="o">(</span><span class="n">prev</span> <span class="o">!=</span> <span class="n">arr</span><span class="o">[</span><span class="n">i</span><span class="o">])</span> <span class="o">{</span>
        <span class="n">qu</span><span class="o">.</span><span class="na">offer</span><span class="o">(</span><span class="n">prev</span><span class="o">);</span>
        <span class="n">prev</span> <span class="o">=</span> <span class="n">arr</span><span class="o">[</span><span class="n">i</span><span class="o">];</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>주어진 배열의 1번째 인덱스부터 마지막 인덱스까지 순회하며 이전 수를 저장한 prev와 현재 수인 arr[i]를 비교한다. <br />
이전 수와 현재 수가 같지않다면 <strong>이전 수(prev)를 큐에 넣고, 이전 수를 현재 수로(prev를 arr[i]로) 최신화</strong> 한다.</p>

<p><br /></p>

<h4 id="마지막-수-저장-불가">마지막 수 저장 불가</h4>
<p>반복문이 종료되면 배열의 마지막으로 나타난 수는 연속되든 연속되지 않든 큐에 들어가지 않는다. <br />
반복문에선 <strong>이전수와 현재수가 다를 때의 조건만 존재하기에 마지막 수의 경우 조건을 타지 않는다.</strong> <br />
그렇기에 마지막 수만 별도로 큐에 저장한다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="n">qu</span><span class="o">.</span><span class="na">offer</span><span class="o">(</span><span class="n">arr</span><span class="o">[</span><span class="n">arr</span><span class="o">.</span><span class="na">length</span><span class="o">-</span><span class="mi">1</span><span class="o">]);</span> <span class="c1">// 맨 마지막 수 저장</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p><br /></p>

<p>이렇게 연속된 수들을 중복없이 큐에 쌓았으니 쌓은 순서대로 반환할 배열에 담으면 된다. <br />
큐의 FIFO 특성으로 인해 poll()로 꺼내면 주어진 배열의 순서대로 담을 수 있다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="rouge-code"><pre><span class="kt">int</span><span class="o">[]</span> <span class="n">answer</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">qu</span><span class="o">.</span><span class="na">size</span><span class="o">()];</span> <span class="c1">// 반환할 배열</span>
<span class="kt">int</span> <span class="n">idx</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="c1">// 큐를 탐색할 인덱스</span>
<span class="k">while</span><span class="o">(!</span><span class="n">qu</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">())</span> <span class="o">{</span>
    <span class="n">answer</span><span class="o">[</span><span class="n">idx</span><span class="o">]</span> <span class="o">=</span> <span class="n">qu</span><span class="o">.</span><span class="na">poll</span><span class="o">();</span>
    <span class="n">idx</span><span class="o">++;</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><br /></p>

<h3 id="작성-코드">작성 코드</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span><span class="o">[]</span> <span class="n">arr</span> <span class="o">=</span> <span class="o">{</span><span class="mi">1</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="mi">3</span><span class="o">,</span><span class="mi">3</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="mi">1</span><span class="o">};</span>
        <span class="c1">// int[] arr ={4,4,4,3,3};</span>
        <span class="c1">// int[] arr = {1,1,2,3,4,5,5,5,5};</span>
        
        <span class="kt">long</span> <span class="n">start</span> <span class="o">=</span> <span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        <span class="n">solution</span><span class="o">(</span><span class="n">arr</span><span class="o">);</span>
        <span class="kt">long</span> <span class="n">end</span> <span class="o">=</span> <span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"\n수행시간 = "</span> <span class="o">+</span> <span class="o">(</span><span class="n">end</span><span class="o">-</span><span class="n">start</span><span class="o">));</span>
    <span class="o">}</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span><span class="o">[]</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">arr</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">Queue</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">qu</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">LinkedList</span><span class="o">&lt;&gt;();</span>
        <span class="kt">int</span> <span class="n">prev</span> <span class="o">=</span> <span class="n">arr</span><span class="o">[</span><span class="mi">0</span><span class="o">];</span>
        
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">arr</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="n">prev</span> <span class="o">!=</span> <span class="n">arr</span><span class="o">[</span><span class="n">i</span><span class="o">])</span> <span class="o">{</span>
                <span class="n">qu</span><span class="o">.</span><span class="na">offer</span><span class="o">(</span><span class="n">prev</span><span class="o">);</span>
                <span class="n">prev</span> <span class="o">=</span> <span class="n">arr</span><span class="o">[</span><span class="n">i</span><span class="o">];</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="n">qu</span><span class="o">.</span><span class="na">offer</span><span class="o">(</span><span class="n">arr</span><span class="o">[</span><span class="n">arr</span><span class="o">.</span><span class="na">length</span><span class="o">-</span><span class="mi">1</span><span class="o">]);</span>
        
        <span class="kt">int</span><span class="o">[]</span> <span class="n">answer</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">qu</span><span class="o">.</span><span class="na">size</span><span class="o">()];</span>
        <span class="kt">int</span> <span class="n">idx</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="k">while</span><span class="o">(!</span><span class="n">qu</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">())</span> <span class="o">{</span>
            <span class="n">answer</span><span class="o">[</span><span class="n">idx</span><span class="o">]</span> <span class="o">=</span> <span class="n">qu</span><span class="o">.</span><span class="na">poll</span><span class="o">();</span>
            <span class="n">idx</span><span class="o">++;</span>
        <span class="o">}</span>

        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="회고">회고</h3>
<ul>
  <li>큐의 FIFO 특성을 이용하여 쌓은 순서대로 꺼내어 입력 순서를 보장할 수 있었다.</li>
</ul>]]></content><author><name>lango</name></author><category term="Java" /><category term="blog" /><category term="algorithm" /><category term="study" /><category term="java" /><category term="programmers" /><summary type="html"><![CDATA[level 1 - 같은 숫자는 싫어]]></summary></entry><entry><title type="html">[Java] 프로그래머스(level-1) - 최소직사각형</title><link href="http://localhost:4000/java/53-post/" rel="alternate" type="text/html" title="[Java] 프로그래머스(level-1) - 최소직사각형" /><published>2022-09-08T00:00:00+09:00</published><updated>2022-09-08T00:00:00+09:00</updated><id>http://localhost:4000/java/53-post</id><content type="html" xml:base="http://localhost:4000/java/53-post/"><![CDATA[<p><br /></p>

<center><img src="/assets/images/programmers/20220908_02.png" width="700" /></center>
<p><br /></p>

<p><strong>입출력 예시</strong></p>
<blockquote>
  <p>Input-1 <br />
<strong>[[60, 50], [30, 70], [60, 30], [80, 40]]</strong> <br />
Output-1 <br />
<strong>4000</strong></p>
</blockquote>

<blockquote>
  <p>Input-2 <br />
<strong>[[10, 7], [12, 3], [8, 15], [14, 7], [5, 15]]</strong> <br />
Output-2 <br />
<strong>120</strong></p>
</blockquote>

<blockquote>
  <p>Input-3 <br />
<strong>[[14, 4], [19, 6], [6, 16], [18, 7], [7, 11]]</strong> <br />
Output-3 <br />
<strong>133</strong></p>
</blockquote>

<p><br /></p>

<h3 id="문제-풀이">문제 풀이</h3>
<p>주어진 2차원 배열에서 명함의 가로와 세로길이 [w, h]에서 <strong>w와 h의 크고 작은 값을 비교</strong>해야 한다. <br />
그리고 <strong>큰값과 작은값의 최대값</strong>을 찾아 곱하면 모든 명함의 길이를 수용할 수 있는 최소의 크기를 구할 수 있다.</p>

<p>내가 생각한 아이디어는 아래와 같다.</p>
<ul>
  <li>w의 합과 h의 합을 구한다.</li>
  <li>만약 w의 합이 h의 합보다 더 크다면, w가 h보다 작을 때 w와 h값을 치환한다.</li>
  <li>만약 h의 합이 w의 합보다 더 크다면, h가 w보다 작을 때 w와 h값을 치환한다.</li>
  <li>w와 h의 최대값을 구해 곱한다.</li>
</ul>

<p>한 번 코드로 작성해보자. <br />
먼저 w와 h의 합을 저장할 변수를 초기화한다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="kt">int</span> <span class="n">w_sum</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
<span class="kt">int</span> <span class="n">h_sum</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p><br /></p>

<p>그리고 sizes 2차원 배열을 순회하며 w와 h의 합을 구한다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="rouge-code"><pre><span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">sizes</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
    <span class="n">w_sum</span> <span class="o">+=</span> <span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">0</span><span class="o">];</span>
    <span class="n">h_sum</span> <span class="o">+=</span> <span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">1</span><span class="o">];</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><br /></p>

<p>w합과 h합을 구했으니, 둘의 크고 작음을 확인하여 w와 h를 치환한다. <br />
w합이 h홥보다 크면, w로 큰 값을 몰아줘야 하니, w값이 작을 때만 치환하면 된다. <br />
반대로, h합이 w합보다 크면, h로 큰 값을 몰아줘야 하기에 h값이 작을 때만 치환한다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
</pre></td><td class="rouge-code"><pre><span class="k">if</span><span class="o">(</span><span class="n">w_sum</span> <span class="o">&gt;</span> <span class="n">h_sum</span><span class="o">)</span> <span class="o">{</span> <span class="c1">// w합이 h보다 클 경우</span>
    <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">sizes</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">temp</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="k">if</span><span class="o">(</span><span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">0</span><span class="o">]</span> <span class="o">&lt;</span> <span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">1</span><span class="o">])</span> <span class="o">{</span> <span class="c1">// w&lt;h 일 때 치환</span>
            <span class="n">temp</span> <span class="o">=</span> <span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">0</span><span class="o">];</span>
            <span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">0</span><span class="o">]</span> <span class="o">=</span> <span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">1</span><span class="o">];</span>
            <span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">1</span><span class="o">]</span> <span class="o">=</span> <span class="n">temp</span><span class="o">;</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>
<span class="k">else</span> <span class="o">{</span> <span class="c1">// h합이 w합보다 클 경우</span>
    <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">sizes</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">temp</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="k">if</span><span class="o">(</span><span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">0</span><span class="o">]</span> <span class="o">&gt;</span> <span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">1</span><span class="o">])</span> <span class="o">{</span> <span class="c1">// h&lt;w 일 때 치환</span>
            <span class="n">temp</span> <span class="o">=</span> <span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">0</span><span class="o">];</span>
            <span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">0</span><span class="o">]</span> <span class="o">=</span> <span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">1</span><span class="o">];</span>
            <span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">1</span><span class="o">]</span> <span class="o">=</span> <span class="n">temp</span><span class="o">;</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p><br /></p>

<p>마지막으로 치환된 sizes 배열에서 w와 h의 최대값을 찾아 곰하여 반환하면 된다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre><span class="kt">int</span> <span class="n">w_max</span> <span class="o">=</span> <span class="n">sizes</span><span class="o">[</span><span class="mi">0</span><span class="o">][</span><span class="mi">0</span><span class="o">];</span> <span class="c1">// width 최대값</span>
<span class="kt">int</span> <span class="n">h_max</span> <span class="o">=</span> <span class="n">sizes</span><span class="o">[</span><span class="mi">0</span><span class="o">][</span><span class="mi">1</span><span class="o">];</span> <span class="c1">// height 최대값</span>
<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">sizes</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
    <span class="k">if</span><span class="o">(</span><span class="n">w_max</span> <span class="o">&lt;</span> <span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">0</span><span class="o">])</span> <span class="n">w_max</span> <span class="o">=</span> <span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">0</span><span class="o">];</span>
    <span class="k">if</span><span class="o">(</span><span class="n">h_max</span> <span class="o">&lt;</span> <span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">1</span><span class="o">])</span> <span class="n">h_max</span> <span class="o">=</span> <span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">1</span><span class="o">];</span>
<span class="o">}</span>
<span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="n">w_max</span> <span class="o">*</span> <span class="n">h_max</span><span class="o">;</span> <span class="c1">// 최소 명함의 크기</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>제출하니 정상적으로 모든 테스트케이스를 통과하였다.</p>

<h4 id="코드-수정">코드 수정</h4>
<p>그런데, 위에서 작성한 코드가 생각보다 가독성이 좋지 않다고 느꼈고, 간결하면서 가독성이 좋은 코드로 고쳐보려 한다. <br />
다시 생각해본 아이디어는 아래와 같다.</p>
<ul>
  <li>반복문을 돌며 w와 h의 크고 작은 값을 구한다.</li>
  <li>w와 h가 클 때의 최대값과 작을 때의 최대값을 함께 구한다.</li>
</ul>

<p>위와 같은 아이디어로 구상하면 하나의 반복문 내에서 간단한 로직으로 구현할 수 있게 된다. <br />
그러면 코드로 작성해보자.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
</pre></td><td class="rouge-code"><pre><span class="kt">int</span> <span class="n">big</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
<span class="kt">int</span> <span class="n">sml</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>

<span class="k">for</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">size</span> <span class="o">:</span> <span class="n">sizes</span><span class="o">)</span> <span class="o">{</span>
    <span class="k">if</span><span class="o">(</span><span class="n">size</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">&lt;</span> <span class="n">size</span><span class="o">[</span><span class="mi">1</span><span class="o">])</span> <span class="o">{</span>
        <span class="n">big</span> <span class="o">=</span> <span class="nc">Math</span><span class="o">.</span><span class="na">max</span><span class="o">(</span><span class="n">size</span><span class="o">[</span><span class="mi">1</span><span class="o">],</span> <span class="n">big</span><span class="o">);</span>
        <span class="n">sml</span> <span class="o">=</span> <span class="nc">Math</span><span class="o">.</span><span class="na">max</span><span class="o">(</span><span class="n">size</span><span class="o">[</span><span class="mi">0</span><span class="o">],</span> <span class="n">sml</span><span class="o">);</span>
    <span class="o">}</span>
    <span class="k">else</span> <span class="o">{</span>
        <span class="n">big</span> <span class="o">=</span> <span class="nc">Math</span><span class="o">.</span><span class="na">max</span><span class="o">(</span><span class="n">size</span><span class="o">[</span><span class="mi">0</span><span class="o">],</span> <span class="n">big</span><span class="o">);</span>
        <span class="n">sml</span> <span class="o">=</span> <span class="nc">Math</span><span class="o">.</span><span class="na">max</span><span class="o">(</span><span class="n">size</span><span class="o">[</span><span class="mi">1</span><span class="o">],</span> <span class="n">sml</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>

<span class="k">return</span> <span class="n">big</span> <span class="o">*</span> <span class="n">sml</span><span class="o">;</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>위 코드를 보면 앞에서 작성한 코드보다 훨씬 간결하고 가독성이 좋아졌음을 알 수 있다. <br />
반복문 내에서 <strong>w가 h보다 작다면, big에 h가 큰 값을, sml에 w가 작은 값을 저장</strong>해나간다. <br />
반대로, <strong>w가 h보다 크다면, big에 w가 큰 값을, sml에 h가 작은 값을 저장</strong>해나간다. <br />
그렇게 w와 h의 크고 작은 값들의 최대값을 추려낼 수 있다.</p>

<p>고친 코드도 제출해보니 모든 테스트케이스를 정상적으로 통과하였다.</p>

<p><br /></p>

<h3 id="작성-코드">작성 코드</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        
        <span class="c1">// int[][] sizes = {{10,7},{12,3},{8,15},{14,7},{5,15}};</span>
        <span class="c1">// int[][] sizes = {{14,4},{19,6},{6,16},{18,7},{7,11}};</span>
        <span class="kt">int</span><span class="o">[][]</span> <span class="n">sizes</span> <span class="o">=</span> <span class="o">{{</span><span class="mi">60</span><span class="o">,</span><span class="mi">50</span><span class="o">},{</span><span class="mi">30</span><span class="o">,</span><span class="mi">70</span><span class="o">},{</span><span class="mi">60</span><span class="o">,</span><span class="mi">30</span><span class="o">},{</span><span class="mi">80</span><span class="o">,</span><span class="mi">40</span><span class="o">}};</span>
        

        <span class="kt">long</span> <span class="n">start</span> <span class="o">=</span> <span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        <span class="n">solution2</span><span class="o">(</span><span class="n">sizes</span><span class="o">);</span>
        <span class="kt">long</span> <span class="n">end</span> <span class="o">=</span> <span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"\n수행시간 = "</span> <span class="o">+</span> <span class="o">(</span><span class="n">end</span><span class="o">-</span><span class="n">start</span><span class="o">));</span>
    <span class="o">}</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span><span class="o">[][]</span> <span class="n">sizes</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">w_sum</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">h_sum</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">sizes</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="n">w_sum</span> <span class="o">+=</span> <span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">0</span><span class="o">];</span>
            <span class="n">h_sum</span> <span class="o">+=</span> <span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">1</span><span class="o">];</span>
        <span class="o">}</span>

        <span class="k">if</span><span class="o">(</span><span class="n">w_sum</span> <span class="o">&gt;</span> <span class="n">h_sum</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">sizes</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
                <span class="kt">int</span> <span class="n">temp</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
                <span class="k">if</span><span class="o">(</span><span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">0</span><span class="o">]</span> <span class="o">&lt;</span> <span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">1</span><span class="o">])</span> <span class="o">{</span>
                    <span class="n">temp</span> <span class="o">=</span> <span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">0</span><span class="o">];</span>
                    <span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">0</span><span class="o">]</span> <span class="o">=</span> <span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">1</span><span class="o">];</span>
                    <span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">1</span><span class="o">]</span> <span class="o">=</span> <span class="n">temp</span><span class="o">;</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="k">else</span> <span class="o">{</span>
            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">sizes</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
                <span class="kt">int</span> <span class="n">temp</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
                <span class="k">if</span><span class="o">(</span><span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">0</span><span class="o">]</span> <span class="o">&gt;</span> <span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">1</span><span class="o">])</span> <span class="o">{</span>
                    <span class="n">temp</span> <span class="o">=</span> <span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">0</span><span class="o">];</span>
                    <span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">0</span><span class="o">]</span> <span class="o">=</span> <span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">1</span><span class="o">];</span>
                    <span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">1</span><span class="o">]</span> <span class="o">=</span> <span class="n">temp</span><span class="o">;</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>

        <span class="kt">int</span> <span class="n">w_max</span> <span class="o">=</span> <span class="n">sizes</span><span class="o">[</span><span class="mi">0</span><span class="o">][</span><span class="mi">0</span><span class="o">];</span>
        <span class="kt">int</span> <span class="n">h_max</span> <span class="o">=</span> <span class="n">sizes</span><span class="o">[</span><span class="mi">0</span><span class="o">][</span><span class="mi">1</span><span class="o">];</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">sizes</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="n">w_max</span> <span class="o">&lt;</span> <span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">0</span><span class="o">])</span> <span class="n">w_max</span> <span class="o">=</span> <span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">0</span><span class="o">];</span>
            <span class="k">if</span><span class="o">(</span><span class="n">h_max</span> <span class="o">&lt;</span> <span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">1</span><span class="o">])</span> <span class="n">h_max</span> <span class="o">=</span> <span class="n">sizes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">1</span><span class="o">];</span>
        <span class="o">}</span>
        <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="n">w_max</span> <span class="o">*</span> <span class="n">h_max</span><span class="o">;</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">solution2</span><span class="o">(</span><span class="kt">int</span><span class="o">[][]</span> <span class="n">sizes</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">big</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">sml</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>

        <span class="k">for</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">size</span> <span class="o">:</span> <span class="n">sizes</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="n">size</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">&lt;</span> <span class="n">size</span><span class="o">[</span><span class="mi">1</span><span class="o">])</span> <span class="o">{</span>
                <span class="n">big</span> <span class="o">=</span> <span class="nc">Math</span><span class="o">.</span><span class="na">max</span><span class="o">(</span><span class="n">size</span><span class="o">[</span><span class="mi">1</span><span class="o">],</span> <span class="n">big</span><span class="o">);</span>
                <span class="n">sml</span> <span class="o">=</span> <span class="nc">Math</span><span class="o">.</span><span class="na">max</span><span class="o">(</span><span class="n">size</span><span class="o">[</span><span class="mi">0</span><span class="o">],</span> <span class="n">sml</span><span class="o">);</span>
            <span class="o">}</span>
            <span class="k">else</span> <span class="o">{</span>
                <span class="n">big</span> <span class="o">=</span> <span class="nc">Math</span><span class="o">.</span><span class="na">max</span><span class="o">(</span><span class="n">size</span><span class="o">[</span><span class="mi">0</span><span class="o">],</span> <span class="n">big</span><span class="o">);</span>
                <span class="n">sml</span> <span class="o">=</span> <span class="nc">Math</span><span class="o">.</span><span class="na">max</span><span class="o">(</span><span class="n">size</span><span class="o">[</span><span class="mi">1</span><span class="o">],</span> <span class="n">sml</span><span class="o">);</span>
            <span class="o">}</span>
        <span class="o">}</span>

        <span class="k">return</span> <span class="n">big</span> <span class="o">*</span> <span class="n">sml</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="회고">회고</h3>
<ul>
  <li>알고리즘 문제 정답에 수렴하는 아이디어도 중요하지만, 아이디어를 구상하는 과정에서 더 나은 코드를 위해 고민하였고, 간결하고 가독성 좋은 코드를 작성할 수 있었다.</li>
</ul>]]></content><author><name>lango</name></author><category term="Java" /><category term="blog" /><category term="algorithm" /><category term="study" /><category term="java" /><category term="programmers" /><summary type="html"><![CDATA[level 1 - 최소직사각형]]></summary></entry><entry><title type="html">[Java] 프로그래머스(level-2) - 피보나치 수</title><link href="http://localhost:4000/java/51-post/" rel="alternate" type="text/html" title="[Java] 프로그래머스(level-2) - 피보나치 수" /><published>2022-09-07T00:00:00+09:00</published><updated>2022-09-07T00:00:00+09:00</updated><id>http://localhost:4000/java/51-post</id><content type="html" xml:base="http://localhost:4000/java/51-post/"><![CDATA[<p><br /></p>

<center><img src="/assets/images/programmers/20220907_01.png" width="700" /></center>
<p><br /></p>

<p><strong>입출력 예시</strong></p>
<blockquote>
  <p>Input-1 <br />
<strong>3</strong> <br />
Output-1 <br />
<strong>2</strong></p>
</blockquote>

<blockquote>
  <p>Input-2 <br />
<strong>5</strong> <br />
Output-2 <br />
<strong>5</strong></p>
</blockquote>

<p><br /></p>

<h3 id="문제-풀이">문제 풀이</h3>
<p>문제 풀이에 앞서 피보나치 수에 대해서 알아보자.</p>

<blockquote>
  <p><strong>피보나치(Fibonnaci)</strong>란? <br />
피보나치 수열은 0과 1로 시작하며, <strong>앞의 두 수를 더해서 다음 수를 만들어 나가는 수열</strong>이다. <br />
F(n) = F(n-1) + F(n-2) 라는 식으로 볼 수 있다. <br />
EX) 1,1,2,3,5,8,13,12 …</p>
</blockquote>

<p>피보나치 수열이 만들어지는 패턴을 알아보자. (0과 1로 시작할 경우)</p>
<ol>
  <li>F(0) = 0</li>
  <li>F(1) = 1</li>
  <li>F(2) = F(1)+F(0) = 0+1 = 1</li>
  <li>F(3) = F(2)+F(1) = 1+1 = 2</li>
  <li>F(4) = F(3)+F(2) = 2+1 = 3</li>
  <li>F(5) = F(4)+F(3) = 3+2 = 5 <br />
이하 생략 …</li>
</ol>

<p>위와 같은 방식으로 n번째의 피보나치 수를 찾아야 한다.</p>

<h4 id="재귀함수로-n번째-피보나치-수-찾기">재귀함수로 n번째 피보나치 수 찾기</h4>
<p>먼저 재귀함수를 활용해 n번째 피보나치 수를 찾아보자.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="rouge-code"><pre><span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span> <span class="n">n</span><span class="o">)</span> <span class="o">{</span>
    <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
    <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;=</span><span class="n">n</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
        <span class="n">answer</span> <span class="o">=</span> <span class="n">fibo</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
    <span class="o">}</span>
    <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
<span class="o">}</span>
<span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">fibo</span><span class="o">(</span><span class="kt">int</span> <span class="n">n</span><span class="o">)</span> <span class="o">{</span>
    <span class="k">if</span><span class="o">(</span><span class="n">n</span> <span class="o">&lt;=</span> <span class="mi">1</span><span class="o">)</span> <span class="k">return</span> <span class="n">n</span><span class="o">;</span>
    <span class="k">else</span> <span class="k">return</span> <span class="nf">fibo</span><span class="o">(</span><span class="n">n</span><span class="o">-</span><span class="mi">1</span><span class="o">)</span> <span class="o">+</span> <span class="n">fibo</span><span class="o">(</span><span class="n">n</span><span class="o">-</span><span class="mi">2</span><span class="o">);</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>위 코드를 보면 fino()라는 함수를 통해 0부터 n까지 순회하며 피보나치 수를 찾도록 하였다.</p>

<h4 id="재귀함수-테스트케이스-실행결과">재귀함수 테스트케이스 실행결과</h4>
<p><img src="/assets/images/programmers/20220907_01-1.png" width="300" /></p>

<p>그런데, 테스트케이스 7~14번까지 시간 초과가 발생하였다. <br />
살펴보니 <strong>n이 50 이상일 경우에 재귀 호출을 사용한다면 시간초과가 발생</strong>하는 것을 확인하였다.</p>

<h3 id="반복문으로-n번째-피보나치-수-찾기">반복문으로 n번째 피보나치 수 찾기</h3>
<p>그렇다면 <strong>재귀함수 대신 for문을 활용</strong>해 첫번째부터 n번째까지 순서대로 피보나치 수를 구해야 한다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="rouge-code"><pre><span class="kt">int</span> <span class="n">n1</span><span class="o">,</span> <span class="n">n2</span><span class="o">,</span> <span class="n">fibo</span><span class="o">;</span>
<span class="n">n1</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
<span class="n">n2</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
<span class="n">fibo</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>먼저 0과 1로 첫번째 피보나치 수 1을 만들어야 하기에 <strong>n1에 0을, n2에 1을, fibo에 1을 초기화</strong>한다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="rouge-code"><pre><span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
    <span class="n">fibo</span> <span class="o">=</span> <span class="o">(</span><span class="n">n1</span> <span class="o">+</span> <span class="n">n2</span><span class="o">)</span>
    <span class="n">n1</span> <span class="o">=</span> <span class="n">n2</span><span class="o">;</span>
    <span class="n">n2</span> <span class="o">=</span> <span class="n">fibo</span><span class="o">;</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>그리고 반복문을 돌면서 fibo에 n1과 n2를 더한 값을 저장하고, n1을 n2 값으로, n2를 fibo 값으로 재조정한다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="rouge-code"><pre>i=1, fibo = 0+1 = 1, n1=1, n2=1
i=2, fibo = 1+1 = 2, n1=1, n2=1
i=3, fibo = 1+1 = 2, n1=1, n2=2
i=4, fibo = 1+2 = 3, n1=2, n2=3 //fibo=n1+n2=5
</pre></td></tr></tbody></table></code></pre></div></div>
<p>n이 5일 때 i는 1부터 4까지 순회하므로 fibo값에 n1과 n2을 더해 5를 구할 수 있다. <br /></p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="n">fibo</span> <span class="o">%</span> <span class="mi">1234567</span><span class="o">;</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>그리고 문제 요구사항대로 구한 피보나치 수에 1234567로 나눈 나머지 값을 answer에 담아 반환하도록 하였다.</p>

<h4 id="반복문-테스트케이스-실행결과">반복문 테스트케이스 실행결과</h4>
<p><img src="/assets/images/programmers/20220907_01-2.png" width="300" /></p>

<p>반복문을 통해 시간초과 문제는 해결됐지만, 여전히 테스트케이스 7~14번이 실패하였다.</p>

<h4 id="오버플로우-발생">오버플로우 발생</h4>
<p>왜 실패하나 디버깅을 해보니, <strong>n이 47일 때부터 int형의 범위를 초과하여 오버플로우가 발생</strong>함을 확인하였다. <br />
애초에 구해진 n번째 피보나치 수에만 1234567 나머지 연산을 수행하는 것이 잘못된 행위였다. <br />
오버플로우를 해결하기 위해 <strong>반복문 내에서 N번째 피보나치 수를 구할 때마다 1234567 나머지연산을 수행하도록 변경하였다.</strong></p>

<h4 id="n번째-피보나치-수마다-나머지연산-수행">n번째 피보나치 수마다 나머지연산 수행</h4>
<p>나머지연산을 반복문 단계별로 수행하도록 변경하니 int형 범위를 초과하지 않고 정상적으로 피보나치 수를 구할 수 있었다.</p>

<p><img src="/assets/images/programmers/20220907_01-3.png" width="300" /></p>

<p>고친 코드로 테스트케이스를 채점해보니 모두 통과하였다.</p>

<p><br /></p>

<h3 id="작성-코드">작성 코드</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">Scanner</span> <span class="n">sc</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Scanner</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
        <span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>

        <span class="kt">long</span> <span class="n">start</span> <span class="o">=</span> <span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        <span class="n">solution</span><span class="o">(</span><span class="n">n</span><span class="o">);</span>
        <span class="kt">long</span> <span class="n">end</span> <span class="o">=</span> <span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"\n수행시간 = "</span> <span class="o">+</span> <span class="o">(</span><span class="n">end</span><span class="o">-</span><span class="n">start</span><span class="o">));</span>
    <span class="o">}</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span> <span class="n">n</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">n1</span><span class="o">,</span> <span class="n">n2</span><span class="o">,</span> <span class="n">fibo</span><span class="o">;</span>
        <span class="n">n1</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="n">n2</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
        <span class="n">fibo</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
        
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="n">fibo</span> <span class="o">=</span> <span class="o">(</span><span class="n">n1</span> <span class="o">+</span> <span class="n">n2</span><span class="o">)</span> <span class="o">%</span> <span class="mi">1234567</span><span class="o">;</span>
            <span class="n">n1</span> <span class="o">=</span> <span class="n">n2</span><span class="o">;</span>
            <span class="n">n2</span> <span class="o">=</span> <span class="n">fibo</span><span class="o">;</span>
        <span class="o">}</span>

        <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="n">fibo</span><span class="o">;</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="회고">회고</h3>
<ul>
  <li>재귀함수의 경우 주어진 n이 클 경우에는 오랜 시간이 소요되기에 유의하며 사용해야함을 느꼈다.</li>
  <li>문제에서 구한 피보나치 수를 1234567로 나눈 나머지를 요구하는 것이 의아했지만, 결국 매 수마다 나머지연산을 통해 int형 범위를 보장하기 위함이라고 이해하였다.</li>
</ul>]]></content><author><name>lango</name></author><category term="Java" /><category term="blog" /><category term="algorithm" /><category term="study" /><category term="java" /><category term="programmers" /><summary type="html"><![CDATA[level 2 - 피보나치 수]]></summary></entry><entry><title type="html">[Java] 프로그래머스(level-1) - 숫자 문자열과 영단어</title><link href="http://localhost:4000/java/49-post/" rel="alternate" type="text/html" title="[Java] 프로그래머스(level-1) - 숫자 문자열과 영단어" /><published>2022-09-06T00:00:00+09:00</published><updated>2022-09-06T00:00:00+09:00</updated><id>http://localhost:4000/java/49-post</id><content type="html" xml:base="http://localhost:4000/java/49-post/"><![CDATA[<p><br /></p>

<center><img src="/assets/images/programmers/20220906_01.png" width="700" /></center>
<p><br /></p>

<p><strong>각 숫자에 대응되는 영단어 표</strong></p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">숫자</th>
      <th style="text-align: center">영단어</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">0</td>
      <td style="text-align: center">zero</td>
    </tr>
    <tr>
      <td style="text-align: center">1</td>
      <td style="text-align: center">one</td>
    </tr>
    <tr>
      <td style="text-align: center">2</td>
      <td style="text-align: center">two</td>
    </tr>
    <tr>
      <td style="text-align: center">3</td>
      <td style="text-align: center">three</td>
    </tr>
    <tr>
      <td style="text-align: center">4</td>
      <td style="text-align: center">four</td>
    </tr>
    <tr>
      <td style="text-align: center">5</td>
      <td style="text-align: center">five</td>
    </tr>
    <tr>
      <td style="text-align: center">6</td>
      <td style="text-align: center">six</td>
    </tr>
    <tr>
      <td style="text-align: center">7</td>
      <td style="text-align: center">seven</td>
    </tr>
    <tr>
      <td style="text-align: center">8</td>
      <td style="text-align: center">eight</td>
    </tr>
    <tr>
      <td style="text-align: center">9</td>
      <td style="text-align: center">nine</td>
    </tr>
  </tbody>
</table>

<p><br /></p>

<p><strong>입출력 예시</strong></p>
<blockquote>
  <p>Input-1 <br />
<strong>“one4seveneight”</strong> <br />
Output-1 <br />
<strong>1478</strong></p>
</blockquote>

<blockquote>
  <p>Input-2 <br />
<strong>“23four5six7”</strong> <br />
Output-2 <br />
<strong>234567</strong></p>
</blockquote>

<blockquote>
  <p>Input-3 <br />
<strong>“2three45sixseven”</strong> <br />
Output-3 <br />
<strong>234567</strong></p>
</blockquote>

<blockquote>
  <p>Input-4 <br />
<strong>123</strong> <br />
Output-4 <br />
<strong>123</strong></p>
</blockquote>

<p><br /></p>

<h3 id="문제-풀이">문제 풀이</h3>
<p>이 문제는 두가지 방법으로 풀어보았다. <br />
먼저 각 영단어마다 대응되는 조건을 <strong>노가다</strong>로 작성하는 방법으로 풀어보았다. <br />
그런데 코드가 너무 길고 가독성이 나쁜 것 같아 줄일 수 있는 방법중 모색하던중 <strong>replace()을 활용</strong>하여 간결하게 줄일 수 있었다. <br />
이 두가지 풀이 모두 알아보자. <br /></p>

<h4 id="노가다-작성-풀이">노가다 작성 풀이</h4>

<p>주어진 문자열의 0부터 0까지의 영단어별로 확인하기 위해 switch문을 활용하였다. <br />
각 영단어의 첫 인덱스 문자 <strong>z(0), o(1), t(2,3), f(4,5), s(6,7), e(8), n(9)</strong> 별로 검증하였고, <br />
영단어가 아닌 숫자의 경우는 숫자 그대로 반환할 수 있도록 하였다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
</pre></td><td class="rouge-code"><pre><span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">s</span><span class="o">.</span><span class="na">length</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
    <span class="k">switch</span><span class="o">(</span><span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">))</span> <span class="o">{</span>
        <span class="k">case</span> <span class="sc">'z'</span><span class="o">:</span>
            <span class="k">if</span><span class="o">(</span><span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">)==</span><span class="sc">'e'</span> <span class="o">&amp;&amp;</span> <span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">2</span><span class="o">)==</span><span class="sc">'r'</span> <span class="o">&amp;&amp;</span> <span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">3</span><span class="o">)==</span><span class="sc">'o'</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">temp</span> <span class="o">+=</span> <span class="s">"0"</span><span class="o">;</span>
                <span class="n">i</span><span class="o">+=</span><span class="mi">3</span><span class="o">;</span>
                <span class="k">break</span><span class="o">;</span>
            <span class="o">}</span>
        <span class="k">case</span> <span class="sc">'o'</span><span class="o">:</span>
            <span class="k">if</span><span class="o">(</span><span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">)==</span><span class="sc">'n'</span> <span class="o">&amp;&amp;</span> <span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">2</span><span class="o">)==</span><span class="sc">'e'</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">temp</span> <span class="o">+=</span> <span class="s">"1"</span><span class="o">;</span>
                <span class="n">i</span><span class="o">+=</span><span class="mi">2</span><span class="o">;</span>
                <span class="k">break</span><span class="o">;</span>
            <span class="o">}</span>
        <span class="k">case</span> <span class="sc">'t'</span><span class="o">:</span>
            <span class="k">if</span><span class="o">(</span><span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">)==</span><span class="sc">'w'</span> <span class="o">&amp;&amp;</span> <span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">2</span><span class="o">)==</span><span class="sc">'o'</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">temp</span> <span class="o">+=</span> <span class="s">"2"</span><span class="o">;</span>
                <span class="n">i</span><span class="o">+=</span><span class="mi">2</span><span class="o">;</span>
                <span class="k">break</span><span class="o">;</span>
            <span class="o">}</span>
            <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">)==</span><span class="sc">'h'</span> <span class="o">&amp;&amp;</span> <span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">2</span><span class="o">)==</span><span class="sc">'r'</span> <span class="o">&amp;&amp;</span> <span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">3</span><span class="o">)==</span><span class="sc">'e'</span> <span class="o">&amp;&amp;</span> <span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">4</span><span class="o">)==</span><span class="sc">'e'</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">temp</span> <span class="o">+=</span> <span class="s">"3"</span><span class="o">;</span>
                <span class="n">i</span><span class="o">+=</span><span class="mi">4</span><span class="o">;</span>
                <span class="k">break</span><span class="o">;</span>
            <span class="o">}</span>
        <span class="k">case</span> <span class="sc">'f'</span><span class="o">:</span>
            <span class="k">if</span><span class="o">(</span><span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">)==</span><span class="sc">'o'</span> <span class="o">&amp;&amp;</span> <span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">2</span><span class="o">)==</span><span class="sc">'u'</span> <span class="o">&amp;&amp;</span> <span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">3</span><span class="o">)==</span><span class="sc">'r'</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">temp</span> <span class="o">+=</span> <span class="s">"4"</span><span class="o">;</span>
                <span class="n">i</span><span class="o">+=</span><span class="mi">3</span><span class="o">;</span>
                <span class="k">break</span><span class="o">;</span>
            <span class="o">}</span>
            <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">)==</span><span class="sc">'i'</span> <span class="o">&amp;&amp;</span> <span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">2</span><span class="o">)==</span><span class="sc">'v'</span> <span class="o">&amp;&amp;</span> <span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">3</span><span class="o">)==</span><span class="sc">'e'</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">temp</span> <span class="o">+=</span> <span class="s">"5"</span><span class="o">;</span>
                <span class="n">i</span><span class="o">+=</span><span class="mi">3</span><span class="o">;</span>
                <span class="k">break</span><span class="o">;</span>
            <span class="o">}</span>
        <span class="k">case</span> <span class="sc">'s'</span><span class="o">:</span>
            <span class="k">if</span><span class="o">(</span><span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">)==</span><span class="sc">'i'</span> <span class="o">&amp;&amp;</span> <span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">2</span><span class="o">)==</span><span class="sc">'x'</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">temp</span> <span class="o">+=</span> <span class="s">"6"</span><span class="o">;</span>
                <span class="n">i</span><span class="o">+=</span><span class="mi">2</span><span class="o">;</span>
                <span class="k">break</span><span class="o">;</span>
            <span class="o">}</span>
            <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">)==</span><span class="sc">'e'</span> <span class="o">&amp;&amp;</span> <span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">2</span><span class="o">)==</span><span class="sc">'v'</span> <span class="o">&amp;&amp;</span> <span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">3</span><span class="o">)==</span><span class="sc">'e'</span> <span class="o">&amp;&amp;</span> <span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">4</span><span class="o">)==</span><span class="sc">'n'</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">temp</span> <span class="o">+=</span> <span class="s">"7"</span><span class="o">;</span>
                <span class="n">i</span><span class="o">+=</span><span class="mi">4</span><span class="o">;</span>
                <span class="k">break</span><span class="o">;</span>
            <span class="o">}</span>
        <span class="k">case</span> <span class="sc">'e'</span><span class="o">:</span>
            <span class="k">if</span><span class="o">(</span><span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">)==</span><span class="sc">'i'</span> <span class="o">&amp;&amp;</span> <span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">2</span><span class="o">)==</span><span class="sc">'g'</span> <span class="o">&amp;&amp;</span> <span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">3</span><span class="o">)==</span><span class="sc">'h'</span> <span class="o">&amp;&amp;</span> <span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">4</span><span class="o">)==</span><span class="sc">'t'</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">temp</span> <span class="o">+=</span> <span class="s">"8"</span><span class="o">;</span>
                <span class="n">i</span><span class="o">+=</span><span class="mi">4</span><span class="o">;</span>
                <span class="k">break</span><span class="o">;</span>
            <span class="o">}</span>
        <span class="k">case</span> <span class="sc">'n'</span><span class="o">:</span>
            <span class="k">if</span><span class="o">(</span><span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">)==</span><span class="sc">'i'</span> <span class="o">&amp;&amp;</span> <span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">2</span><span class="o">)==</span><span class="sc">'n'</span> <span class="o">&amp;&amp;</span> <span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">3</span><span class="o">)==</span><span class="sc">'e'</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">temp</span> <span class="o">+=</span> <span class="s">"9"</span><span class="o">;</span>
                <span class="n">i</span><span class="o">+=</span><span class="mi">3</span><span class="o">;</span>
                <span class="k">break</span><span class="o">;</span>
            <span class="o">}</span>
        <span class="k">default</span><span class="o">:</span>
            <span class="n">temp</span> <span class="o">+=</span> <span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
            <span class="k">break</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>위 코드를 보면 알겠지만 읽기 짜증날 정도로 길다..</p>

<h4 id="replace-활용-풀이">replace() 활용 풀이</h4>
<p>앞에서 푼 코드 길이를 대폭 줄일 수 있는 방법이 있다..! <br />
바로 replace() 메서드를 이용하는 것이다.</p>

<p>먼저 0부터 9까지의 영단어 배열을 하나 만들어준다.</p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="nc">String</span><span class="o">[]</span> <span class="n">alph</span> <span class="o">=</span> <span class="o">{</span><span class="s">"zero"</span><span class="o">,</span> <span class="s">"one"</span><span class="o">,</span> <span class="s">"two"</span><span class="o">,</span> <span class="s">"three"</span><span class="o">,</span> <span class="s">"four"</span><span class="o">,</span> <span class="s">"five"</span><span class="o">,</span> <span class="s">"six"</span><span class="o">,</span> <span class="s">"seven"</span><span class="o">,</span> <span class="s">"eight"</span><span class="o">,</span> <span class="s">"nine"</span><span class="o">};</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>그리고 이 영단어 배열을 순회하며 replace()를 활용해 입력문자열에 존재하는 영단어를 숫자로 변환할 수 있다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre><span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">alph</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
    <span class="n">s</span> <span class="o">=</span> <span class="n">s</span><span class="o">.</span><span class="na">replace</span><span class="o">(</span><span class="n">alph</span><span class="o">[</span><span class="n">i</span><span class="o">],</span> <span class="nc">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">i</span><span class="o">));</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>이렇게 위 switch문에 비하면 너무나 간결한 코드로 작성할 수가 있다.</p>

<p><br /></p>

<h3 id="작성-코드">작성 코드</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">Scanner</span> <span class="n">sc</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Scanner</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
        <span class="nc">String</span> <span class="n">s</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextLine</span><span class="o">();</span>

        <span class="kt">long</span> <span class="n">start</span> <span class="o">=</span> <span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        <span class="n">solutio2</span><span class="o">(</span><span class="n">s</span><span class="o">);</span>
        <span class="kt">long</span> <span class="n">end</span> <span class="o">=</span> <span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"\n수행시간 = "</span> <span class="o">+</span> <span class="o">(</span><span class="n">end</span><span class="o">-</span><span class="n">start</span><span class="o">));</span>
    <span class="o">}</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">solution1</span><span class="o">(</span><span class="nc">String</span> <span class="n">s</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">String</span> <span class="n">temp</span> <span class="o">=</span> <span class="s">""</span><span class="o">;</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">s</span><span class="o">.</span><span class="na">length</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">));</span>
            <span class="k">switch</span><span class="o">(</span><span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">))</span> <span class="o">{</span>
                <span class="k">case</span> <span class="sc">'z'</span><span class="o">:</span>
                    <span class="k">if</span><span class="o">(</span><span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">)==</span><span class="sc">'e'</span> <span class="o">&amp;&amp;</span> <span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">2</span><span class="o">)==</span><span class="sc">'r'</span> <span class="o">&amp;&amp;</span> <span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">3</span><span class="o">)==</span><span class="sc">'o'</span><span class="o">)</span> <span class="o">{</span>
                        <span class="n">temp</span> <span class="o">+=</span> <span class="s">"0"</span><span class="o">;</span>
                        <span class="n">i</span><span class="o">+=</span><span class="mi">3</span><span class="o">;</span>
                        <span class="k">break</span><span class="o">;</span>
                    <span class="o">}</span>
                <span class="k">case</span> <span class="sc">'o'</span><span class="o">:</span>
                    <span class="k">if</span><span class="o">(</span><span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">)==</span><span class="sc">'n'</span> <span class="o">&amp;&amp;</span> <span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">2</span><span class="o">)==</span><span class="sc">'e'</span><span class="o">)</span> <span class="o">{</span>
                        <span class="n">temp</span> <span class="o">+=</span> <span class="s">"1"</span><span class="o">;</span>
                        <span class="n">i</span><span class="o">+=</span><span class="mi">2</span><span class="o">;</span>
                        <span class="k">break</span><span class="o">;</span>
                    <span class="o">}</span>
                <span class="k">case</span> <span class="sc">'t'</span><span class="o">:</span>
                    <span class="k">if</span><span class="o">(</span><span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">)==</span><span class="sc">'w'</span> <span class="o">&amp;&amp;</span> <span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">2</span><span class="o">)==</span><span class="sc">'o'</span><span class="o">)</span> <span class="o">{</span>
                        <span class="n">temp</span> <span class="o">+=</span> <span class="s">"2"</span><span class="o">;</span>
                        <span class="n">i</span><span class="o">+=</span><span class="mi">2</span><span class="o">;</span>
                        <span class="k">break</span><span class="o">;</span>
                    <span class="o">}</span>
                    <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">)==</span><span class="sc">'h'</span> <span class="o">&amp;&amp;</span> <span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">2</span><span class="o">)==</span><span class="sc">'r'</span> <span class="o">&amp;&amp;</span> <span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">3</span><span class="o">)==</span><span class="sc">'e'</span> <span class="o">&amp;&amp;</span> <span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">4</span><span class="o">)==</span><span class="sc">'e'</span><span class="o">)</span> <span class="o">{</span>
                        <span class="n">temp</span> <span class="o">+=</span> <span class="s">"3"</span><span class="o">;</span>
                        <span class="n">i</span><span class="o">+=</span><span class="mi">4</span><span class="o">;</span>
                        <span class="k">break</span><span class="o">;</span>
                    <span class="o">}</span>
                <span class="k">case</span> <span class="sc">'f'</span><span class="o">:</span>
                    <span class="k">if</span><span class="o">(</span><span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">)==</span><span class="sc">'o'</span> <span class="o">&amp;&amp;</span> <span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">2</span><span class="o">)==</span><span class="sc">'u'</span> <span class="o">&amp;&amp;</span> <span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">3</span><span class="o">)==</span><span class="sc">'r'</span><span class="o">)</span> <span class="o">{</span>
                        <span class="n">temp</span> <span class="o">+=</span> <span class="s">"4"</span><span class="o">;</span>
                        <span class="n">i</span><span class="o">+=</span><span class="mi">3</span><span class="o">;</span>
                        <span class="k">break</span><span class="o">;</span>
                    <span class="o">}</span>
                    <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">)==</span><span class="sc">'i'</span> <span class="o">&amp;&amp;</span> <span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">2</span><span class="o">)==</span><span class="sc">'v'</span> <span class="o">&amp;&amp;</span> <span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">3</span><span class="o">)==</span><span class="sc">'e'</span><span class="o">)</span> <span class="o">{</span>
                        <span class="n">temp</span> <span class="o">+=</span> <span class="s">"5"</span><span class="o">;</span>
                        <span class="n">i</span><span class="o">+=</span><span class="mi">3</span><span class="o">;</span>
                        <span class="k">break</span><span class="o">;</span>
                    <span class="o">}</span>
                <span class="k">case</span> <span class="sc">'s'</span><span class="o">:</span>
                    <span class="k">if</span><span class="o">(</span><span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">)==</span><span class="sc">'i'</span> <span class="o">&amp;&amp;</span> <span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">2</span><span class="o">)==</span><span class="sc">'x'</span><span class="o">)</span> <span class="o">{</span>
                        <span class="n">temp</span> <span class="o">+=</span> <span class="s">"6"</span><span class="o">;</span>
                        <span class="n">i</span><span class="o">+=</span><span class="mi">2</span><span class="o">;</span>
                        <span class="k">break</span><span class="o">;</span>
                    <span class="o">}</span>
                    <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">)==</span><span class="sc">'e'</span> <span class="o">&amp;&amp;</span> <span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">2</span><span class="o">)==</span><span class="sc">'v'</span> <span class="o">&amp;&amp;</span> <span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">3</span><span class="o">)==</span><span class="sc">'e'</span> <span class="o">&amp;&amp;</span> <span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">4</span><span class="o">)==</span><span class="sc">'n'</span><span class="o">)</span> <span class="o">{</span>
                        <span class="n">temp</span> <span class="o">+=</span> <span class="s">"7"</span><span class="o">;</span>
                        <span class="n">i</span><span class="o">+=</span><span class="mi">4</span><span class="o">;</span>
                        <span class="k">break</span><span class="o">;</span>
                    <span class="o">}</span>
                <span class="k">case</span> <span class="sc">'e'</span><span class="o">:</span>
                    <span class="k">if</span><span class="o">(</span><span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">)==</span><span class="sc">'i'</span> <span class="o">&amp;&amp;</span> <span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">2</span><span class="o">)==</span><span class="sc">'g'</span> <span class="o">&amp;&amp;</span> <span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">3</span><span class="o">)==</span><span class="sc">'h'</span> <span class="o">&amp;&amp;</span> <span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">4</span><span class="o">)==</span><span class="sc">'t'</span><span class="o">)</span> <span class="o">{</span>
                        <span class="n">temp</span> <span class="o">+=</span> <span class="s">"8"</span><span class="o">;</span>
                        <span class="n">i</span><span class="o">+=</span><span class="mi">4</span><span class="o">;</span>
                        <span class="k">break</span><span class="o">;</span>
                    <span class="o">}</span>
                <span class="k">case</span> <span class="sc">'n'</span><span class="o">:</span>
                    <span class="k">if</span><span class="o">(</span><span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">)==</span><span class="sc">'i'</span> <span class="o">&amp;&amp;</span> <span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">2</span><span class="o">)==</span><span class="sc">'n'</span> <span class="o">&amp;&amp;</span> <span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">3</span><span class="o">)==</span><span class="sc">'e'</span><span class="o">)</span> <span class="o">{</span>
                        <span class="n">temp</span> <span class="o">+=</span> <span class="s">"9"</span><span class="o">;</span>
                        <span class="n">i</span><span class="o">+=</span><span class="mi">3</span><span class="o">;</span>
                        <span class="k">break</span><span class="o">;</span>
                    <span class="o">}</span>
                <span class="k">default</span><span class="o">:</span>
                    <span class="n">temp</span> <span class="o">+=</span> <span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
                    <span class="k">break</span><span class="o">;</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">temp</span><span class="o">);</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">solution2</span><span class="o">(</span><span class="nc">String</span> <span class="n">s</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">String</span><span class="o">[]</span> <span class="n">alph</span> <span class="o">=</span> <span class="o">{</span><span class="s">"zero"</span><span class="o">,</span> <span class="s">"one"</span><span class="o">,</span> <span class="s">"two"</span><span class="o">,</span> <span class="s">"three"</span><span class="o">,</span> <span class="s">"four"</span><span class="o">,</span> <span class="s">"five"</span><span class="o">,</span> <span class="s">"six"</span><span class="o">,</span> <span class="s">"seven"</span><span class="o">,</span> <span class="s">"eight"</span><span class="o">,</span> <span class="s">"nine"</span><span class="o">};</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">alph</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="n">s</span> <span class="o">=</span> <span class="n">s</span><span class="o">.</span><span class="na">replace</span><span class="o">(</span><span class="n">alph</span><span class="o">[</span><span class="n">i</span><span class="o">],</span> <span class="nc">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">i</span><span class="o">));</span>
        <span class="o">}</span>
        <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">s</span><span class="o">);</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="회고">회고</h3>
<ul>
  <li>문자열을 변환하는 과정에서 어떻게 접근해야 할지 익숙해진 것 같고, 코드의 가독성을 위해 고민하고 더 좋은 코드를 작성할 수 있었다.</li>
</ul>]]></content><author><name>lango</name></author><category term="Java" /><category term="blog" /><category term="algorithm" /><category term="study" /><category term="java" /><category term="programmers" /><summary type="html"><![CDATA[level 1 - 숫자 문자열과 영단어]]></summary></entry><entry><title type="html">[Java] 프로그래머스(level-1) - 신규 아이디 추천</title><link href="http://localhost:4000/java/50-post/" rel="alternate" type="text/html" title="[Java] 프로그래머스(level-1) - 신규 아이디 추천" /><published>2022-09-06T00:00:00+09:00</published><updated>2022-09-06T00:00:00+09:00</updated><id>http://localhost:4000/java/50-post</id><content type="html" xml:base="http://localhost:4000/java/50-post/"><![CDATA[<p><br /></p>

<center><img src="/assets/images/programmers/20220906_02.png" width="700" /></center>
<p><br /></p>

<p><strong>입출력 예시</strong></p>
<blockquote>
  <p>Input-1 <br />
<strong>“…!@BaT#*..y.abcdefghijklm”</strong> <br />
Output-1 <br />
<strong>“bat.y.abcdefghi”</strong></p>
</blockquote>

<blockquote>
  <p>Input-2 <br />
<strong>“z-+.^.”</strong> <br />
Output-2 <br />
<strong>“z–“</strong></p>
</blockquote>

<blockquote>
  <p>Input-3 <br />
<strong>”=.=”</strong> <br />
Output-3 <br />
<strong>“aaa”</strong></p>
</blockquote>

<blockquote>
  <p>Input-4 <br />
<strong>“abcdefghijklmn.p”</strong> <br />
Output-4 <br />
<strong>“abcdefghijklmn”</strong></p>
</blockquote>

<p><br /></p>

<h3 id="문제-풀이">문제 풀이</h3>
<p>주어진 입력문자열을 단계별로 검증하고 변경해야 한다. <br />
그럼 단계별로 순차적으로 아이디를 검증해보자.</p>

<h4 id="단계별-풀이">단계별 풀이</h4>

<p><strong>1단계</strong>
문자열을 순회하며 대문자가 있을 경우 소문자로 변환하여 저장하자.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="rouge-code"><pre><span class="kt">char</span><span class="o">[]</span> <span class="n">new_id_arr</span> <span class="o">=</span> <span class="n">new_id</span><span class="o">.</span><span class="na">toCharArray</span><span class="o">();</span> <span class="c1">// char형 입력문자열</span>
<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">new_id</span><span class="o">.</span><span class="na">length</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
    <span class="kt">char</span> <span class="n">id</span> <span class="o">=</span> <span class="n">new_id</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
    <span class="k">if</span><span class="o">(</span><span class="nc">Character</span><span class="o">.</span><span class="na">isUpperCase</span><span class="o">(</span><span class="n">id</span><span class="o">))</span> <span class="n">new_id_arr</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="nc">Character</span><span class="o">.</span><span class="na">toLowerCase</span><span class="o">(</span><span class="n">id</span><span class="o">);</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p><br /></p>

<p><strong>2단계</strong>
입력문자열에서 소문자와 숫자, “.”, “-“, “_” 문자만 answer에 담는다.</p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="rouge-code"><pre><span class="nc">String</span> <span class="n">answer</span> <span class="o">=</span> <span class="s">""</span><span class="o">;</span>
<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">new_id_arr</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
    <span class="kt">char</span> <span class="n">id</span> <span class="o">=</span> <span class="n">new_id_arr</span><span class="o">[</span><span class="n">i</span><span class="o">];</span>
    <span class="k">if</span><span class="o">((</span><span class="sc">'a'</span><span class="o">&lt;=</span><span class="n">id</span> <span class="o">&amp;&amp;</span> <span class="sc">'z'</span><span class="o">&gt;=</span><span class="n">id</span><span class="o">)</span> <span class="o">||</span> <span class="o">(</span><span class="sc">'0'</span><span class="o">&lt;=</span><span class="n">id</span> <span class="o">&amp;&amp;</span> <span class="sc">'9'</span><span class="o">&gt;=</span><span class="n">id</span><span class="o">)</span> <span class="o">||</span> <span class="n">id</span><span class="o">==</span><span class="sc">'.'</span> <span class="o">||</span> <span class="n">id</span><span class="o">==</span><span class="sc">'-'</span> <span class="o">||</span> <span class="n">id</span><span class="o">==</span><span class="sc">'_'</span><span class="o">)</span> <span class="n">answer</span> <span class="o">+=</span> <span class="n">id</span><span class="o">;</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p><br /></p>

<p><strong>3단계</strong>
연속된 마침표가 존재할 경우 하나의 마침표로 치환하기 위해 <strong>replaceAll() 메서드로 정규표현식을 활용</strong>합니다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="n">answer</span> <span class="o">=</span> <span class="n">answer</span><span class="o">.</span><span class="na">replaceAll</span><span class="o">(</span><span class="s">"\\.+"</span><span class="o">,</span> <span class="s">"."</span><span class="o">);</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<blockquote>
  <p>str.replaceAll(<code class="language-plaintext highlighter-rouge">"\\.+"</code>, “.”) <br />
정규식 <code class="language-plaintext highlighter-rouge">"\."</code>는 마침표를 나타낸다. 그리고 “+”는 1번 이상을 의미합니다. <br /></p>
</blockquote>

<p><strong>즉, “\s+”는 1개 이상 존재하는 마침표임</strong>을 알 수 있다. <br />
따라서, 위 코드는 연속되는 마침표를 하나의 마침표로 치환할 수 있다.</p>

<p><br /></p>

<p><strong>4단계</strong>
문자열의 양쪽 끝에 마침표가 존재할 경우 제거해야 한다. <br />
직접 문자열 배열 내 원소를 제거하는 것보다 <strong>substring()을 통한 슬라이싱을 활용</strong>하였다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre><span class="k">if</span><span class="o">(</span><span class="n">answer</span><span class="o">.</span><span class="na">length</span><span class="o">()</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
    <span class="k">if</span><span class="o">(</span><span class="n">answer</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="mi">0</span><span class="o">)==</span><span class="sc">'.'</span><span class="o">)</span> <span class="n">answer</span> <span class="o">=</span> <span class="n">answer</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="n">answer</span><span class="o">.</span><span class="na">length</span><span class="o">());</span>
    <span class="k">if</span><span class="o">(</span><span class="n">answer</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">answer</span><span class="o">.</span><span class="na">length</span><span class="o">()-</span><span class="mi">1</span><span class="o">)==</span><span class="sc">'.'</span><span class="o">)</span> <span class="n">answer</span> <span class="o">=</span> <span class="n">answer</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="n">answer</span><span class="o">.</span><span class="na">length</span><span class="o">()-</span><span class="mi">1</span><span class="o">);</span>
<span class="o">}</span>
<span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">answer</span><span class="o">.</span><span class="na">length</span><span class="o">()</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">answer</span><span class="o">.</span><span class="na">length</span><span class="o">()==</span><span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
    <span class="k">if</span><span class="o">(</span><span class="n">answer</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="mi">0</span><span class="o">)==</span><span class="sc">'.'</span><span class="o">)</span> <span class="n">answer</span> <span class="o">=</span> <span class="s">""</span><span class="o">;</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p><br /></p>

<p><strong>5단계</strong>
4단계까지 실행 한 문자열이 빈 문자열일 경우 “a” 문자를 대입한다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="k">if</span><span class="o">(</span><span class="n">answer</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">""</span><span class="o">)</span> <span class="o">||</span> <span class="n">answer</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">()</span> <span class="o">||</span> <span class="n">answer</span><span class="o">==</span><span class="kc">null</span><span class="o">)</span> <span class="n">answer</span> <span class="o">+=</span> <span class="s">"a"</span><span class="o">;</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><br /></p>

<p><strong>6단계</strong>
문자열 길이가 16자 이상일 경우 처음부터 15자 까지만 자른 후 4단계와 동일하게 양쪽 끝 마침표를 제거한다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="rouge-code"><pre><span class="k">if</span><span class="o">(</span><span class="n">answer</span><span class="o">.</span><span class="na">length</span><span class="o">()&gt;=</span><span class="mi">16</span><span class="o">)</span> <span class="n">answer</span> <span class="o">=</span> <span class="n">answer</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="mi">15</span><span class="o">);</span>
<span class="c1">// 4단계 재실행</span>
<span class="k">if</span><span class="o">(</span><span class="n">answer</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="mi">0</span><span class="o">)==</span><span class="sc">'.'</span><span class="o">)</span> <span class="n">answer</span> <span class="o">=</span> <span class="n">answer</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="n">answer</span><span class="o">.</span><span class="na">length</span><span class="o">());</span>
<span class="k">if</span><span class="o">(</span><span class="n">answer</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">answer</span><span class="o">.</span><span class="na">length</span><span class="o">()-</span><span class="mi">1</span><span class="o">)==</span><span class="sc">'.'</span><span class="o">)</span> <span class="n">answer</span> <span class="o">=</span> <span class="n">answer</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="n">answer</span><span class="o">.</span><span class="na">length</span><span class="o">()-</span><span class="mi">1</span><span class="o">);</span> 
</pre></td></tr></tbody></table></code></pre></div></div>
<p>동일한 코드기에 4단계를 한 번 더 실행하도록 고치면 좋을 겉 같다.</p>

<p><br /></p>

<p><strong>7단계</strong>
6단계까지 실행 한 문자열의 길이가 2자 이하일 경우 3글자가 될때까지 제일 마지막 글자를 반복해서 대입한다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="rouge-code"><pre><span class="k">if</span><span class="o">(</span><span class="n">answer</span><span class="o">.</span><span class="na">length</span><span class="o">()&lt;=</span><span class="mi">2</span><span class="o">)</span> <span class="o">{</span>
    <span class="k">while</span><span class="o">(</span><span class="n">answer</span><span class="o">.</span><span class="na">length</span><span class="o">()!=</span><span class="mi">3</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">answer</span> <span class="o">+=</span> <span class="n">answer</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">answer</span><span class="o">.</span><span class="na">length</span><span class="o">()-</span><span class="mi">1</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><br /></p>

<h4 id="함수형-로직으로-변경">함수형 로직으로 변경</h4>
<p>단계별로 풀이한 코드를 보니, 단계별 기능들이 모두 다르거나 같은 기능을 내포하고 있었다. <br />
가독성을 높이기 위해 각 단계별 코드를 함수형으로 분리하여 재작성하였다. <br />
자세한 코드 내용은 아래 작성코드에 첨부하였다.</p>

<p><br /></p>

<h3 id="작성-코드">작성 코드</h3>
<h4 id="작성-코드---단계별-풀이">작성 코드 - 단계별 풀이</h4>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
</pre></td><td class="rouge-code"><pre><span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="nc">String</span> <span class="nf">solution</span><span class="o">(</span><span class="nc">String</span> <span class="n">new_id</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">String</span> <span class="n">answer</span> <span class="o">=</span> <span class="s">""</span><span class="o">;</span>
        <span class="kt">char</span><span class="o">[]</span> <span class="n">new_id_arr</span> <span class="o">=</span> <span class="n">new_id</span><span class="o">.</span><span class="na">toCharArray</span><span class="o">();</span>
        <span class="c1">// 1단계</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">new_id</span><span class="o">.</span><span class="na">length</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span> 
            <span class="kt">char</span> <span class="n">id</span> <span class="o">=</span> <span class="n">new_id</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
            <span class="k">if</span><span class="o">(</span><span class="nc">Character</span><span class="o">.</span><span class="na">isUpperCase</span><span class="o">(</span><span class="n">id</span><span class="o">))</span> <span class="n">new_id_arr</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="nc">Character</span><span class="o">.</span><span class="na">toLowerCase</span><span class="o">(</span><span class="n">id</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="c1">// 2단계</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">new_id_arr</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="kt">char</span> <span class="n">id</span> <span class="o">=</span> <span class="n">new_id_arr</span><span class="o">[</span><span class="n">i</span><span class="o">];</span>
            <span class="k">if</span><span class="o">((</span><span class="sc">'a'</span><span class="o">&lt;=</span><span class="n">id</span> <span class="o">&amp;&amp;</span> <span class="sc">'z'</span><span class="o">&gt;=</span><span class="n">id</span><span class="o">)</span> <span class="o">||</span> <span class="o">(</span><span class="sc">'0'</span><span class="o">&lt;=</span><span class="n">id</span> <span class="o">&amp;&amp;</span> <span class="sc">'9'</span><span class="o">&gt;=</span><span class="n">id</span><span class="o">)</span> <span class="o">||</span> <span class="n">id</span><span class="o">==</span><span class="sc">'.'</span> <span class="o">||</span> <span class="n">id</span><span class="o">==</span><span class="sc">'-'</span> <span class="o">||</span> <span class="n">id</span><span class="o">==</span><span class="sc">'_'</span><span class="o">)</span> <span class="n">answer</span> <span class="o">+=</span> <span class="n">id</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="c1">// 3단계</span>
        <span class="n">answer</span> <span class="o">=</span> <span class="n">answer</span><span class="o">.</span><span class="na">replaceAll</span><span class="o">(</span><span class="s">"\\.+"</span><span class="o">,</span> <span class="s">"."</span><span class="o">);</span>
        <span class="c1">// 4단계</span>
        <span class="k">if</span><span class="o">(</span><span class="n">answer</span><span class="o">.</span><span class="na">length</span><span class="o">()</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="n">answer</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="mi">0</span><span class="o">)==</span><span class="sc">'.'</span><span class="o">)</span> <span class="n">answer</span> <span class="o">=</span> <span class="n">answer</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="n">answer</span><span class="o">.</span><span class="na">length</span><span class="o">());</span>
            <span class="k">if</span><span class="o">(</span><span class="n">answer</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">answer</span><span class="o">.</span><span class="na">length</span><span class="o">()-</span><span class="mi">1</span><span class="o">)==</span><span class="sc">'.'</span><span class="o">)</span> <span class="n">answer</span> <span class="o">=</span> <span class="n">answer</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="n">answer</span><span class="o">.</span><span class="na">length</span><span class="o">()-</span><span class="mi">1</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">answer</span><span class="o">.</span><span class="na">length</span><span class="o">()</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">answer</span><span class="o">.</span><span class="na">length</span><span class="o">()==</span><span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="n">answer</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="mi">0</span><span class="o">)==</span><span class="sc">'.'</span><span class="o">)</span> <span class="n">answer</span> <span class="o">=</span> <span class="s">""</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="c1">// 5단계</span>
        <span class="k">if</span><span class="o">(</span><span class="n">answer</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">""</span><span class="o">)</span> <span class="o">||</span> <span class="n">answer</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">()</span> <span class="o">||</span> <span class="n">answer</span><span class="o">==</span><span class="kc">null</span><span class="o">)</span> <span class="n">answer</span> <span class="o">+=</span> <span class="s">"a"</span><span class="o">;</span>
        <span class="c1">// 6단계</span>
        <span class="k">if</span><span class="o">(</span><span class="n">answer</span><span class="o">.</span><span class="na">length</span><span class="o">()&gt;=</span><span class="mi">16</span><span class="o">)</span> <span class="n">answer</span> <span class="o">=</span> <span class="n">answer</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="mi">15</span><span class="o">);</span>
        <span class="k">if</span><span class="o">(</span><span class="n">answer</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="mi">0</span><span class="o">)==</span><span class="sc">'.'</span><span class="o">)</span> <span class="n">answer</span> <span class="o">=</span> <span class="n">answer</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="n">answer</span><span class="o">.</span><span class="na">length</span><span class="o">());</span>
        <span class="k">if</span><span class="o">(</span><span class="n">answer</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">answer</span><span class="o">.</span><span class="na">length</span><span class="o">()-</span><span class="mi">1</span><span class="o">)==</span><span class="sc">'.'</span><span class="o">)</span> <span class="n">answer</span> <span class="o">=</span> <span class="n">answer</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="n">answer</span><span class="o">.</span><span class="na">length</span><span class="o">()-</span><span class="mi">1</span><span class="o">);</span> 
        <span class="c1">// 7단계</span>
        <span class="k">if</span><span class="o">(</span><span class="n">answer</span><span class="o">.</span><span class="na">length</span><span class="o">()&lt;=</span><span class="mi">2</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">while</span><span class="o">(</span><span class="n">answer</span><span class="o">.</span><span class="na">length</span><span class="o">()!=</span><span class="mi">3</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">answer</span> <span class="o">+=</span> <span class="n">answer</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">answer</span><span class="o">.</span><span class="na">length</span><span class="o">()-</span><span class="mi">1</span><span class="o">);</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<h4 id="작성코드---함수형-풀이">작성코드 - 함수형 풀이</h4>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
</pre></td><td class="rouge-code"><pre><span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="nc">String</span> <span class="nf">solution</span><span class="o">(</span><span class="nc">String</span> <span class="n">new_id</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">String</span> <span class="n">answer</span> <span class="o">=</span> <span class="s">""</span><span class="o">;</span>
        <span class="kt">char</span><span class="o">[]</span> <span class="n">new_id_arr</span> <span class="o">=</span> <span class="n">step1</span><span class="o">(</span><span class="n">new_id</span><span class="o">);</span>
        <span class="n">answer</span> <span class="o">=</span> <span class="n">step2</span><span class="o">(</span><span class="n">new_id_arr</span><span class="o">);</span>
        <span class="n">answer</span> <span class="o">=</span> <span class="n">step3</span><span class="o">(</span><span class="n">answer</span><span class="o">);</span>
        <span class="n">answer</span> <span class="o">=</span> <span class="n">step4</span><span class="o">(</span><span class="n">answer</span><span class="o">);</span>
        <span class="n">answer</span> <span class="o">=</span> <span class="n">step5</span><span class="o">(</span><span class="n">answer</span><span class="o">);</span>
        <span class="n">answer</span> <span class="o">=</span> <span class="n">step6</span><span class="o">(</span><span class="n">answer</span><span class="o">);</span>
        <span class="n">answer</span> <span class="o">=</span> <span class="n">step7</span><span class="o">(</span><span class="n">answer</span><span class="o">);</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
    <span class="kd">private</span> <span class="kd">static</span> <span class="kt">char</span><span class="o">[]</span> <span class="nf">step1</span><span class="o">(</span><span class="nc">String</span> <span class="n">new_id</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">char</span><span class="o">[]</span> <span class="n">new_id_arr</span> <span class="o">=</span> <span class="n">new_id</span><span class="o">.</span><span class="na">toCharArray</span><span class="o">();</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">new_id</span><span class="o">.</span><span class="na">length</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="kt">char</span> <span class="n">id</span> <span class="o">=</span> <span class="n">new_id</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
            <span class="k">if</span><span class="o">(</span><span class="nc">Character</span><span class="o">.</span><span class="na">isUpperCase</span><span class="o">(</span><span class="n">id</span><span class="o">))</span> <span class="n">new_id_arr</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="nc">Character</span><span class="o">.</span><span class="na">toLowerCase</span><span class="o">(</span><span class="n">id</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">new_id_arr</span><span class="o">;</span>
    <span class="o">}</span>
    <span class="kd">private</span> <span class="kd">static</span> <span class="nc">String</span> <span class="nf">step2</span><span class="o">(</span><span class="kt">char</span><span class="o">[]</span> <span class="n">new_id_arr</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">String</span> <span class="n">answer</span> <span class="o">=</span> <span class="s">""</span><span class="o">;</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">new_id_arr</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="kt">char</span> <span class="n">id</span> <span class="o">=</span> <span class="n">new_id_arr</span><span class="o">[</span><span class="n">i</span><span class="o">];</span>
            <span class="k">if</span><span class="o">((</span><span class="sc">'a'</span><span class="o">&lt;=</span><span class="n">id</span> <span class="o">&amp;&amp;</span> <span class="sc">'z'</span><span class="o">&gt;=</span><span class="n">id</span><span class="o">)</span> <span class="o">||</span> <span class="o">(</span><span class="sc">'0'</span><span class="o">&lt;=</span><span class="n">id</span> <span class="o">&amp;&amp;</span> <span class="sc">'9'</span><span class="o">&gt;=</span><span class="n">id</span><span class="o">)</span> <span class="o">||</span> <span class="n">id</span><span class="o">==</span><span class="sc">'.'</span> <span class="o">||</span> <span class="n">id</span><span class="o">==</span><span class="sc">'-'</span> <span class="o">||</span> <span class="n">id</span><span class="o">==</span><span class="sc">'_'</span><span class="o">)</span> <span class="n">answer</span> <span class="o">+=</span> <span class="n">id</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
    <span class="kd">private</span> <span class="kd">static</span> <span class="nc">String</span> <span class="nf">step3</span><span class="o">(</span><span class="nc">String</span> <span class="n">answer</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">.</span><span class="na">replaceAll</span><span class="o">(</span><span class="s">"\\.+"</span><span class="o">,</span> <span class="s">"."</span><span class="o">);</span>
    <span class="o">}</span>
    <span class="kd">private</span> <span class="kd">static</span> <span class="nc">String</span> <span class="nf">step4</span><span class="o">(</span><span class="nc">String</span> <span class="n">answer</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">if</span><span class="o">(</span><span class="n">answer</span><span class="o">.</span><span class="na">length</span><span class="o">()</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="n">answer</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="mi">0</span><span class="o">)==</span><span class="sc">'.'</span><span class="o">)</span> <span class="n">answer</span> <span class="o">=</span> <span class="n">answer</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="n">answer</span><span class="o">.</span><span class="na">length</span><span class="o">());</span>
            <span class="k">if</span><span class="o">(</span><span class="n">answer</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">answer</span><span class="o">.</span><span class="na">length</span><span class="o">()-</span><span class="mi">1</span><span class="o">)==</span><span class="sc">'.'</span><span class="o">)</span> <span class="n">answer</span> <span class="o">=</span> <span class="n">answer</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="n">answer</span><span class="o">.</span><span class="na">length</span><span class="o">()-</span><span class="mi">1</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">answer</span><span class="o">.</span><span class="na">length</span><span class="o">()</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">answer</span><span class="o">.</span><span class="na">length</span><span class="o">()==</span><span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="n">answer</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="mi">0</span><span class="o">)==</span><span class="sc">'.'</span><span class="o">)</span> <span class="n">answer</span> <span class="o">=</span> <span class="s">""</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
    <span class="kd">private</span> <span class="kd">static</span> <span class="nc">String</span> <span class="nf">step5</span><span class="o">(</span><span class="nc">String</span> <span class="n">answer</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">if</span><span class="o">(</span><span class="n">answer</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">""</span><span class="o">)</span> <span class="o">||</span> <span class="n">answer</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">()</span> <span class="o">||</span> <span class="n">answer</span><span class="o">==</span><span class="kc">null</span><span class="o">)</span> <span class="n">answer</span> <span class="o">+=</span> <span class="s">"a"</span><span class="o">;</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
    <span class="kd">private</span> <span class="kd">static</span> <span class="nc">String</span> <span class="nf">step6</span><span class="o">(</span><span class="nc">String</span> <span class="n">answer</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">if</span><span class="o">(</span><span class="n">answer</span><span class="o">.</span><span class="na">length</span><span class="o">()&gt;=</span><span class="mi">16</span><span class="o">)</span> <span class="n">answer</span> <span class="o">=</span> <span class="n">answer</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="mi">15</span><span class="o">);</span>
        <span class="n">answer</span> <span class="o">=</span> <span class="n">step4</span><span class="o">(</span><span class="n">answer</span><span class="o">);</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
    <span class="kd">private</span> <span class="kd">static</span> <span class="nc">String</span> <span class="nf">step7</span><span class="o">(</span><span class="nc">String</span> <span class="n">answer</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">if</span><span class="o">(</span><span class="n">answer</span><span class="o">.</span><span class="na">length</span><span class="o">()&lt;=</span><span class="mi">2</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">while</span><span class="o">(</span><span class="n">answer</span><span class="o">.</span><span class="na">length</span><span class="o">()!=</span><span class="mi">3</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">answer</span> <span class="o">+=</span> <span class="n">answer</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">answer</span><span class="o">.</span><span class="na">length</span><span class="o">()-</span><span class="mi">1</span><span class="o">);</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="회고">회고</h3>
<ul>
  <li>모듈 내에서 여러 기능들을 어떻게 분리할 것이고, 공통사항은 어떻게 합칠 것인지 고민하는 과정이 단순히 알고리즘 공부를 넘어 자바를 자바답게 활용하는 데 큰 도움이 될 것이라고 느꼈다.</li>
  <li>replaceAll() 메서드에서 활용할 자주 쓰이는 정규표현식들을 공부해야겠다.</li>
</ul>]]></content><author><name>lango</name></author><category term="Java" /><category term="blog" /><category term="algorithm" /><category term="study" /><category term="java" /><category term="programmers" /><summary type="html"><![CDATA[level 1 - 신규 아이디 추천]]></summary></entry><entry><title type="html">[Java] 프로그래머스(level-2) - 행렬의 곱셈</title><link href="http://localhost:4000/java/47-post/" rel="alternate" type="text/html" title="[Java] 프로그래머스(level-2) - 행렬의 곱셈" /><published>2022-09-05T00:00:00+09:00</published><updated>2022-09-05T00:00:00+09:00</updated><id>http://localhost:4000/java/47-post</id><content type="html" xml:base="http://localhost:4000/java/47-post/"><![CDATA[<p><br /></p>

<center><img src="/assets/images/programmers/20220905_02.png" width="700" /></center>
<p><br /></p>

<p><strong>입출력 예시</strong></p>
<blockquote>
  <p>Input-1 <br />
<strong>arr1 = [[1, 4], [3, 2], [4, 1]]</strong> <br />
<strong>arr2 = [[3, 3], [3, 3]]</strong> <br />
Output-1 <br />
<strong>[[15, 15], [15, 15], [15, 15]]</strong></p>
</blockquote>

<blockquote>
  <p>Input-2 <br />
<strong>arr1 = [[2, 3, 2], [4, 2, 4], [3, 1, 4]]</strong> <br />
<strong>arr2 = [[5, 4, 3], [2, 4, 1], [3, 1, 1]]</strong> <br />
Output-2 <br />
<strong>[[22, 22, 11], [36, 28, 18], [29, 20, 14]]</strong></p>
</blockquote>

<p><br /></p>

<h3 id="문제-풀이">문제 풀이</h3>
<p>이 문제는 2차원 배열을 익숙하게 어느정도 다룰 수 있아야 한다. <br />
먼저 행렬의 곱셈의 경우 아래 조건을 충족해야 한다.</p>
<ul>
  <li>arr1(앞)의 열과 arr2(뒤)의 행이 같아야 한다.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
</pre></td><td class="rouge-code"><pre>// arr1(3X2)
1 4
3 2
4 1

// arr2(2X2)
3 3
3 3
</pre></td></tr></tbody></table></code></pre></div></div>

<p>예제로 주어진 arr1과 arr2를 보면 arr1(3X<strong>2</strong>)의 열과 arr2(<strong>2</strong>X2)의 행이 같음을 알 수 있다. <br /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre>1X3+4X3 1X3+4X3
3X3+2X3 3X3+2X3
4X1+1X3 4X1+1X3
</pre></td></tr></tbody></table></code></pre></div></div>

<p>그리고 arr1의 행과 arr2 열별로 곱한 값을 더하면 각 행별로 곱한 결과를 구할 수 있다. <br /></p>

<p>그럼 코드로 작성해보자. <br />
먼저 행렬의 곱 결과를 저장할 2차원 배열 answer를 초기화 하자.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="kt">int</span><span class="o">[][]</span> <span class="n">answer</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">arr1</span><span class="o">.</span><span class="na">length</span><span class="o">][</span><span class="n">arr2</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="na">length</span><span class="o">];</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p><br /></p>

<p>그리고 반복문을 활용하여 행렬의 곱셈을 구현해볼 것이다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre>arr1 = [[2, 3, 2], [4, 2, 4], [3, 1, 4]]	
arr2 = [[5, 4, 3], [2, 4, 1], [3, 1, 1]]	

answer[0][0] = 2X5 + 3X4 + 2X3
answer[0][1] = 2X2 + 3X4 + 2X1
answer[0][2] = 2X3 + 3X1 + 2X1
...
</pre></td></tr></tbody></table></code></pre></div></div>
<p>위 연산을 통해 arr1의 행이 arr2의 모든 열에 접근해야 함을 알 수 있다. <br />
앞서 언급한 arr1의 열과 arr2의 행의 개수가 같다는 조건을 이용하여 반복문을 작성해보자.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
</pre></td><td class="rouge-code"><pre><span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">arr1</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
    <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">j</span><span class="o">&lt;</span><span class="n">arr2</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="na">length</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">multi</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">k</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">k</span><span class="o">&lt;</span><span class="n">arr2</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">k</span><span class="o">++)</span> <span class="o">{</span>
            <span class="n">multi</span> <span class="o">+=</span> <span class="n">arr1</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">k</span><span class="o">]</span> <span class="o">*</span> <span class="n">arr2</span><span class="o">[</span><span class="n">k</span><span class="o">][</span><span class="n">j</span><span class="o">];</span> 
            <span class="n">answer</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]</span> <span class="o">=</span> <span class="n">multi</span><span class="o">;</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>위 코드의 k는 arr1의 열이자 arr2의 행으로 보면 되고, answer[i][j] += arr1[i][k] * arr2[k][j]라는 식으로 표현할 수 있다.</p>

<p><br /></p>

<h3 id="작성-코드">작성 코드</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
</pre></td><td class="rouge-code"><pre><span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        
        <span class="c1">// int[][] arr1 = {{1,4},{3,2},{4,1}};</span>
        <span class="c1">// int[][] arr2 = {{3,3},{3,3}};</span>
        <span class="kt">int</span><span class="o">[][]</span> <span class="n">arr1</span> <span class="o">=</span> <span class="o">{{</span><span class="mi">2</span><span class="o">,</span><span class="mi">3</span><span class="o">,</span><span class="mi">2</span><span class="o">},{</span><span class="mi">4</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="mi">4</span><span class="o">},{</span><span class="mi">3</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="mi">4</span><span class="o">}};</span>
        <span class="kt">int</span><span class="o">[][]</span> <span class="n">arr2</span> <span class="o">=</span> <span class="o">{{</span><span class="mi">5</span><span class="o">,</span><span class="mi">4</span><span class="o">,</span><span class="mi">3</span><span class="o">},{</span><span class="mi">2</span><span class="o">,</span><span class="mi">4</span><span class="o">,</span><span class="mi">1</span><span class="o">},{</span><span class="mi">3</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="mi">1</span><span class="o">}};</span>
        
        <span class="kt">long</span> <span class="n">start</span> <span class="o">=</span> <span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        <span class="n">solution</span><span class="o">(</span><span class="n">arr1</span><span class="o">,</span> <span class="n">arr2</span><span class="o">);</span>
        <span class="kt">long</span> <span class="n">end</span> <span class="o">=</span> <span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"\n수행시간 = "</span> <span class="o">+</span> <span class="o">(</span><span class="n">end</span><span class="o">-</span><span class="n">start</span><span class="o">));</span>
    <span class="o">}</span>
    
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span><span class="o">[][]</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span><span class="o">[][]</span> <span class="n">arr1</span><span class="o">,</span> <span class="kt">int</span><span class="o">[][]</span> <span class="n">arr2</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span><span class="o">[][]</span> <span class="n">answer</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">arr1</span><span class="o">.</span><span class="na">length</span><span class="o">][</span><span class="n">arr2</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="na">length</span><span class="o">];</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">arr1</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">j</span><span class="o">&lt;</span><span class="n">arr2</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="na">length</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
                <span class="kt">int</span> <span class="n">multi</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
                <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">k</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">k</span><span class="o">&lt;</span><span class="n">arr2</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">k</span><span class="o">++)</span> <span class="o">{</span>
                    <span class="n">multi</span> <span class="o">+=</span> <span class="n">arr1</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">k</span><span class="o">]</span> <span class="o">*</span> <span class="n">arr2</span><span class="o">[</span><span class="n">k</span><span class="o">][</span><span class="n">j</span><span class="o">];</span> 
                    <span class="n">answer</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]</span> <span class="o">=</span> <span class="n">multi</span><span class="o">;</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="회고">회고</h3>
<ul>
  <li>먼저 행렬의 곱셈이 제대로 기억나지 않아 다시 공부하였고, 행렬의 곱을 위해 2차원 배열의 행과 열을 다룰 줄 알아야 하는데, 미숙해서 반복문을 작성하는 것이 어려웠다.</li>
</ul>

<h3 id="참고-문서">참고 문서</h3>
<ul>
  <li><a href="https://mathbang.net/562">행렬의 곱셈 참조문서 출처</a></li>
</ul>]]></content><author><name>lango</name></author><category term="Java" /><category term="blog" /><category term="algorithm" /><category term="study" /><category term="java" /><category term="programmers" /><summary type="html"><![CDATA[level 2 - 행렬의 곱셈]]></summary></entry><entry><title type="html">[Java] 백준 2869번 - 달팽이는 올라가고 싶다</title><link href="http://localhost:4000/java/48-post/" rel="alternate" type="text/html" title="[Java] 백준 2869번 - 달팽이는 올라가고 싶다" /><published>2022-09-05T00:00:00+09:00</published><updated>2022-09-05T00:00:00+09:00</updated><id>http://localhost:4000/java/48-post</id><content type="html" xml:base="http://localhost:4000/java/48-post/"><![CDATA[<p><br /></p>

<center><img src="/assets/images/baekjoon/2869.png" /></center>

<p><br /></p>

<p><strong>입출력예제</strong></p>
<blockquote>
  <p>Input-1 <br />
<strong>2 1 5</strong> <br />
Output-1 <br />
<strong>4</strong></p>
</blockquote>

<blockquote>
  <p>Input-2 <br />
<strong>5 1 6</strong> <br />
Output-2 <br />
<strong>2</strong></p>
</blockquote>

<blockquote>
  <p>Input-3 <br />
<strong>100 99 1000000000</strong> <br />
Output-3 <br />
<strong>999999901</strong></p>
</blockquote>

<p><br /></p>

<h3 id="문제-풀이">문제 풀이</h3>
<p>낮에 A미터를 이동하고 밤에 B미터가 미끄러지며 V미터에 도달하는데 걸리는 일수를 구해야 한다. <br /></p>

<p>먼저 단순한 반복문을 활용해 코드를 작성하였다. <br />
up에 A를 더하고 B를 빼가며 목표 V에 도달했을 때의 날짜수(day)를 구하도록 하였다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
</pre></td><td class="rouge-code"><pre><span class="kt">int</span> <span class="n">up</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
<span class="kt">int</span> <span class="n">day</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
<span class="k">while</span><span class="o">(</span><span class="kc">true</span><span class="o">)</span> <span class="o">{</span>
    <span class="n">up</span> <span class="o">+=</span> <span class="no">A</span><span class="o">;</span>
    <span class="n">day</span><span class="o">++;</span>
    <span class="k">if</span><span class="o">(</span><span class="n">up</span> <span class="o">&gt;=</span> <span class="no">V</span><span class="o">)</span> <span class="k">break</span><span class="o">;</span>
    <span class="k">if</span><span class="o">(</span><span class="n">up</span><span class="o">&lt;</span><span class="no">V</span><span class="o">)</span> <span class="n">up</span> <span class="o">-=</span> <span class="no">B</span><span class="o">;</span>            
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>그런데, 이 문제는 <strong>0.15초</strong>의 시간제한이 걸려있다. <br />
그렇기에 단순한 반복문으로 접근하게 되면 시간초과가 발생한다. <br /></p>

<h4 id="시간초과-해결">시간초과 해결</h4>
<p>주어진 예제대로 A를 2, B를 1, V를 5라고 해보자.</p>
<ul>
  <li>1일차: (A-B) = (2-1) = 1</li>
  <li>2일차: (A-B)+(A-B) = (2-1)+(2-1) = 2</li>
  <li>3일차: (A-B)+(A-B)+(A-B) = (2-1)+(2-1)+(2-1) = 3</li>
  <li>4일차: (A-B)+(A-B)+(A-B)+A = (2-1)+(2-1)+(2-1)+2 = 5</li>
</ul>

<p>위 식대로 정상에 도달하게 되면 미끄러지지 않기 때문에 4일차 낮에 목표 V에 도달할 수 있다. <br />
그렇다면 일자별로 낮 연산만 수행하여 V에 도달할 떄의 날짜(N)는지를 검증할 수 있다.</p>
<ul>
  <li>D일차 낮: (A-B) * (D-1) + A</li>
  <li>V = AD - A - BD + B + A</li>
  <li>V = D(A-B) + B</li>
  <li>V - B = D(A-B)</li>
  <li><strong>D = (V-B) / (A-B)</strong></li>
</ul>

<p>위 식대로 예제에 적용해보자.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre>// A=2, B=1, V=5
D = (5-1) / (2-1) = 4/1 = 4
</pre></td></tr></tbody></table></code></pre></div></div>
<p>위와 같이 V에 도달하기까지 걸리는 일수를 구할 수 있다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre>// A=3, B=1, V=8
D = (8-1) / (3-1) = 7/2 = 3.5
//소수점 올림하여 D는 4
</pre></td></tr></tbody></table></code></pre></div></div>
<p>D값이 소수점이 나왔을 경우에는 <strong>하루를 더 이동해야 한다는 것(소수점만큼 더 이동해야 한다는 것)</strong>이므로 소수점 올림을 해주어야 한다.</p>

<p>이제 위 내용들을 통해 정리된 식을 코드로 작성해보자.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="kt">int</span> <span class="no">D</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="nc">Math</span><span class="o">.</span><span class="na">ceil</span><span class="o">((</span><span class="kt">double</span><span class="o">)(</span><span class="no">V</span><span class="o">-</span><span class="no">B</span><span class="o">)</span> <span class="o">/</span> <span class="o">(</span><span class="no">A</span><span class="o">-</span><span class="no">B</span><span class="o">));</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>Math.ceil() 메서드를 통해 소수점 올림을 해주었다.</p>

<p><br /></p>

<h3 id="작성코드">작성코드</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">java.io.*</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">IOException</span> <span class="o">{</span>
        <span class="nc">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>
        <span class="nc">BufferedWriter</span> <span class="n">bw</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedWriter</span><span class="o">(</span><span class="k">new</span> <span class="nc">OutputStreamWriter</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">));</span>
        <span class="nc">StringTokenizer</span> <span class="n">st</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
        
        <span class="kt">int</span> <span class="no">A</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
        <span class="kt">int</span> <span class="no">B</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
        <span class="kt">int</span> <span class="no">V</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>

        <span class="kt">int</span> <span class="no">D</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="nc">Math</span><span class="o">.</span><span class="na">ceil</span><span class="o">((</span><span class="kt">double</span><span class="o">)(</span><span class="no">V</span><span class="o">-</span><span class="no">B</span><span class="o">)</span> <span class="o">/</span> <span class="o">(</span><span class="no">A</span><span class="o">-</span><span class="no">B</span><span class="o">));</span>
        <span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">toString</span><span class="o">(</span><span class="n">day</span><span class="o">));</span>
        
        <span class="n">bw</span><span class="o">.</span><span class="na">flush</span><span class="o">();</span>
        <span class="n">bw</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
        <span class="n">br</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="회고">회고</h3>
<ul>
  <li>목표 V미터에 도달하기까지 걸리는 일수(D)를 구하기 위한 식을 낮과 밤을 모두 고려하려고 하다보니 복잡했지만, <strong>정상에 도달했다면 미끄러지지 않는다는 점</strong>을 통해 일자별 낮 연산만을 고려하여 식을 도출하였다.</li>
  <li>수학적 사고가 요구되어 수학 공부의 필요성을 느꼈다..</li>
</ul>]]></content><author><name>lango</name></author><category term="Java" /><category term="blog" /><category term="algorithm" /><category term="study" /><category term="java" /><category term="baekjoon" /><summary type="html"><![CDATA[달팽이는 올라가고 싶다]]></summary></entry><entry><title type="html">[Java] 프로그래머스(level-1) - 키패드 누르기</title><link href="http://localhost:4000/java/46-post/" rel="alternate" type="text/html" title="[Java] 프로그래머스(level-1) - 키패드 누르기" /><published>2022-09-05T00:00:00+09:00</published><updated>2022-09-05T00:00:00+09:00</updated><id>http://localhost:4000/java/46-post</id><content type="html" xml:base="http://localhost:4000/java/46-post/"><![CDATA[<p><br /></p>

<center><img src="/assets/images/programmers/20220905_01.png" width="700" /></center>
<p><br />
상세한 문제 내용은 <a href="https://school.programmers.co.kr/learn/courses/30/lessons/67256">여기</a>에서 확인 바랍니다.</p>

<p><strong>입출력 예시</strong></p>
<blockquote>
  <p>Input-1 <br />
<strong>numbers = [1, 3, 4, 5, 8, 2, 1, 4, 5, 9, 5]</strong> <br />
<strong>hand = “right”</strong> <br />
Output-1 <br />
<strong>“LRLLLRLLRRL”</strong></p>
</blockquote>

<blockquote>
  <p>Input-2 <br />
<strong>numbers = [7, 0, 8, 2, 8, 3, 1, 5, 7, 6, 2]</strong> <br />
<strong>hand = “left”</strong> <br />
Output-2 <br />
<strong>“LRLLRRLLLRR”</strong></p>
</blockquote>

<blockquote>
  <p>Input-3 <br />
<strong>numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 0]</strong> <br />
<strong>hand = “right”</strong> <br />
Output-3 <br />
<strong>“LLRLLRLLRL”</strong></p>
</blockquote>

<p><br /></p>

<h3 id="문제-풀이">문제 풀이</h3>
<p>이 문제는 키패드를 누를 때 현재 <strong>누른 번호와 누를 번호와의 거리</strong>를 구하는 것이 핵심이다. <br /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="rouge-code"><pre>1 2 3
4 5 6
7 8 9
* 0 #
</pre></td></tr></tbody></table></code></pre></div></div>
<p>누를 키패드의 <strong>*, 0, #을 10, 11, 12</strong>로 두어야 거리를 구할 수 있다.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="rouge-code"><pre>1  2  3
4  5  6
7  8  9
10 11 12
</pre></td></tr></tbody></table></code></pre></div></div>

<p>먼저 왼손은 *, 오른손은 #에서 시작한다고 하니, <strong>왼손의 초기값은 10, 오른손의 초기값은 12</strong>로 초기화하자.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="kt">int</span> <span class="no">L</span> <span class="o">=</span> <span class="mi">10</span><span class="o">;</span>
<span class="kt">int</span> <span class="no">R</span> <span class="o">=</span> <span class="mi">12</span><span class="o">;</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>1,4,7은 왼손으로 누르고, 3,6,9 키패드는 오른손으로 누른다. <br />
2,5,8,0 키패드는 더 가까운 손가락으로 누르기 때문에 전에 누른 번호와 누를 번호와 가까운 손가락으로 누를 수 있다. <br />
0 키패드의 경우 앞에서 말한대로 거리를 구해야 하기에 11로 변경해야 한다.</p>

<h4 id="누른-번호와-누를-번호와의-거리">누른 번호와 누를 번호와의 거리</h4>
<p>그렇다면 누른 번호와 누를 번호와의 거리는 어떻게 구할까? <br /></p>
<ul>
  <li>((현재번호 - 누를번호)/3) + ((현재번호 - 누를번호)%3)
예를 들어 왼손이 4, 오른손이 2이고, 누를번호가 5일 경우를 들어보자.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="rouge-code"><pre>L = 4, R = 2, number = 5

왼손 거리(leftDistance) = ((4-5)/3)+((4-5)%3) = 1
오른손 거리(RightDistance) = ((2-5)/3)+((2-5)%3) = 1
</pre></td></tr></tbody></table></code></pre></div></div>
<p>왼손 거리와 오른손 거리가 같을 경우엔 왼손잡이냐 오른손잡이에 따라 손가락을 누른다. <br />
거리 구하는 식을 코드로 작성하면 아래와 같다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="kt">int</span> <span class="n">leftDistance</span> <span class="o">=</span> <span class="nc">Math</span><span class="o">.</span><span class="na">abs</span><span class="o">(((</span><span class="no">L</span><span class="o">-</span><span class="n">num</span><span class="o">)/</span><span class="mi">3</span><span class="o">)+((</span><span class="no">L</span><span class="o">-</span><span class="n">num</span><span class="o">)%</span><span class="mi">3</span><span class="o">));</span>
<span class="kt">int</span> <span class="n">rightDistance</span> <span class="o">=</span> <span class="nc">Math</span><span class="o">.</span><span class="na">abs</span><span class="o">(((</span><span class="no">R</span><span class="o">-</span><span class="n">num</span><span class="o">)/</span><span class="mi">3</span><span class="o">)+((</span><span class="no">R</span><span class="o">-</span><span class="n">num</span><span class="o">)%</span><span class="mi">3</span><span class="o">));</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>거리 구하는 방법을 알아냈으니, 누를 번호와의 거리가 더 가까운(작은) 손의 손가락으로 누르면 된다. <br />
위 과정을 코드로 작성해보자.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
</pre></td><td class="rouge-code"><pre><span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">num</span> <span class="o">:</span> <span class="n">numbers</span><span class="o">)</span> <span class="o">{</span>
    <span class="k">if</span><span class="o">(</span><span class="n">num</span><span class="o">==</span><span class="mi">0</span><span class="o">)</span> <span class="n">num</span> <span class="o">=</span> <span class="mi">11</span><span class="o">;</span> 
    
    <span class="k">if</span><span class="o">(</span><span class="n">num</span><span class="o">==</span><span class="mi">1</span> <span class="o">||</span> <span class="n">num</span><span class="o">==</span><span class="mi">4</span> <span class="o">||</span> <span class="n">num</span><span class="o">==</span><span class="mi">7</span><span class="o">)</span> <span class="o">{</span> <span class="c1">// 1,4,7 키패드는 왼손으로 누른다.</span>
        <span class="n">answer</span> <span class="o">+=</span> <span class="s">"L"</span><span class="o">;</span>
        <span class="no">L</span><span class="o">=</span><span class="n">num</span><span class="o">;</span>
    <span class="o">}</span>
    <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">num</span><span class="o">==</span><span class="mi">3</span> <span class="o">||</span> <span class="n">num</span><span class="o">==</span><span class="mi">6</span> <span class="o">||</span> <span class="n">num</span><span class="o">==</span><span class="mi">9</span><span class="o">)</span> <span class="o">{</span> <span class="c1">// 3,6,9 키패드는 오른손으로 누른다.</span>
        <span class="n">answer</span> <span class="o">+=</span> <span class="s">"R"</span><span class="o">;</span>
        <span class="no">R</span><span class="o">=</span><span class="n">num</span><span class="o">;</span>
    <span class="o">}</span>
    <span class="k">else</span> <span class="o">{</span> <span class="c1">// 2,5,8,0(11) 키패드를 누를 경우</span>
        <span class="kt">int</span> <span class="n">leftDistance</span> <span class="o">=</span> <span class="nc">Math</span><span class="o">.</span><span class="na">abs</span><span class="o">(((</span><span class="no">L</span><span class="o">-</span><span class="n">num</span><span class="o">)/</span><span class="mi">3</span><span class="o">)+((</span><span class="no">L</span><span class="o">-</span><span class="n">num</span><span class="o">)%</span><span class="mi">3</span><span class="o">));</span>
        <span class="kt">int</span> <span class="n">rightDistance</span> <span class="o">=</span> <span class="nc">Math</span><span class="o">.</span><span class="na">abs</span><span class="o">(((</span><span class="no">R</span><span class="o">-</span><span class="n">num</span><span class="o">)/</span><span class="mi">3</span><span class="o">)+((</span><span class="no">R</span><span class="o">-</span><span class="n">num</span><span class="o">)%</span><span class="mi">3</span><span class="o">));</span>
        <span class="k">if</span><span class="o">(</span><span class="n">leftDistance</span><span class="o">&gt;</span><span class="n">rightDistance</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">answer</span> <span class="o">+=</span> <span class="s">"R"</span><span class="o">;</span>
            <span class="no">R</span><span class="o">=</span><span class="n">num</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">rightDistance</span><span class="o">&gt;</span><span class="n">leftDistance</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">answer</span> <span class="o">+=</span> <span class="s">"L"</span><span class="o">;</span> 
            <span class="no">L</span><span class="o">=</span><span class="n">num</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">leftDistance</span><span class="o">==</span><span class="n">rightDistance</span> <span class="o">&amp;&amp;</span> <span class="n">hand</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"right"</span><span class="o">))</span> <span class="o">{</span>
            <span class="n">answer</span> <span class="o">+=</span> <span class="s">"R"</span><span class="o">;</span> 
            <span class="no">R</span><span class="o">=</span><span class="n">num</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">leftDistance</span><span class="o">==</span><span class="n">rightDistance</span> <span class="o">&amp;&amp;</span> <span class="n">hand</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"left"</span><span class="o">))</span> <span class="o">{</span>
            <span class="n">answer</span> <span class="o">+=</span> <span class="s">"L"</span><span class="o">;</span> 
            <span class="no">L</span><span class="o">=</span><span class="n">num</span><span class="o">;</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><br /></p>

<h3 id="작성-코드">작성 코드</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
</pre></td><td class="rouge-code"><pre><span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span><span class="o">[]</span> <span class="n">numbers</span> <span class="o">=</span> <span class="o">{</span><span class="mi">1</span><span class="o">,</span><span class="mi">3</span><span class="o">,</span><span class="mi">4</span><span class="o">,</span><span class="mi">5</span><span class="o">,</span><span class="mi">8</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="mi">4</span><span class="o">,</span><span class="mi">5</span><span class="o">,</span><span class="mi">5</span><span class="o">,</span><span class="mi">9</span><span class="o">,</span><span class="mi">5</span><span class="o">};</span>
        <span class="c1">// int[] numbers = {1,2,3,4,5,6,7,8,9,0};</span>
        <span class="c1">// int[] numbers = {7, 0, 8, 2, 8, 3, 1, 5, 7, 6, 2};</span>
        <span class="c1">// int[] numbers = {1, 2, 3, 3, 4, 4, 5, 5, 8, 8};</span>
        <span class="nc">String</span> <span class="n">hand</span> <span class="o">=</span> <span class="s">"right"</span><span class="o">;</span>

        <span class="kt">long</span> <span class="n">start</span> <span class="o">=</span> <span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        <span class="n">solution</span><span class="o">(</span><span class="n">numbers</span><span class="o">,</span> <span class="n">hand</span><span class="o">);</span>
        <span class="kt">long</span> <span class="n">end</span> <span class="o">=</span> <span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"\n수행시간 = "</span> <span class="o">+</span> <span class="o">(</span><span class="n">end</span><span class="o">-</span><span class="n">start</span><span class="o">));</span>
    <span class="o">}</span>
    
    <span class="kd">public</span> <span class="kd">static</span> <span class="nc">String</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">numbers</span><span class="o">,</span> <span class="nc">String</span> <span class="n">hand</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">String</span> <span class="n">answer</span> <span class="o">=</span> <span class="s">""</span><span class="o">;</span>
        <span class="kt">int</span> <span class="no">L</span> <span class="o">=</span> <span class="mi">10</span><span class="o">;</span>
        <span class="kt">int</span> <span class="no">R</span> <span class="o">=</span> <span class="mi">12</span><span class="o">;</span>
        
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">num</span> <span class="o">:</span> <span class="n">numbers</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="n">num</span><span class="o">==</span><span class="mi">0</span><span class="o">)</span> <span class="n">num</span> <span class="o">=</span> <span class="mi">11</span><span class="o">;</span> 
            <span class="k">if</span><span class="o">(</span><span class="n">num</span><span class="o">==</span><span class="mi">1</span> <span class="o">||</span> <span class="n">num</span><span class="o">==</span><span class="mi">4</span> <span class="o">||</span> <span class="n">num</span><span class="o">==</span><span class="mi">7</span><span class="o">)</span> <span class="o">{</span> <span class="c1">// 1,4,7</span>
                <span class="n">answer</span> <span class="o">+=</span> <span class="s">"L"</span><span class="o">;</span>
                <span class="no">L</span><span class="o">=</span><span class="n">num</span><span class="o">;</span>
            <span class="o">}</span>
            <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">num</span><span class="o">==</span><span class="mi">3</span> <span class="o">||</span> <span class="n">num</span><span class="o">==</span><span class="mi">6</span> <span class="o">||</span> <span class="n">num</span><span class="o">==</span><span class="mi">9</span><span class="o">)</span> <span class="o">{</span> <span class="c1">// 3,6,9</span>
                <span class="n">answer</span> <span class="o">+=</span> <span class="s">"R"</span><span class="o">;</span>
                <span class="no">R</span><span class="o">=</span><span class="n">num</span><span class="o">;</span>
            <span class="o">}</span>
            <span class="k">else</span> <span class="o">{</span> <span class="c1">// 2,5,8,0(11)</span>
                <span class="kt">int</span> <span class="n">leftDistance</span> <span class="o">=</span> <span class="nc">Math</span><span class="o">.</span><span class="na">abs</span><span class="o">(((</span><span class="no">L</span><span class="o">-</span><span class="n">num</span><span class="o">)/</span><span class="mi">3</span><span class="o">)+((</span><span class="no">L</span><span class="o">-</span><span class="n">num</span><span class="o">)%</span><span class="mi">3</span><span class="o">));</span>
                <span class="kt">int</span> <span class="n">rightDistance</span> <span class="o">=</span> <span class="nc">Math</span><span class="o">.</span><span class="na">abs</span><span class="o">(((</span><span class="no">R</span><span class="o">-</span><span class="n">num</span><span class="o">)/</span><span class="mi">3</span><span class="o">)+((</span><span class="no">R</span><span class="o">-</span><span class="n">num</span><span class="o">)%</span><span class="mi">3</span><span class="o">));</span>
                <span class="k">if</span><span class="o">(</span><span class="n">leftDistance</span><span class="o">&gt;</span><span class="n">rightDistance</span><span class="o">)</span> <span class="o">{</span>
                    <span class="n">answer</span> <span class="o">+=</span> <span class="s">"R"</span><span class="o">;</span>
                    <span class="no">R</span><span class="o">=</span><span class="n">num</span><span class="o">;</span>
                <span class="o">}</span>
                <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">rightDistance</span><span class="o">&gt;</span><span class="n">leftDistance</span><span class="o">)</span> <span class="o">{</span>
                    <span class="n">answer</span> <span class="o">+=</span> <span class="s">"L"</span><span class="o">;</span> 
                    <span class="no">L</span><span class="o">=</span><span class="n">num</span><span class="o">;</span>
                <span class="o">}</span>
                <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">leftDistance</span><span class="o">==</span><span class="n">rightDistance</span> <span class="o">&amp;&amp;</span> <span class="n">hand</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"right"</span><span class="o">))</span> <span class="o">{</span>
                    <span class="n">answer</span> <span class="o">+=</span> <span class="s">"R"</span><span class="o">;</span> 
                    <span class="no">R</span><span class="o">=</span><span class="n">num</span><span class="o">;</span>
                <span class="o">}</span>
                <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">leftDistance</span><span class="o">==</span><span class="n">rightDistance</span> <span class="o">&amp;&amp;</span> <span class="n">hand</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"left"</span><span class="o">))</span> <span class="o">{</span>
                    <span class="n">answer</span> <span class="o">+=</span> <span class="s">"L"</span><span class="o">;</span> 
                    <span class="no">L</span><span class="o">=</span><span class="n">num</span><span class="o">;</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="회고">회고</h3>
<ul>
  <li>키패드의 번호들이 3으로 나눈 나머지가 각각 다르다는 아이디어를 통해 거리를 구하는 식을 생각해내는게 생각보다 어려웠다.</li>
  <li>왼손가락과 오른손가락의 초기값을 헷갈려 시간을 더 오래 쏟았다. 문제를 성급하게 읽어 넘어가지 않도록 해야겠다.</li>
</ul>]]></content><author><name>lango</name></author><category term="Java" /><category term="blog" /><category term="algorithm" /><category term="study" /><category term="java" /><category term="programmers" /><summary type="html"><![CDATA[level 1 - 키패드 누르기]]></summary></entry><entry><title type="html">[Java] 프로그래머스(level-1) - 크레인 인형뽑기 게임</title><link href="http://localhost:4000/java/45-post/" rel="alternate" type="text/html" title="[Java] 프로그래머스(level-1) - 크레인 인형뽑기 게임" /><published>2022-09-02T00:00:00+09:00</published><updated>2022-09-02T00:00:00+09:00</updated><id>http://localhost:4000/java/45-post</id><content type="html" xml:base="http://localhost:4000/java/45-post/"><![CDATA[<p><br /></p>

<center><img src="/assets/images/programmers/20220902_01.png" width="700" /></center>
<p><br />
상세한 문제 내용은 <a href="https://school.programmers.co.kr/learn/courses/30/lessons/64061">여기</a>에서 확인 바랍니다.</p>

<p><strong>입출력 예시</strong></p>
<blockquote>
  <p>Input <br />
<strong>board = [[0,0,0,0,0],[0,0,1,0,3],[0,2,5,0,1],[4,2,4,4,2],[3,5,1,3,1]]</strong> <br />
<strong>moves = [1,5,3,5,1,2,1,4]</strong> <br />
Output <br />
<strong>4</strong></p>
</blockquote>

<p><br /></p>

<h3 id="문제-풀이">문제 풀이</h3>
<p>문제 풀이를 위해 다음과 같은 아이디어를 도출하였다.</p>

<ul>
  <li>주어진 크레인 2차원 배열을 그대로 쓰는 것보단 인형뽑기를 하기 쉽도록 <strong>2차원 배열을 회전</strong>하여 활용하자.</li>
  <li>인형뽑기하여 담는 바구니는 <strong>스택을 활용</strong>하여 구현하자.</li>
</ul>

<h4 id="2차원-배열-회전하기">2차원 배열 회전하기</h4>
<p>먼저 주어진 board 2차원 배열을 크레인에서 뽑기 쉽게 회전해야 한다.<br />
내가 생각한 회전 방법은 우측으로 90도를 회전하고 뒤집는 것이다.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
</pre></td><td class="rouge-code"><pre>// 주어진 board 2차원 배열
0 0 0 0 0 
0 0 1 0 3
0 2 5 0 1
4 2 4 4 2
3 5 1 3 1

// 우측으로 90도 회전 후
0 3 1 2 1
0 0 0 4 3
0 1 5 4 1
0 0 2 2 5
0 0 0 4 3

// 앞, 뒤 뒤집기
0 0 0 4 3
0 0 2 2 5
0 1 5 4 1
0 0 0 4 3
0 3 1 2 1
</pre></td></tr></tbody></table></code></pre></div></div>

<p>위 내용을 코드로 작성해보자.</p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="rouge-code"><pre><span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">board</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
    <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">j</span><span class="o">&lt;</span><span class="n">board</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">length</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
        <span class="n">new_board</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]</span> <span class="o">=</span> <span class="n">board</span><span class="o">[</span><span class="n">j</span><span class="o">][</span><span class="n">board</span><span class="o">.</span><span class="na">length</span><span class="o">-</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">];</span> <span class="c1">// 우측으로 90도 회전</span>
    <span class="o">}</span>
<span class="o">}</span>
<span class="nc">Collections</span><span class="o">.</span><span class="na">reverse</span><span class="o">(</span><span class="nc">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="n">new_board</span><span class="o">));</span> <span class="c1">// 2차원 배열의 순서 뒤집기</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><br /></p>

<p>작성하고 나서 생각해보니, 우측으로 90도 회전하고 뒤집지 않고 한번에 왼쪽으로 90도 회원하는 코드를 작성하고 싶어 다시 고쳤다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="rouge-code"><pre><span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">board</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
    <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">j</span><span class="o">&lt;</span><span class="n">board</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">length</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
        <span class="n">new_board</span><span class="o">[</span><span class="n">board</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">length</span><span class="o">-</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">][</span><span class="n">j</span><span class="o">]</span> <span class="o">=</span> <span class="n">board</span><span class="o">[</span><span class="n">j</span><span class="o">][</span><span class="n">board</span><span class="o">.</span><span class="na">length</span><span class="o">-</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">];</span> <span class="c1">// 우측으로 90도 회전</span>
    <span class="o">}</span>
<span class="o">}</span> 
</pre></td></tr></tbody></table></code></pre></div></div>
<p>위 코드와 같이 우측으로 90도 뒤집은 상태에서 인덱스를 뒤집어서 집어넣을 수 있도록 하니, 깔끔하게 해결되었다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
</pre></td><td class="rouge-code"><pre>0 0 0 0 0 
0 0 1 0 3
0 2 5 0 1
4 2 4 4 2
3 5 1 3 1

// 왼쪽으로 90도 회전
0 0 0 4 3
0 0 2 2 5
0 1 5 4 1
0 0 0 4 3
0 3 1 2 1
</pre></td></tr></tbody></table></code></pre></div></div>
<p><br /></p>

<h4 id="인형뽑기-게임-구현하기">인형뽑기 게임 구현하기</h4>
<p>이제 인형뽑기 할 수 있는 크레인 배열을 구했으니 실제로 인형뽑기하여 바구니에 쌓도록 해야하는데, <br />
크레인 작동위치 배열 moves 만큼 반복하며 moves에 담긴 원소별로 크레인 위치마다 인형을 뽑아야 한다.</p>

<ol>
  <li>3중 반복문을 활용해 크레인 작동 위치(moves)별로 반복하며 크레인 배열(new_board)에서 0이 아닌 인형을 뽑는다.</li>
  <li>뽑은 인형의 위치를 0으로 변경한다.</li>
  <li>인형을 뽑아 바구니(스택)에 쌓는다.</li>
  <li><strong>뽑은 인형과 바구니에 맨 위 인형과 같다면 연속으로 인형을 뽑은 것</strong>이기에 터뜨린다.(스택에서 맨 위 인형 제거)</li>
</ol>

<p>위 로직을 코드로 작성해보자.</p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
</pre></td><td class="rouge-code"><pre><span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">moves</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
    <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">j</span><span class="o">&lt;</span><span class="n">new_board</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">k</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">k</span><span class="o">&lt;</span><span class="n">new_board</span><span class="o">[</span><span class="n">j</span><span class="o">].</span><span class="na">length</span><span class="o">;</span> <span class="n">k</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">if</span><span class="o">((</span><span class="n">moves</span><span class="o">[</span><span class="n">i</span><span class="o">]-</span><span class="mi">1</span><span class="o">)</span> <span class="o">==</span> <span class="n">j</span> <span class="o">&amp;&amp;</span> <span class="n">new_board</span><span class="o">[</span><span class="n">j</span><span class="o">][</span><span class="n">k</span><span class="o">]</span> <span class="o">!=</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
                <span class="k">if</span><span class="o">(!</span><span class="n">result</span><span class="o">.</span><span class="na">empty</span><span class="o">()</span> <span class="o">&amp;&amp;</span> <span class="n">result</span><span class="o">.</span><span class="na">peek</span><span class="o">()==</span><span class="n">new_board</span><span class="o">[</span><span class="n">j</span><span class="o">][</span><span class="n">k</span><span class="o">])</span> <span class="o">{</span>
                    <span class="n">result</span><span class="o">.</span><span class="na">pop</span><span class="o">();</span>
                    <span class="n">answer</span> <span class="o">+=</span> <span class="mi">2</span><span class="o">;</span>
                <span class="o">}</span>
                <span class="k">else</span> <span class="n">result</span><span class="o">.</span><span class="na">push</span><span class="o">(</span><span class="n">new_board</span><span class="o">[</span><span class="n">j</span><span class="o">][</span><span class="n">k</span><span class="o">]);</span>
                <span class="n">new_board</span><span class="o">[</span><span class="n">j</span><span class="o">][</span><span class="n">k</span><span class="o">]</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
                <span class="k">break</span><span class="o">;</span>
            <span class="o">}</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>조금 복잡해보이지만 간단히 정리하자면, <br />
두번째 인형을 뽑을 때부터 연속된 인형을 뽑았을 경우 스택에 쌓지 않고 제거하여 연속으로 뽑은 인형을 검증할 수 있다.</p>

<p><br /></p>

<h3 id="작성-코드">작성 코드</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        
        <span class="kt">int</span><span class="o">[][]</span> <span class="n">board</span> <span class="o">=</span> <span class="o">{{</span><span class="mi">0</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="mi">0</span><span class="o">},{</span><span class="mi">0</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="mi">3</span><span class="o">},{</span><span class="mi">0</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="mi">5</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="mi">1</span><span class="o">},{</span><span class="mi">4</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="mi">4</span><span class="o">,</span><span class="mi">4</span><span class="o">,</span><span class="mi">2</span><span class="o">},{</span><span class="mi">3</span><span class="o">,</span><span class="mi">5</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="mi">3</span><span class="o">,</span><span class="mi">1</span><span class="o">}};</span>
        <span class="kt">int</span><span class="o">[]</span> <span class="n">moves</span> <span class="o">=</span> <span class="o">{</span><span class="mi">1</span><span class="o">,</span><span class="mi">5</span><span class="o">,</span><span class="mi">3</span><span class="o">,</span><span class="mi">5</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="mi">4</span><span class="o">};</span>
        <span class="c1">// int[][] board = {{0,0,0,0,0},{0,0,0,1,3},{3,1,5,4,2},{1,2,3,4,5},{3,2,1,4,5}};</span>
        <span class="c1">// int[] moves = {1,5,4,2,3};</span>
        
        <span class="kt">long</span> <span class="n">start</span> <span class="o">=</span> <span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        <span class="n">solution</span><span class="o">(</span><span class="n">board</span><span class="o">,</span> <span class="n">moves</span><span class="o">);</span>
        <span class="kt">long</span> <span class="n">end</span> <span class="o">=</span> <span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"\n수행시간 = "</span> <span class="o">+</span> <span class="o">(</span><span class="n">end</span><span class="o">-</span><span class="n">start</span><span class="o">));</span>
    <span class="o">}</span>
    
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span><span class="o">[][]</span> <span class="n">board</span><span class="o">,</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">moves</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="kt">int</span><span class="o">[][]</span> <span class="n">new_board</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">board</span><span class="o">.</span><span class="na">length</span><span class="o">][</span><span class="n">board</span><span class="o">.</span><span class="na">length</span><span class="o">];</span>
        <span class="nc">Stack</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">result</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Stack</span><span class="o">&lt;&gt;();</span>
        
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">board</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">j</span><span class="o">&lt;</span><span class="n">board</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">length</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
                <span class="n">new_board</span><span class="o">[</span><span class="n">board</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">length</span><span class="o">-</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">][</span><span class="n">j</span><span class="o">]</span> <span class="o">=</span> <span class="n">board</span><span class="o">[</span><span class="n">j</span><span class="o">][</span><span class="n">board</span><span class="o">.</span><span class="na">length</span><span class="o">-</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">];</span> <span class="c1">// 왼쪽으로 90도 회전 및 상,하 뒤집기</span>
            <span class="o">}</span>
        <span class="o">}</span> 

        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">moves</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">j</span><span class="o">&lt;</span><span class="n">new_board</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
                <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">k</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">k</span><span class="o">&lt;</span><span class="n">new_board</span><span class="o">[</span><span class="n">j</span><span class="o">].</span><span class="na">length</span><span class="o">;</span> <span class="n">k</span><span class="o">++)</span> <span class="o">{</span>
                    <span class="k">if</span><span class="o">((</span><span class="n">moves</span><span class="o">[</span><span class="n">i</span><span class="o">]-</span><span class="mi">1</span><span class="o">)</span> <span class="o">==</span> <span class="n">j</span> <span class="o">&amp;&amp;</span> <span class="n">new_board</span><span class="o">[</span><span class="n">j</span><span class="o">][</span><span class="n">k</span><span class="o">]</span> <span class="o">!=</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
                        <span class="k">if</span><span class="o">(!</span><span class="n">result</span><span class="o">.</span><span class="na">empty</span><span class="o">()</span> <span class="o">&amp;&amp;</span> <span class="n">result</span><span class="o">.</span><span class="na">peek</span><span class="o">()==</span><span class="n">new_board</span><span class="o">[</span><span class="n">j</span><span class="o">][</span><span class="n">k</span><span class="o">])</span> <span class="o">{</span>
                            <span class="n">result</span><span class="o">.</span><span class="na">pop</span><span class="o">();</span>
                            <span class="n">answer</span> <span class="o">+=</span> <span class="mi">2</span><span class="o">;</span>
                        <span class="o">}</span>
                        <span class="k">else</span> <span class="n">result</span><span class="o">.</span><span class="na">push</span><span class="o">(</span><span class="n">new_board</span><span class="o">[</span><span class="n">j</span><span class="o">][</span><span class="n">k</span><span class="o">]);</span>
                        <span class="n">new_board</span><span class="o">[</span><span class="n">j</span><span class="o">][</span><span class="n">k</span><span class="o">]</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
                        <span class="k">break</span><span class="o">;</span>
                    <span class="o">}</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="회고">회고</h3>
<ul>
  <li>2차원 배열을 회전하는 과정에서 많이 헷갈리는 부분이 많았다. 배열 회전이나 뒤집기 활용도 꾸준히 복습해야 겠다.</li>
  <li>스택을 본격적으로 활용하며 특정 순서별로 제거해야 했지만, 짝 맞추는 것으로 헷갈려 인형을 터뜨리는 로직 구현에 오랜 시간이 걸렸다..ㅠ</li>
</ul>]]></content><author><name>lango</name></author><category term="Java" /><category term="blog" /><category term="algorithm" /><category term="study" /><category term="java" /><category term="programmers" /><summary type="html"><![CDATA[level 1 - 크레인 인형뽑기 게임]]></summary></entry></feed>