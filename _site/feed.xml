<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2022-09-23T16:51:12+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">lango’s DevLog</title><subtitle>developer</subtitle><author><name>lango</name></author><entry><title type="html">[Java] 프로그래머스(level-2) - 캐시</title><link href="http://localhost:4000/java/81-post/" rel="alternate" type="text/html" title="[Java] 프로그래머스(level-2) - 캐시" /><published>2022-09-23T00:00:00+09:00</published><updated>2022-09-23T00:00:00+09:00</updated><id>http://localhost:4000/java/81-post</id><content type="html" xml:base="http://localhost:4000/java/81-post/"><![CDATA[<p><br /></p>
<center><img src="/assets/images/programmers/20220923_01.png" width="700" /></center>
<p><br /></p>

<p><strong>입출력 예시</strong></p>
<blockquote>
  <p>Input-1 <br />
<strong>cacheSize=3, cities=[“Jeju”, “Pangyo”, “Seoul”, “NewYork”, “LA”, “Jeju”, “Pangyo”, “Seoul”, “NewYork”, “LA”]</strong> <br />
Output-1 <br />
<strong>50</strong></p>
</blockquote>

<blockquote>
  <p>Input-2 <br />
<strong>cacheSize=3, cities=[“Jeju”, “Pangyo”, “Seoul”, “Jeju”, “Pangyo”, “Seoul”, “Jeju”, “Pangyo”, “Seoul”]</strong> <br />
Output-2 <br />
<strong>21</strong></p>
</blockquote>

<blockquote>
  <p>Input-3 <br />
<strong>cacheSize=0, cities=[“Jeju”, “Pangyo”, “Seoul”, “NewYork”, “LA”]</strong> <br />
Output-3 <br />
<strong>25</strong></p>
</blockquote>

<p><br /></p>

<h3 id="문제-풀이">문제 풀이</h3>
<hr />
<p>문제를 풀기에 앞서 캐시와 캐시 교체 정책에 대해서 알아보자. <br /></p>

<blockquote>
  <p><strong>캐시</strong>란? <br />
캐시는 데이터나 값을 <strong>미리 복사해 놓는 임시 장소</strong>이다. 캐시에 데이터를 미리 복사해 놓으면, 계산이나 접근 시간 없이 더 빠른 속도로 데이터에 접근할 수 있다.</p>
</blockquote>

<blockquote>
  <p><strong>캐시 교체 정책</strong> <br />
캐시에 모든 데이터를 다 담아둘 수 없기에, 캐시크기는 제한되고 새로운 캐시로 변경되어야 하는데, <br />
캐시 교체 정책을 통해 어떤 데이터를 삭제하고, 새로운 데이터를 캐시로 저장할지를 캐시 교체 정책 알고리즘을 통해 결정할 수 있다. <br /></p>
</blockquote>

<p><strong>캐시 교체 정책 알고리즘의 종류</strong></p>
<ol>
  <li>FIFO(First in First Out)
    <ul>
      <li>가장 먼저 들어간 캐시를 교체한다.</li>
    </ul>
  </li>
  <li>LFU(Least Frequently Used)
    <ul>
      <li>사용 횟수가 가장 적은 캐시를 교체한다.</li>
    </ul>
  </li>
  <li><strong>LRU(Least Recently Used)</strong>
    <ul>
      <li>가장 오랫동안 사용되지 않은 것 교체한다.</li>
    </ul>
  </li>
</ol>

<p>이 문제에서는 캐시 교체 정책중 <strong>LRU 알고리즘</strong>을 활용하여 문제를 풀어야 한다.</p>

<h4 id="lruleast-recently-used">LRU(Least Recently Used)</h4>
<p>캐시 공간이 부족할 때, <strong>가장 오랫동안 사용하지 않은 데이터를 제거하고, 새로운 캐시를 부여</strong>하는 형식으로 동작한다.</p>

<p>예를 들어 캐시 공간이 3이라고 할 때, 1,2,3,2 순으로 데이터가 들어온다고 하자. <br />
1,2,3 까지는 캐시가 등록이 되는데, 마지막 2가 들어올 때, 2를 사용한 기록이 있기에 2를 최근 캐시로 등록하면 된다. (cache=[1,3,2])</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="rouge-code"><pre>1. cache size=3, 1 -&gt; 2 -&gt; 3 순차 호출
    [tail] 1-2-3 [head]
2. 2 캐시 등록: 2를 head로 이동.
    [tail] 1-3-2 [head]
3. 4 캐시 등록: LRU는 1이므로 1 제거.
    [tail] 3-2-4 [head]
</pre></td></tr></tbody></table></code></pre></div></div>
<p><br /></p>

<h4 id="아이디어-도출">아이디어 도출</h4>
<p>캐시와 캐시 교체 정책중 하나인 LRU에 대해서 알았으니, 문제를 풀어보자. <br />
문제 요구사을 살펴보고 생각해낸 아이디어는 다음과 같다.</p>
<ul>
  <li>cache <strong>hit일 경우는 최근 캐시에 요청한 데이터가 존재할 경우</strong>이고 <strong>cache miss는 최근 캐시에 요청한 데이터가 존재하지 않을 경우</strong>이다. <br />
    <ul>
      <li>cache hit일 때는 1, cache miss일 때는 5씩을 증가시키면 된다.</li>
    </ul>
  </li>
  <li>cache size가 0일 때는 어떤 데이터가 들어와도 5의 실행시간이 걸린다.</li>
  <li>cache의 공간이 차면 LRU 대로 가장 오래된 tail 요소부터 제거하고 새로운 데이터를 저장한다.</li>
</ul>

<p><br /></p>

<p>이제 코드를 작성해보자.</p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="nc">Queue</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">qu</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">LinkedList</span><span class="o">&lt;&gt;();</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>먼저 캐시로 사용할 Queue를 LinkedList로 초기화한다.</p>

<p><br /></p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
</pre></td><td class="rouge-code"><pre><span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">cities</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
    <span class="nc">String</span> <span class="n">city</span> <span class="o">=</span> <span class="n">cities</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">toLowerCase</span><span class="o">();</span>
    <span class="k">if</span><span class="o">(</span><span class="n">cacheSize</span><span class="o">==</span><span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">answer</span><span class="o">+=</span><span class="mi">5</span><span class="o">;</span>
    <span class="o">}</span>
    <span class="k">else</span> <span class="o">{</span>
        <span class="k">if</span><span class="o">(</span><span class="n">qu</span><span class="o">.</span><span class="na">contains</span><span class="o">(</span><span class="n">city</span><span class="o">))</span> <span class="o">{</span>
            <span class="n">answer</span><span class="o">+=</span><span class="mi">1</span><span class="o">;</span>
            <span class="n">qu</span><span class="o">.</span><span class="na">remove</span><span class="o">(</span><span class="n">city</span><span class="o">);</span>
            <span class="n">qu</span><span class="o">.</span><span class="na">offer</span><span class="o">(</span><span class="n">city</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="k">else</span> <span class="o">{</span>
            <span class="n">answer</span><span class="o">+=</span><span class="mi">5</span><span class="o">;</span>
            <span class="k">if</span><span class="o">(</span><span class="n">qu</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">==</span> <span class="n">cacheSize</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">qu</span><span class="o">.</span><span class="na">poll</span><span class="o">();</span>
                <span class="n">qu</span><span class="o">.</span><span class="na">offer</span><span class="o">(</span><span class="n">city</span><span class="o">);</span>
            <span class="o">}</span>
            <span class="k">else</span> <span class="o">{</span>
                <span class="n">qu</span><span class="o">.</span><span class="na">offer</span><span class="o">(</span><span class="n">city</span><span class="o">);</span>
            <span class="o">}</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>캐시 사이즈가 0이라면, cities에 어떤 데이터가 있더라도 데이터마다 5의 실행시간이 걸리기 때문에 가장 바깥 조건문으로 작성하였다. <br />
그리고 최근 캐시에 존재하는 데이터가 들어오면 해당 데이터를 head로 옮기고, 처음 들어오는 데이터라면 head에 바로 등록한다. <br />
이 때, 캐시의 공간이 부족하다면 tail을 제거하고 새로운 데이터를 head에 추가한다.</p>

<p><br /><br /></p>

<h3 id="작성-코드">작성 코드</h3>
<hr />
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">Scanner</span> <span class="n">sc</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Scanner</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
        <span class="kt">int</span> <span class="n">size</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
        <span class="nc">String</span><span class="o">[]</span> <span class="n">cities</span> <span class="o">=</span> <span class="o">{</span><span class="s">"Jeju"</span><span class="o">,</span> <span class="s">"Pangyo"</span><span class="o">,</span> <span class="s">"Seoul"</span><span class="o">,</span> <span class="s">"NewYork"</span><span class="o">,</span> <span class="s">"LA"</span><span class="o">,</span> <span class="s">"Jeju"</span><span class="o">,</span> <span class="s">"Pangyo"</span><span class="o">,</span> <span class="s">"Seoul"</span><span class="o">,</span> <span class="s">"NewYork"</span><span class="o">,</span> <span class="s">"LA"</span><span class="o">};</span>
        <span class="c1">// String[] cities = {"Jeju", "Pangyo", "Seoul", "Jeju", "Pangyo", "Seoul", "Jeju", "Pangyo", "Seoul"};</span>
        <span class="c1">// String[] cities = {"Jeju", "Pangyo", "Seoul", "NewYork", "LA", "SanFrancisco", "Seoul", "Rome", "Paris", "Jeju", "NewYork", "Rome"};</span>
        <span class="c1">// String[] cities = {"Jeju", "Pangyo", "Seoul", "NewYork", "LA", "SanFrancisco", "Seoul", "Rome", "Paris", "Jeju", "NewYork", "Rome"};</span>
        <span class="c1">// String[] cities = {"Jeju", "Pangyo", "NewYork", "newyork"};</span>
        <span class="c1">// String[] cities = {"Jeju", "Pangyo", "Seoul", "NewYork", "LA"};</span>
        <span class="c1">// String[] cities = {"1","2","3","2"};</span>
        <span class="c1">// String[] cities = {"1","1"};</span>

        <span class="kt">long</span> <span class="n">start</span> <span class="o">=</span> <span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        <span class="n">solution</span><span class="o">(</span><span class="n">size</span><span class="o">,</span> <span class="n">cities</span><span class="o">);</span>
        <span class="kt">long</span> <span class="n">end</span> <span class="o">=</span> <span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"\n수행시간 = "</span> <span class="o">+</span> <span class="o">(</span><span class="n">end</span><span class="o">-</span><span class="n">start</span><span class="o">));</span>
    <span class="o">}</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span> <span class="n">cacheSize</span><span class="o">,</span> <span class="nc">String</span><span class="o">[]</span> <span class="n">cities</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="nc">Queue</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">qu</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">LinkedList</span><span class="o">&lt;&gt;();</span>
        
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">cities</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="nc">String</span> <span class="n">city</span> <span class="o">=</span> <span class="n">cities</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">toLowerCase</span><span class="o">();</span>
            <span class="k">if</span><span class="o">(</span><span class="n">cacheSize</span><span class="o">==</span><span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">answer</span><span class="o">+=</span><span class="mi">5</span><span class="o">;</span>
            <span class="o">}</span>
            <span class="k">else</span> <span class="o">{</span>
                <span class="k">if</span><span class="o">(</span><span class="n">qu</span><span class="o">.</span><span class="na">contains</span><span class="o">(</span><span class="n">city</span><span class="o">))</span> <span class="o">{</span>
                    <span class="n">answer</span><span class="o">+=</span><span class="mi">1</span><span class="o">;</span>
                    <span class="n">qu</span><span class="o">.</span><span class="na">remove</span><span class="o">(</span><span class="n">city</span><span class="o">);</span>
                    <span class="n">qu</span><span class="o">.</span><span class="na">offer</span><span class="o">(</span><span class="n">city</span><span class="o">);</span>
                <span class="o">}</span>
                <span class="k">else</span> <span class="o">{</span>
                    <span class="n">answer</span><span class="o">+=</span><span class="mi">5</span><span class="o">;</span>
                    <span class="k">if</span><span class="o">(</span><span class="n">qu</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">==</span> <span class="n">cacheSize</span><span class="o">)</span> <span class="o">{</span>
                        <span class="n">qu</span><span class="o">.</span><span class="na">poll</span><span class="o">();</span>
                        <span class="n">qu</span><span class="o">.</span><span class="na">offer</span><span class="o">(</span><span class="n">city</span><span class="o">);</span>
                    <span class="o">}</span>
                    <span class="k">else</span> <span class="o">{</span>
                        <span class="n">qu</span><span class="o">.</span><span class="na">offer</span><span class="o">(</span><span class="n">city</span><span class="o">);</span>
                    <span class="o">}</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="회고">회고</h3>
<ul>
  <li>캐시에 대해서 공부하며, 캐시 동작 원리, 캐시 교체 정책에 대해서 알 수 있었다.</li>
  <li>Queue(큐)를 통해 LinkedList를 활용하여 캐시를 구현할 수 있었다.</li>
</ul>]]></content><author><name>lango</name></author><category term="Java" /><category term="blog" /><category term="algorithm" /><category term="study" /><category term="java" /><category term="programmers" /><summary type="html"><![CDATA[level 2 - 캐시]]></summary></entry><entry><title type="html">[Java] 백준(실버-5) 1978번 - 소수 찾기</title><link href="http://localhost:4000/java/80-post/" rel="alternate" type="text/html" title="[Java] 백준(실버-5) 1978번 - 소수 찾기" /><published>2022-09-22T00:00:00+09:00</published><updated>2022-09-22T00:00:00+09:00</updated><id>http://localhost:4000/java/80-post</id><content type="html" xml:base="http://localhost:4000/java/80-post/"><![CDATA[<p><br /></p>

<center><img src="/assets/images/baekjoon/10757.png" /></center>

<p><br /></p>

<p><strong>입출력 예시</strong></p>
<blockquote>
  <p>Input</p>
</blockquote>
<pre>
4
1 3 5 7
</pre>
<blockquote>
  <p>Output<br />
<strong>3</strong></p>
</blockquote>

<p><br /></p>

<h3 id="문제-풀이">문제 풀이</h3>
<hr />
<p>이 문제는 주어진 N개 수중에서 소수의 개수를 구해야 한다. <br />
소수 자체를 찾는건 어느 정도 공부하였으니, 각 N마다 소수인지를 판별하면 된다. <br /></p>
<ul>
  <li>소수는 1과 자기 자신만을 약수로 가지기 때문에, N이 1과 자기 자신으로만 나누어 떨어지면 소수이다.</li>
</ul>

<p><br /></p>

<p>그렇다면 코드를 작성해보자.</p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="rouge-code"><pre><span class="kt">int</span> <span class="no">N</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
<span class="nc">StringTokenizer</span> <span class="n">st</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
<span class="kt">int</span><span class="o">[]</span> <span class="n">prime_list</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="no">N</span><span class="o">];</span>
<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="no">N</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="n">prime_list</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>N개의 수를 입력받기 위해 N을 입력받고, 공백을 기준으로 각 N개의 수를 입력받아 int배열에 저장한다.</p>

<p><br /></p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="rouge-code"><pre><span class="kt">int</span> <span class="n">cnt</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">prime_list</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
    <span class="k">if</span><span class="o">(</span><span class="n">isPrime</span><span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">prime_list</span><span class="o">[</span><span class="n">i</span><span class="o">]))</span> <span class="o">==</span> <span class="mi">2</span><span class="o">)</span> <span class="n">cnt</span><span class="o">++;</span>
<span class="o">}</span>
<span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">cnt</span><span class="o">+</span><span class="s">"\n"</span><span class="o">);</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>그리고 저장한 배열만큼 반복하며 isPrime() 함수를 통해 1과 자신만을 가지니 2가 반환된다면 소수이기에 cnt를 증가시킨다. <br />
위 과정을 반복하며 배열의 각각의 N이 소수인지를 판별한다. <br /></p>

<p><br /></p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
</pre></td><td class="rouge-code"><pre><span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">isPrime</span><span class="o">(</span><span class="kt">int</span> <span class="n">num</span><span class="o">)</span> <span class="o">{</span>
    <span class="kt">int</span> <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
    <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">num</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
        <span class="k">if</span><span class="o">(</span><span class="n">num</span> <span class="o">%</span> <span class="n">i</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="n">count</span> <span class="o">+=</span> <span class="mi">1</span><span class="o">;</span>
        <span class="k">if</span><span class="o">(</span><span class="n">count</span> <span class="o">&gt;=</span> <span class="mi">3</span><span class="o">)</span> <span class="k">return</span> <span class="n">count</span><span class="o">;</span>
    <span class="o">}</span>   
    <span class="k">return</span> <span class="n">count</span><span class="o">;</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>1과 자기 자신 수로만 나눠 떨어진다면 count를 2가 되고, 소수가 아닌 수는 count가 3이 된다.</p>

<p><br /><br /></p>

<h3 id="작성코드">작성코드</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">java.io.*</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">IOException</span> <span class="o">{</span>
        <span class="nc">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>
        <span class="nc">BufferedWriter</span> <span class="n">bw</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedWriter</span><span class="o">(</span><span class="k">new</span> <span class="nc">OutputStreamWriter</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">));</span>
    
        <span class="kt">int</span> <span class="no">N</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
        <span class="nc">StringTokenizer</span> <span class="n">st</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
        <span class="kt">int</span><span class="o">[]</span> <span class="n">prime_list</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="no">N</span><span class="o">];</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="no">N</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="n">prime_list</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>

        <span class="kt">int</span> <span class="n">cnt</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">prime_list</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="n">isPrime</span><span class="o">(</span><span class="n">prime_list</span><span class="o">[</span><span class="n">i</span><span class="o">])</span> <span class="o">==</span> <span class="mi">2</span><span class="o">)</span> <span class="n">cnt</span><span class="o">++;</span>
        <span class="o">}</span>
        <span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">cnt</span><span class="o">+</span><span class="s">"\n"</span><span class="o">);</span>
        
        <span class="n">bw</span><span class="o">.</span><span class="na">flush</span><span class="o">();</span>
        <span class="n">bw</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
        <span class="n">br</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">isPrime</span><span class="o">(</span><span class="kt">int</span> <span class="n">num</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">num</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="n">num</span> <span class="o">%</span> <span class="n">i</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="n">count</span> <span class="o">+=</span> <span class="mi">1</span><span class="o">;</span>
            <span class="k">if</span><span class="o">(</span><span class="n">count</span> <span class="o">&gt;=</span> <span class="mi">3</span><span class="o">)</span> <span class="k">return</span> <span class="n">count</span><span class="o">;</span>
        <span class="o">}</span>   
        <span class="k">return</span> <span class="n">count</span><span class="o">;</span>
    <span class="o">}</span>

<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="회고">회고</h3>
<ul>
  <li>N이 소수인지를 확인하려면 1과 자기 자신만을 약수로 가지는지 검증하면 된다.</li>
</ul>]]></content><author><name>lango</name></author><category term="Java" /><category term="blog" /><category term="algorithm" /><category term="study" /><category term="java" /><category term="baekjoon" /><summary type="html"><![CDATA[기본수학2 - 실버5 - 소수 찾기]]></summary></entry><entry><title type="html">[Java] 백준(브론즈-5) 10757번 - 큰 수 A+B</title><link href="http://localhost:4000/java/78-post/" rel="alternate" type="text/html" title="[Java] 백준(브론즈-5) 10757번 - 큰 수 A+B" /><published>2022-09-22T00:00:00+09:00</published><updated>2022-09-22T00:00:00+09:00</updated><id>http://localhost:4000/java/78-post</id><content type="html" xml:base="http://localhost:4000/java/78-post/"><![CDATA[<p><br /></p>

<center><img src="/assets/images/baekjoon/10757.png" /></center>

<p><br /></p>

<p><strong>입출력 예시</strong></p>
<blockquote>
  <p>Input <br />
<strong>9223372036854775807 9223372036854775808</strong> <br />
Output<br />
<strong>18446744073709551615</strong></p>
</blockquote>

<p><br /></p>

<h3 id="문제-풀이">문제 풀이</h3>
<hr />
<p>이 문제에서 주어지는 입력값의 경우 최대 10의 10000승으로 일반적으로 큰 값에 활욛되는 long 타입의 범위를 초과한다. <br />
문자열을 입력받아 직접 덧셈을 구현하는 방식과 BigInteger 클래스를 활용하는 방식 두가지로 풀어보았다.</p>

<p><br /></p>

<h4 id="biginteger-활용">BigInteger 활용</h4>
<p>보통 정수는 int를 많이 사용하고, int의 표현 범위를 넘어서면 long형을 사용해야 한다.</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">-</th>
      <th style="text-align: center">int</th>
      <th style="text-align: center">long</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">저장공간</td>
      <td style="text-align: center">4byte</td>
      <td style="text-align: center">8byte</td>
    </tr>
    <tr>
      <td style="text-align: center">범위</td>
      <td style="text-align: center">-2147483648 ~ 2147483647</td>
      <td style="text-align: center">-9223372036854775808 ~ 9223372036854775807</td>
    </tr>
  </tbody>
</table>

<p><br />
문제에선 10의 10000승으로 long형의 범위를 아득히 뛰어넘기 때문에 문자열로 취급하는 BigInteger 클래스를 사용할 수 있다.</p>

<blockquote>
  <p><strong>BigInteger</strong>란? <br />
long형을 뛰어넘는 더 큰 범위의 정수를 다룰 때 사용하는 클래스로 java.math 패키지에 속한다. 사칙연산을 활용할 때 기호로 할 수 없고 BigInteger에서 제공하는 메서드를 이용해야 한다. <br />
클래스 객체로 선언하여 파라미터로 문자열을 넘겨주고, add 메서드로 덧셈을 할 수 있다.</p>
</blockquote>

<p>BigInteger 클래스를 활용한 코드를 작성해보자.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="rouge-code"><pre><span class="nc">StringTokenizer</span> <span class="n">st</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
<span class="nc">BigInteger</span> <span class="no">A</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BigInteger</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
<span class="nc">BigInteger</span> <span class="no">B</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BigInteger</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>

<span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="no">A</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="no">B</span><span class="o">)+</span><span class="s">"\n"</span><span class="o">);</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>코드는 간단하다. BigInteger A와 B를 입력 문자열대로 만들어서 add()메서드로 A+B 덧셈연산을 하였다.</p>

<p><br /><br /></p>

<h4 id="직접-덧셈-구현">직접 덧셈 구현</h4>
<p>BigInteger 클래스를 활용하여 간단하게 풀 수도 있지만, 직접 덧셈을 구현해보는 것도 재밌겠다 싶어 직접 덧셈을 구현해보았다. <br />
덧셈을 구현하기 위해 정한 아이디어는 다음과 같다.</p>
<ul>
  <li>입력받은 A와 B를 가장 낮은 자리수부터 덧셈을 해야하기 때문에 <strong>역순으로 배열에 저장</strong>하여 서로를 덧셈한다.</li>
  <li>두 수를 덧셈했을 때, <strong>더 큰 자리수를 가진 수의 길이를 덧셈 결과 배열의 길이</strong>로 해야 한다.</li>
  <li>두 수를 덧셈하여 10이 넘어가면, <strong>현재 자리는 10으로 나눈 나머지가 값이 되고, 다음 자리값에 +1</strong>을 해준다.</li>
</ul>

<p><br />
위 아이디어대로 코드를 작성해보자.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre><span class="nc">StringTokenizer</span> <span class="n">st</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
<span class="nc">String</span> <span class="n">str_A</span> <span class="o">=</span> <span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">();</span>
<span class="nc">String</span> <span class="n">str_B</span> <span class="o">=</span> <span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">();</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>먼저 두 수 A와 B를 입력받자.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="kt">int</span> <span class="n">big_len</span> <span class="o">=</span> <span class="nc">Math</span><span class="o">.</span><span class="na">max</span><span class="o">(</span><span class="n">str_A</span><span class="o">.</span><span class="na">length</span><span class="o">(),</span> <span class="n">str_B</span><span class="o">.</span><span class="na">length</span><span class="o">());</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>그리고 실제 두 수의 덧셈을 진행할때 더 큰 자리수만큼 덧셈연산을 해야 하기에 더 큰 자리수의 길이를 저장해둔다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
</pre></td><td class="rouge-code"><pre><span class="kt">int</span><span class="o">[]</span> <span class="no">A</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">big_len</span><span class="o">+</span><span class="mi">1</span><span class="o">];</span>
<span class="kt">int</span><span class="o">[]</span> <span class="no">B</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">big_len</span><span class="o">+</span><span class="mi">1</span><span class="o">];</span>

<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">str_A</span><span class="o">.</span><span class="na">length</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
    <span class="no">A</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="n">str_A</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">str_A</span><span class="o">.</span><span class="na">length</span><span class="o">()-</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">)-</span><span class="sc">'0'</span><span class="o">;</span>
<span class="o">}</span>

<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">str_B</span><span class="o">.</span><span class="na">length</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
    <span class="no">B</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="n">str_B</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">str_B</span><span class="o">.</span><span class="na">length</span><span class="o">()-</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">)-</span><span class="sc">'0'</span><span class="o">;</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>이제 문자열 A와 B를 역순으로 각 배열에 저장한다. <br />
<strong>저장할 때 ‘0’을 빼준 이유는 charAt()을 통해 char형으로 변환되어 있기에 ‘0’인 48씩을 빼주어야 실제 값을 저장할 수 있기 때문이다.</strong></p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="rouge-code"><pre><span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">big_len</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
    <span class="kt">int</span> <span class="n">sum</span> <span class="o">=</span> <span class="no">A</span><span class="o">[</span><span class="n">i</span><span class="o">]+</span><span class="no">B</span><span class="o">[</span><span class="n">i</span><span class="o">];</span>
    <span class="no">A</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="n">sum</span><span class="o">%</span><span class="mi">10</span><span class="o">;</span>
    <span class="no">A</span><span class="o">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">]</span> <span class="o">+=</span> <span class="o">(</span><span class="n">sum</span><span class="o">/</span><span class="mi">10</span><span class="o">);</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>A배열과 B배열에 가장 낮은 자리순으로 저장했으니, A,B 중 큰 수 길이만큼 반복하며 덧셈 연산을 진행하면 된다. <br />
유의할 점은 덧셈 결과를 A배열에 씌워야 덧셈 연산을 올바로 진행할 수 있다. <br /> 
<strong>A의 현재 자리값은 두수의 합을 10으로 나눈 나머지값이 되고, 다음 자리값은 A 현재 자리에 두수의 합을 10으로 나눈 몫을 더해주면 된다.</strong></p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre><span class="nc">StringBuilder</span> <span class="n">sb</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringBuilder</span><span class="o">();</span>
<span class="k">if</span><span class="o">(</span><span class="no">A</span><span class="o">[</span><span class="no">A</span><span class="o">.</span><span class="na">length</span><span class="o">-</span><span class="mi">1</span><span class="o">]!=</span><span class="mi">0</span><span class="o">)</span> <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="no">A</span><span class="o">[</span><span class="no">A</span><span class="o">.</span><span class="na">length</span><span class="o">-</span><span class="mi">1</span><span class="o">]);</span>

<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="no">A</span><span class="o">.</span><span class="na">length</span><span class="o">-</span><span class="mi">2</span><span class="o">;</span> <span class="n">i</span><span class="o">&gt;=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">--)</span> <span class="o">{</span>
    <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="no">A</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
<span class="o">}</span>
<span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">sb</span><span class="o">+</span><span class="s">"\n"</span><span class="o">);</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>또한 낮은 자리수부터 역순으로 큰 자리수의 길이만큼 덧셈연산을 하기에 제일 앞 수 즉, 가장 높은 자리수가 0일 수도 있다. <strong>가장 높은 자리수는 0이 아닐때만 출력</strong>하면 된다. <br />
역순으로 가장 낮은 자리수부터 덧셈 연산을 하여 거꾸로 A배열에 씌워졌으니, A배열을 거꾸로 출력하면 A와 B의 덧셈 연산 결과가 된다.</p>

<p><br /><br /></p>

<h3 id="실행-결과">실행 결과</h3>
<p>BigInteger보다 직접 덧셈을 구현한 방식이 더 빠른 것을 확인할 수 있었다.</p>
<h4 id="biginteger-활용-소요시간">BigInteger 활용 소요시간</h4>
<p><img src="/assets/images/baekjoon/10757-attach1.png" />
<br /></p>

<p>BigInteger 클래스는 코드는 간단하지만 문자열 검사 같은 처리해야 하는 과정이 있기에 더 느렸던 것으로 보인다.</p>

<h4 id="직접-덧셈-구현-소요시간">직접 덧셈 구현 소요시간</h4>
<p><img src="/assets/images/baekjoon/10757-attach2.png" />
<br /></p>

<p><br /><br /></p>

<h3 id="작성코드">작성코드</h3>
<h4 id="biginteger-활용-작성코드">BigInteger 활용 작성코드</h4>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">java.io.*</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.math.BigInteger</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">IOException</span> <span class="o">{</span>
        <span class="nc">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>
        <span class="nc">BufferedWriter</span> <span class="n">bw</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedWriter</span><span class="o">(</span><span class="k">new</span> <span class="nc">OutputStreamWriter</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">));</span>

        <span class="nc">StringTokenizer</span> <span class="n">st</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
        <span class="nc">BigInteger</span> <span class="no">A</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BigInteger</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
        <span class="nc">BigInteger</span> <span class="no">B</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BigInteger</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>

        <span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="no">A</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="no">B</span><span class="o">)+</span><span class="s">"\n"</span><span class="o">);</span>

        <span class="n">bw</span><span class="o">.</span><span class="na">flush</span><span class="o">();</span>
        <span class="n">bw</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
        <span class="n">br</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<h4 id="덧셈-구현-작성코드">덧셈 구현 작성코드</h4>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">java.io.*</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.math.BigInteger</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">IOException</span> <span class="o">{</span>
        <span class="nc">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>
        <span class="nc">BufferedWriter</span> <span class="n">bw</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedWriter</span><span class="o">(</span><span class="k">new</span> <span class="nc">OutputStreamWriter</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">));</span>

        <span class="nc">StringTokenizer</span> <span class="n">st</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
        
        <span class="nc">String</span> <span class="n">str_A</span> <span class="o">=</span> <span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">();</span>
        <span class="nc">String</span> <span class="n">str_B</span> <span class="o">=</span> <span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">();</span>

        <span class="kt">int</span> <span class="n">big_len</span> <span class="o">=</span> <span class="nc">Math</span><span class="o">.</span><span class="na">max</span><span class="o">(</span><span class="n">str_A</span><span class="o">.</span><span class="na">length</span><span class="o">(),</span> <span class="n">str_B</span><span class="o">.</span><span class="na">length</span><span class="o">());</span>

        <span class="kt">int</span><span class="o">[]</span> <span class="no">A</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">big_len</span><span class="o">+</span><span class="mi">1</span><span class="o">];</span>
        <span class="kt">int</span><span class="o">[]</span> <span class="no">B</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">big_len</span><span class="o">+</span><span class="mi">1</span><span class="o">];</span>

        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">str_A</span><span class="o">.</span><span class="na">length</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="no">A</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="n">str_A</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">str_A</span><span class="o">.</span><span class="na">length</span><span class="o">()-</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">)-</span><span class="sc">'0'</span><span class="o">;</span>
        <span class="o">}</span>

        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">str_B</span><span class="o">.</span><span class="na">length</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="no">B</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="n">str_B</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">str_B</span><span class="o">.</span><span class="na">length</span><span class="o">()-</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">)-</span><span class="sc">'0'</span><span class="o">;</span>
        <span class="o">}</span>

        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">big_len</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="kt">int</span> <span class="n">sum</span> <span class="o">=</span> <span class="no">A</span><span class="o">[</span><span class="n">i</span><span class="o">]+</span><span class="no">B</span><span class="o">[</span><span class="n">i</span><span class="o">];</span>
            <span class="no">A</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="n">sum</span><span class="o">%</span><span class="mi">10</span><span class="o">;</span>
            <span class="no">A</span><span class="o">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">]</span> <span class="o">+=</span> <span class="o">(</span><span class="n">sum</span><span class="o">/</span><span class="mi">10</span><span class="o">);</span>
        <span class="o">}</span>
        
        <span class="nc">StringBuilder</span> <span class="n">sb</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringBuilder</span><span class="o">();</span>
        <span class="k">if</span><span class="o">(</span><span class="no">A</span><span class="o">[</span><span class="no">A</span><span class="o">.</span><span class="na">length</span><span class="o">-</span><span class="mi">1</span><span class="o">]!=</span><span class="mi">0</span><span class="o">)</span> <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="no">A</span><span class="o">[</span><span class="no">A</span><span class="o">.</span><span class="na">length</span><span class="o">-</span><span class="mi">1</span><span class="o">]);</span>
        
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="no">A</span><span class="o">.</span><span class="na">length</span><span class="o">-</span><span class="mi">2</span><span class="o">;</span> <span class="n">i</span><span class="o">&gt;=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">--)</span> <span class="o">{</span>
            <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="no">A</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
        <span class="o">}</span>
        <span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">sb</span><span class="o">+</span><span class="s">"\n"</span><span class="o">);</span>

        <span class="n">bw</span><span class="o">.</span><span class="na">flush</span><span class="o">();</span>
        <span class="n">bw</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
        <span class="n">br</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
    <span class="o">}</span>

<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="회고">회고</h3>
<ul>
  <li>BigInteger 클래스에 대해서 공부할 수 있었고, 해당 클래스로 간단하게 풀 수 있는 문제지만, 직접 덧셈을 구현하는 코드를 작성하며, 덧셈을 어떻게 구현할 수 있을까? 재미있게 고민했던 것 같다.</li>
</ul>]]></content><author><name>lango</name></author><category term="Java" /><category term="blog" /><category term="algorithm" /><category term="study" /><category term="java" /><category term="baekjoon" /><summary type="html"><![CDATA[기본수학1 - 브론즈5 - 큰 수 A+B]]></summary></entry><entry><title type="html">[Java] 프로그래머스(level-2) - 점프와 순간 이동</title><link href="http://localhost:4000/java/79-post/" rel="alternate" type="text/html" title="[Java] 프로그래머스(level-2) - 점프와 순간 이동" /><published>2022-09-22T00:00:00+09:00</published><updated>2022-09-22T00:00:00+09:00</updated><id>http://localhost:4000/java/79-post</id><content type="html" xml:base="http://localhost:4000/java/79-post/"><![CDATA[<p><br /></p>
<center><img src="/assets/images/programmers/20220922_01.png" width="700" /></center>
<p><br /></p>

<p><strong>입출력 예시</strong></p>
<blockquote>
  <p>Input-1 <br />
<strong>5</strong> <br />
Output-1 <br />
<strong>2</strong></p>
</blockquote>

<blockquote>
  <p>Input-2 <br />
<strong>6</strong> <br />
Output-2 <br />
<strong>2</strong></p>
</blockquote>

<blockquote>
  <p>Input-3 <br />
<strong>5000</strong> <br />
Output-3 <br />
<strong>5</strong></p>
</blockquote>

<p><br /></p>

<h3 id="문제-풀이">문제 풀이</h3>
<hr />
<p>이 문제는 N의 범위가 최대 10억이기에 효율성을 잘 고려해야 한다. <br />
n을 2로 나눠가며 건전지 카운트를 세는 방식과 n을 2진수로 변환한 후 1의 개수를 세는 두가지 방식으로 풀어보았다.</p>

<p>먼저 문제에서 순간이동하고 K번 점프하는 패턴을 살펴보자.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
</pre></td><td class="rouge-code"><pre>n=1, 0-&gt;1
    건전지 1 사용
n=2, 0-&gt;1, 1*2=2
    건전지 1 사용
n=3, 0-&gt;1, 1*2=2, 2-&gt;3
    건전지 2 사용
n=4, 0-&gt;1, 1*2=2, 2*2=4
    건전지 1 사용
n=5, 0-&gt;1, 1*2=2, 2*2=4, 4-&gt;5
    건전지 2 사용
n=6, 0-&gt;1, 1*2=2, 2-&gt;3, 3*2=6
    건전지 2 사용
n=7, 0-&gt;1, 1*2=2, 2-&gt;3, 3*2=6, 6-&gt;7
    건전지 3 사용
n=8, 0-&gt;1, 1*2=2, 2*2=4, 4*2=8
    건전지 1 사용
n=9, 0-&gt;1, 1*2=2, 2*2=4, 4*2=8, 8-&gt;9
    건전지 2 사용
n=10, 0-&gt;1, 1*2=2, 2*2=4, 4-&gt;5, 5*2=10
    건전지 2 사용
</pre></td></tr></tbody></table></code></pre></div></div>
<p>2로 나눠떨어지는 수의 경우 건전지 사용수가 1이고, 아니라면 건전지를 1 추가로 사용해야 함을 알 수 있다.</p>

<p><br /><br /></p>

<h4 id="2로-나눠가며-2로-나눠-떨어지는지-검증하기">2로 나눠가며 2로 나눠 떨어지는지 검증하기</h4>
<p>주어진 n까지 반복하며 카운트를 세는 방식은 시간이 오래 걸리기에 거꾸로 <strong>n에서부터 0이 될 때까지 나누는 방식</strong>으로 풀어보니 정답이었다. <br />
만약 n이 2로 나눠 떨어진다면 건전지를 사용하지 않아도 된다. 그런데 <strong>2로 나눠 떨어지지 않는 수라면 (2로 나눠떨어지는 수)+1</strong> 로 구성됨을 알 수 있다. <br />
그렇다면 결국 2로 나눠 떨어지지 않을 때 건전지를 1씩 사용할 수 밖에 없고, 다음 <strong>n-1을 하여 2로 나눠떨어지는 수</strong>로 검증하면 된다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre>15 -&gt; 15%2!=0 -&gt; 14+1 
14 -&gt; 14%2==0
7 -&gt; 7%2!=0 -&gt; 6+1
6 -&gt; 6%2==0
3 -&gt; 3%2!=0 -&gt; 2+1
2 -&gt; 2%2==0
1 -&gt; 1%2!=0 -&gt; 0+1
</pre></td></tr></tbody></table></code></pre></div></div>
<p><br /></p>

<p>위 아이디어를 코드로 작성해보자.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre><span class="k">while</span><span class="o">(</span><span class="n">n</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
    <span class="k">if</span><span class="o">(</span><span class="n">n</span><span class="o">%</span><span class="mi">2</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="n">n</span> <span class="o">=</span> <span class="n">n</span><span class="o">/</span><span class="mi">2</span><span class="o">;</span>
    <span class="k">else</span> <span class="o">{</span>
        <span class="n">n</span> <span class="o">=</span> <span class="o">(</span><span class="n">n</span><span class="o">-</span><span class="mi">1</span><span class="o">)</span> <span class="o">/</span> <span class="mi">2</span><span class="o">;</span>
        <span class="n">ans</span><span class="o">++;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>2로 나눠떨어지는 수라면 n을 n/2 값으로 변경하고 다시 반복한다. <br />
2로 나눠떨어지지 않는 수라면 n을 (n-1)/2 값으로 변경하고 건전지 사용 수를 1 증가시킨다.<br />
n이 0이 될 때까지 위 과정을 반복하면 건전지를 최소로 사용할 수 있다.</p>

<p><br /><br /></p>

<h4 id="2진수-변환후-1의-개수-세기">2진수 변환후 1의 개수 세기</h4>
<p>문제를 보고 2를 곱하는 것으로 보아 n을 <strong>2진수로 변환한 후의 1의 개수</strong>인가 살펴보았고, 예상한 대로였다. <br />
1의 개수를 셀 때 반복문으로 세면 시간초과가 발생하기에 본 2진수 문자열 길이에서 1을 제외한 2진수 문자열 길이를 빼줌으로 1의 개수를 셀 수 있었다.</p>

<p>작성한 코드는 다음과 같다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="nc">String</span> <span class="n">binary</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">toBinaryString</span><span class="o">(</span><span class="n">n</span><span class="o">);</span>
<span class="k">return</span> <span class="n">binary</span><span class="o">.</span><span class="na">length</span><span class="o">()</span> <span class="o">-</span> <span class="n">binary</span><span class="o">.</span><span class="na">replace</span><span class="o">(</span><span class="nc">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="mi">1</span><span class="o">),</span> <span class="s">""</span><span class="o">).</span><span class="na">length</span><span class="o">();</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><br /></p>

<h3 id="작성-코드">작성 코드</h3>
<hr />
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
</pre></td><td class="rouge-code"><pre><span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">Scanner</span> <span class="n">sc</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Scanner</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
        <span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>

        <span class="kt">long</span> <span class="n">start</span> <span class="o">=</span> <span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        <span class="n">solution</span><span class="o">(</span><span class="n">n</span><span class="o">);</span>
        <span class="kt">long</span> <span class="n">end</span> <span class="o">=</span> <span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"\n수행시간 = "</span> <span class="o">+</span> <span class="o">(</span><span class="n">end</span><span class="o">-</span><span class="n">start</span><span class="o">));</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span> <span class="n">n</span><span class="o">)</span> <span class="o">{</span> <span class="c1">// 2로 나눠떨어지는지 검증</span>
        <span class="kt">int</span> <span class="n">ans</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>

        <span class="k">while</span><span class="o">(</span><span class="n">n</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="n">n</span><span class="o">%</span><span class="mi">2</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="n">n</span> <span class="o">=</span> <span class="n">n</span><span class="o">/</span><span class="mi">2</span><span class="o">;</span>
            <span class="k">else</span> <span class="o">{</span>
                <span class="n">n</span> <span class="o">=</span> <span class="o">(</span><span class="n">n</span><span class="o">-</span><span class="mi">1</span><span class="o">)</span> <span class="o">/</span> <span class="mi">2</span><span class="o">;</span>
                <span class="n">ans</span><span class="o">++;</span>
            <span class="o">}</span>
        <span class="o">}</span>

        <span class="k">return</span> <span class="n">ans</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">solution2</span><span class="o">(</span><span class="kt">int</span> <span class="n">n</span><span class="o">)</span> <span class="o">{</span> <span class="c1">// 2진수 변환하고 1의 개수 세기</span>
        <span class="nc">String</span> <span class="n">binary</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">toBinaryString</span><span class="o">(</span><span class="n">n</span><span class="o">);</span>
        <span class="k">return</span> <span class="n">binary</span><span class="o">.</span><span class="na">length</span><span class="o">()</span> <span class="o">-</span> <span class="n">binary</span><span class="o">.</span><span class="na">replace</span><span class="o">(</span><span class="nc">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="mi">1</span><span class="o">),</span> <span class="s">""</span><span class="o">).</span><span class="na">length</span><span class="o">();</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="회고">회고</h3>
<ul>
  <li>2와 연관지어 문제에 접근해야 하기 때문에 나눗셈연산, 나머지연산 등 여러 방식을 고민해볼 수 있었고, 2진수 변환후 1의 개수을 통해서도 정답을 낼 수 있었다.</li>
  <li>특정 문자의 개수를 셀 때, String의 replace() 메서드를 통해 본 문자열 길이에서 특정 문자가 제거된 문자열 길이를 빼 구할 수 있었다.</li>
</ul>]]></content><author><name>lango</name></author><category term="Java" /><category term="blog" /><category term="algorithm" /><category term="study" /><category term="java" /><category term="programmers" /><summary type="html"><![CDATA[level 2 - 점프와 순간 이동]]></summary></entry><entry><title type="html">[Java] 백준(실버-4) 2839번 - 설탕 배달</title><link href="http://localhost:4000/java/77-post/" rel="alternate" type="text/html" title="[Java] 백준(실버-4) 2839번 - 설탕 배달" /><published>2022-09-21T00:00:00+09:00</published><updated>2022-09-21T00:00:00+09:00</updated><id>http://localhost:4000/java/77-post</id><content type="html" xml:base="http://localhost:4000/java/77-post/"><![CDATA[<p><br /></p>

<center><img src="/assets/images/baekjoon/2839.png" /></center>

<p><br /></p>

<p><strong>입출력 예시</strong></p>
<blockquote>
  <p>Input-1 <br />
<strong>18</strong> <br />
Output-1<br />
<strong>4</strong> <br /></p>
</blockquote>

<blockquote>
  <p>Input-2 <br />
<strong>6</strong> <br />
Output-2<br />
<strong>2</strong> <br /></p>
</blockquote>

<blockquote>
  <p>Input-3 <br />
<strong>11</strong> <br />
Output-3<br />
<strong>3</strong> <br /></p>
</blockquote>

<p><br /></p>

<h3 id="문제-풀이">문제 풀이</h3>
<hr />
<p>이 문제는 반복문과 조건문을 활용한 두 가지 방식으로 풀어보았다. <br />
이 문제의 핵심은 <strong>N이 5의 배수로 이루어질 때 봉지의 수가 최소</strong>가 된다는 점이다. <br />
그리고 <strong>N이 4일 때와 7일 때는 애초에 봉지의 개수를 구할 수 없기에 -1을 반환</strong>해야 함을 유의해야 한다.</p>

<p><br /></p>

<h4 id="반복문-활용-풀이">반복문 활용 풀이</h4>
<p>먼저 반복문을 활용해 풀어보자. <br />
단순하게 <strong>N이 5의 배수가 될때까지 3을 빼주는 과정을 반복</strong>하면 된다. <br />
N이 5의 배수라면 봉지의 개수는 N/5 개가 된다. 아니라면, N을 3씩 빼준다. <br />
위 과정을 반복하며 N이 0보다 작아진다면 반복문을 탈출한다.</p>

<p>그렇다면 반복문을 활용하여 코드를 작성해보자.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
</pre></td><td class="rouge-code"><pre><span class="k">while</span><span class="o">(</span><span class="no">N</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
    <span class="k">if</span><span class="o">(</span><span class="no">N</span><span class="o">%</span><span class="mi">5</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">cnt</span> <span class="o">+=</span> <span class="no">N</span><span class="o">/</span><span class="mi">5</span><span class="o">;</span>
        <span class="k">break</span><span class="o">;</span>
    <span class="o">}</span>
    <span class="k">else</span> <span class="o">{</span>
        <span class="no">N</span> <span class="o">-=</span> <span class="mi">3</span><span class="o">;</span>
        <span class="n">cnt</span><span class="o">++;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>while문에서 N이 5의 배수라면 봉지의 개수 cnt에 N/5개를 더해주고, 5의 배수가 아니라면 3씩 빼주면서 봉지의 개수를 1씩 증가시킨다. <br />
N을 3씩 빼주다가 0보다 작아지면 while문을 탈출한다.</p>

<p><br /><br /></p>

<h4 id="조건문-활용-풀이">조건문 활용 풀이</h4>
<p>반복문을 사용하지 않고도 풀 수 없을까 고민하며 손으로 N과 5의 나머지와 몫을 적어가던 중 하나의 패턴을 발견했다.</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">N</th>
      <th style="text-align: center">봉지의 개수</th>
      <th style="text-align: center">N/5</th>
      <th style="text-align: center">N%5</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">3</td>
      <td style="text-align: center">1</td>
      <td style="text-align: center">0</td>
      <td style="text-align: center">3</td>
    </tr>
    <tr>
      <td style="text-align: center">4</td>
      <td style="text-align: center">-1</td>
      <td style="text-align: center">0</td>
      <td style="text-align: center">4</td>
    </tr>
    <tr>
      <td style="text-align: center">5</td>
      <td style="text-align: center">1</td>
      <td style="text-align: center">1</td>
      <td style="text-align: center">0</td>
    </tr>
    <tr>
      <td style="text-align: center"><strong>6</strong></td>
      <td style="text-align: center"><strong>2</strong></td>
      <td style="text-align: center"><strong>1</strong></td>
      <td style="text-align: center"><strong>1</strong></td>
    </tr>
    <tr>
      <td style="text-align: center">7</td>
      <td style="text-align: center">-1</td>
      <td style="text-align: center">1</td>
      <td style="text-align: center">2</td>
    </tr>
    <tr>
      <td style="text-align: center"><strong>8</strong></td>
      <td style="text-align: center"><strong>2</strong></td>
      <td style="text-align: center"><strong>1</strong></td>
      <td style="text-align: center"><strong>3</strong></td>
    </tr>
    <tr>
      <td style="text-align: center">9</td>
      <td style="text-align: center">3</td>
      <td style="text-align: center">1</td>
      <td style="text-align: center">4</td>
    </tr>
    <tr>
      <td style="text-align: center">10</td>
      <td style="text-align: center">2</td>
      <td style="text-align: center">2</td>
      <td style="text-align: center">0</td>
    </tr>
    <tr>
      <td style="text-align: center"><strong>11</strong></td>
      <td style="text-align: center"><strong>3</strong></td>
      <td style="text-align: center"><strong>2</strong></td>
      <td style="text-align: center"><strong>1</strong></td>
    </tr>
    <tr>
      <td style="text-align: center">12</td>
      <td style="text-align: center">4</td>
      <td style="text-align: center">2</td>
      <td style="text-align: center">2</td>
    </tr>
    <tr>
      <td style="text-align: center"><strong>13</strong></td>
      <td style="text-align: center"><strong>3</strong></td>
      <td style="text-align: center"><strong>2</strong></td>
      <td style="text-align: center"><strong>3</strong></td>
    </tr>
    <tr>
      <td style="text-align: center">14</td>
      <td style="text-align: center">4</td>
      <td style="text-align: center">2</td>
      <td style="text-align: center">4</td>
    </tr>
    <tr>
      <td style="text-align: center">15</td>
      <td style="text-align: center">3</td>
      <td style="text-align: center">3</td>
      <td style="text-align: center">0</td>
    </tr>
    <tr>
      <td style="text-align: center"><strong>16</strong></td>
      <td style="text-align: center"><strong>4</strong></td>
      <td style="text-align: center"><strong>3</strong></td>
      <td style="text-align: center"><strong>1</strong></td>
    </tr>
    <tr>
      <td style="text-align: center">17</td>
      <td style="text-align: center">5</td>
      <td style="text-align: center">3</td>
      <td style="text-align: center">2</td>
    </tr>
    <tr>
      <td style="text-align: center"><strong>18</strong></td>
      <td style="text-align: center"><strong>4</strong></td>
      <td style="text-align: center"><strong>3</strong></td>
      <td style="text-align: center"><strong>3</strong></td>
    </tr>
    <tr>
      <td style="text-align: center">19</td>
      <td style="text-align: center">5</td>
      <td style="text-align: center">3</td>
      <td style="text-align: center">4</td>
    </tr>
    <tr>
      <td style="text-align: center">20</td>
      <td style="text-align: center">4</td>
      <td style="text-align: center">4</td>
      <td style="text-align: center">0</td>
    </tr>
  </tbody>
</table>

<p><br /></p>

<p>위 표를 보면 N이 <strong>5의배수+1이거나 5의배수+3</strong> 일때 봉지의 수가 같고, N이 <strong>5의배수+2이거나 5의배수+4</strong> 일때 봉지의 수가 같음을 알 수 있다. <br />
5의 배수를 기준으로 1~4까지의 차에 따라 봉지의 개수를 구할 수 있다.</p>
<ul>
  <li>5의배수일 때, 봉지의 개수 = N/5</li>
  <li>5의배수+1 또는 5의배수+3일 때, 봉지의 개수 = <strong>(N/5)+1</strong></li>
  <li>5의배수+2 또는 5의배수+4일 때, 봉지의 개수 = <strong>(N/5)+2</strong></li>
</ul>

<p>위에서 구한 조건을 활용해 코드를 작성해보자.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre><span class="k">if</span><span class="o">(</span><span class="no">N</span><span class="o">%</span><span class="mi">5</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="n">cnt</span> <span class="o">=</span> <span class="no">N</span><span class="o">/</span><span class="mi">5</span><span class="o">;</span>
<span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="no">N</span><span class="o">%</span><span class="mi">5</span> <span class="o">==</span> <span class="mi">1</span> <span class="o">||</span> <span class="no">N</span><span class="o">%</span><span class="mi">5</span> <span class="o">==</span> <span class="mi">3</span><span class="o">)</span> <span class="n">cnt</span> <span class="o">=</span> <span class="o">(</span><span class="no">N</span><span class="o">/</span><span class="mi">5</span><span class="o">)+</span><span class="mi">1</span><span class="o">;</span>
<span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="no">N</span><span class="o">%</span><span class="mi">5</span> <span class="o">==</span> <span class="mi">2</span> <span class="o">||</span> <span class="no">N</span><span class="o">%</span><span class="mi">5</span> <span class="o">==</span> <span class="mi">4</span><span class="o">)</span> <span class="n">cnt</span> <span class="o">=</span> <span class="o">(</span><span class="no">N</span><span class="o">/</span><span class="mi">5</span><span class="o">)+</span><span class="mi">2</span><span class="o">;</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>N이 5의 배수일 때는 5로 나눈 몫이 봉지의 개수가 되고, 5의배수+1 또는 5의배수+3 라면 5로 나눈 몫+1 값이 봉지의 개수가 된다. <br />
마지막으로 5의배수+2 또는 5의배수+4 라면 5로 나눈 몫+2 값이 봉지의 개수가 된다.</p>

<p><br /></p>

<h3 id="작성코드">작성코드</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">java.io.*</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">IOException</span> <span class="o">{</span>
        <span class="nc">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>
        <span class="nc">BufferedWriter</span> <span class="n">bw</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedWriter</span><span class="o">(</span><span class="k">new</span> <span class="nc">OutputStreamWriter</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">));</span>

        <span class="kt">int</span> <span class="no">N</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
        <span class="kt">int</span> <span class="n">cnt</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>

        <span class="k">if</span><span class="o">(</span><span class="no">N</span><span class="o">==</span><span class="mi">4</span> <span class="o">||</span> <span class="no">N</span><span class="o">==</span><span class="mi">7</span><span class="o">)</span> <span class="n">cnt</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="o">;</span>
        <span class="k">else</span> <span class="o">{</span>
            <span class="c1">// cnt = loop(N, cnt);</span>
            <span class="n">cnt</span> <span class="o">=</span> <span class="n">condi</span><span class="o">(</span><span class="no">N</span><span class="o">,</span> <span class="n">cnt</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">cnt</span><span class="o">+</span><span class="s">"\n"</span><span class="o">);</span>

        <span class="n">bw</span><span class="o">.</span><span class="na">flush</span><span class="o">();</span>
        <span class="n">bw</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
        <span class="n">br</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
    <span class="o">}</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">loop</span><span class="o">(</span><span class="kt">int</span> <span class="no">N</span><span class="o">,</span> <span class="kt">int</span> <span class="n">cnt</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">while</span><span class="o">(</span><span class="kc">true</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="no">N</span><span class="o">%</span><span class="mi">5</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">cnt</span> <span class="o">+=</span> <span class="no">N</span><span class="o">/</span><span class="mi">5</span><span class="o">;</span>
                <span class="k">break</span><span class="o">;</span>
            <span class="o">}</span>
            <span class="k">else</span> <span class="o">{</span>
                <span class="no">N</span> <span class="o">-=</span> <span class="mi">3</span><span class="o">;</span>
                <span class="n">cnt</span><span class="o">++;</span>
            <span class="o">}</span>
            <span class="k">if</span><span class="o">(</span><span class="no">N</span><span class="o">&lt;</span><span class="mi">0</span><span class="o">)</span> <span class="k">break</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">cnt</span><span class="o">;</span>
    <span class="o">}</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">condi</span><span class="o">(</span><span class="kt">int</span> <span class="no">N</span><span class="o">,</span> <span class="kt">int</span> <span class="n">cnt</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">if</span><span class="o">(</span><span class="no">N</span><span class="o">%</span><span class="mi">5</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="n">cnt</span> <span class="o">=</span> <span class="no">N</span><span class="o">/</span><span class="mi">5</span><span class="o">;</span>
        <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="no">N</span><span class="o">%</span><span class="mi">5</span> <span class="o">==</span> <span class="mi">1</span> <span class="o">||</span> <span class="no">N</span><span class="o">%</span><span class="mi">5</span> <span class="o">==</span> <span class="mi">3</span><span class="o">)</span> <span class="n">cnt</span> <span class="o">=</span> <span class="o">(</span><span class="no">N</span><span class="o">/</span><span class="mi">5</span><span class="o">)+</span><span class="mi">1</span><span class="o">;</span>
        <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="no">N</span><span class="o">%</span><span class="mi">5</span> <span class="o">==</span> <span class="mi">2</span> <span class="o">||</span> <span class="no">N</span><span class="o">%</span><span class="mi">5</span> <span class="o">==</span> <span class="mi">4</span><span class="o">)</span> <span class="n">cnt</span> <span class="o">=</span> <span class="o">(</span><span class="no">N</span><span class="o">/</span><span class="mi">5</span><span class="o">)+</span><span class="mi">2</span><span class="o">;</span>
        <span class="k">return</span> <span class="n">cnt</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="회고">회고</h3>
<ul>
  <li>5의배수라는 기준을 두고 얼마냐 차이가 나는지를 통해 반복문 없이 조건문만으로 봉지의 개수를 구할 수 있었다.</li>
</ul>]]></content><author><name>lango</name></author><category term="Java" /><category term="blog" /><category term="algorithm" /><category term="study" /><category term="java" /><category term="baekjoon" /><summary type="html"><![CDATA[실버 4 - 설탕 배달]]></summary></entry><entry><title type="html">[Java] 백준(브론즈-1) 2275번 - 부녀회장이 될테야</title><link href="http://localhost:4000/java/75-post/" rel="alternate" type="text/html" title="[Java] 백준(브론즈-1) 2275번 - 부녀회장이 될테야" /><published>2022-09-20T00:00:00+09:00</published><updated>2022-09-20T00:00:00+09:00</updated><id>http://localhost:4000/java/75-post</id><content type="html" xml:base="http://localhost:4000/java/75-post/"><![CDATA[<p><br /></p>

<center><img src="/assets/images/baekjoon/2275.png" /></center>

<p><br /></p>

<p><strong>제한 사항</strong></p>
<ul>
  <li>1 ≤ k, n ≤ 14</li>
</ul>

<p><br /></p>

<p><strong>입출력 예시</strong></p>
<blockquote>
  <p>Input</p>
</blockquote>
<pre>
2
1
3
2
3
</pre>
<blockquote>
  <p>Output</p>
</blockquote>
<pre>
6
10
</pre>
<p><br /></p>

<h3 id="문제-풀이">문제 풀이</h3>
<hr />
<p>이 문제는 주어진 k,n을 가지고 k층에 n호에 몇명이 거주하는지 구해야 한다. <br />
0층에는 i호에 i명이 거주함을 보고 0층부터 k층의 n호까지 구해나가야 함을 알 수 있다.</p>

<p>k층의 n호는 전층 즉, <strong>k-1층의 1호~n호까지의 합</strong>이 된다.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="rouge-code"><pre>0층 - 1호:1명, 2호:2명, 3호:3명 ...
1층 - 1호:1명, 2호:3명, 3호:6명 ...
2층 - 1호:1명, 2호:4명, 3호:10명 ...
3층 - 1호:1명, 2호:5명, 3호:15명 ...
2층 - 1호:1명, 2호:6명, 3호:21명 ...
...
</pre></td></tr></tbody></table></code></pre></div></div>

<p><br />
<br /></p>

<h4 id="합배열-활용하기">합배열 활용하기</h4>
<p>k-1층의 1부터 n까지의 합이 k층의 n호 값이 되기 때문에 합배열을 활용하여 층마다 합배열을 만들면 된다. <br />
0층은 i호에 i명이 사니까 1층의 합배열을 만들어놓고 2층~14층까지의 k가 주어지면 k만큼 돌면서 합배열을 만들어 주자. <br />
그렇게 만든 합배열의 n번째 원소가 k층의 n호의 거주자 수가 된다.</p>

<p><br /></p>

<p>합배열을 활용하여 코드를 작성해보자.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="rouge-code"><pre><span class="kt">int</span> <span class="no">T</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="no">T</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
    <span class="kt">int</span> <span class="n">k</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
    <span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>먼저 테스트케이스 개수 T를 입력받고 T만큼 순회하며 k와 n을 개행단위로 입력받는다.
<br />
<br /></p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="rouge-code"><pre><span class="kt">int</span><span class="o">[]</span> <span class="n">firstFloor</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">n</span><span class="o">+</span><span class="mi">1</span><span class="o">];</span>
<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span> <span class="n">j</span><span class="o">&lt;=</span><span class="n">n</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
    <span class="n">firstFloor</span><span class="o">[</span><span class="n">j</span><span class="o">]</span> <span class="o">+=</span> <span class="n">firstFloor</span><span class="o">[</span><span class="n">j</span><span class="o">-</span><span class="mi">1</span><span class="o">]+</span><span class="n">j</span><span class="o">;</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>그리고 0층의 n호만큼 돌며 1층의 n호까지의 거주자 수를 합배열로 저장한다.
<br />
<br /></p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
</pre></td><td class="rouge-code"><pre><span class="kt">int</span> <span class="n">floor</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
<span class="k">while</span><span class="o">(</span><span class="n">floor</span> <span class="o">&lt;</span> <span class="n">k</span><span class="o">)</span> <span class="o">{</span>
    <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">2</span><span class="o">;</span> <span class="n">j</span><span class="o">&lt;=</span><span class="n">n</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
        <span class="n">firstFloor</span><span class="o">[</span><span class="n">j</span><span class="o">]</span> <span class="o">+=</span> <span class="n">firstFloor</span><span class="o">[</span><span class="n">j</span><span class="o">-</span><span class="mi">1</span><span class="o">];</span>
    <span class="o">}</span>
    <span class="n">floor</span><span class="o">++;</span>
<span class="o">}</span>
<span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">firstFloor</span><span class="o">[</span><span class="n">n</span><span class="o">]+</span><span class="s">"\n"</span><span class="o">);</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>1층의 거주자 수를 알았으니, <strong>k층에 도달할 때까지 전층의 n호까지 거주자 합을 배열에 저장</strong>해나간다. <br />
floor가 k-1 값이 된다면 while문을 탈출하고 firstFloor[n] 의 값을 통해 k층 n호 거주자 수를 구할 수 있다.</p>

<p><br /></p>

<h3 id="작성코드">작성코드</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">java.io.*</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">IOException</span> <span class="o">{</span>
        <span class="nc">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>
        <span class="nc">BufferedWriter</span> <span class="n">bw</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedWriter</span><span class="o">(</span><span class="k">new</span> <span class="nc">OutputStreamWriter</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">));</span>
        
        <span class="kt">int</span> <span class="no">T</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>

        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="no">T</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="kt">int</span> <span class="n">k</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
            <span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>

            <span class="kt">int</span><span class="o">[]</span> <span class="n">firstFloor</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">n</span><span class="o">+</span><span class="mi">1</span><span class="o">];</span>
            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span> <span class="n">j</span><span class="o">&lt;=</span><span class="n">n</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
                <span class="n">firstFloor</span><span class="o">[</span><span class="n">j</span><span class="o">]</span> <span class="o">+=</span> <span class="n">firstFloor</span><span class="o">[</span><span class="n">j</span><span class="o">-</span><span class="mi">1</span><span class="o">]+</span><span class="n">j</span><span class="o">;</span>
            <span class="o">}</span>
            
            <span class="kt">int</span> <span class="n">floor</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
            <span class="k">while</span><span class="o">(</span><span class="n">floor</span> <span class="o">&lt;</span> <span class="n">k</span><span class="o">)</span> <span class="o">{</span>
                <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">2</span><span class="o">;</span> <span class="n">j</span><span class="o">&lt;=</span><span class="n">n</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
                    <span class="n">firstFloor</span><span class="o">[</span><span class="n">j</span><span class="o">]</span> <span class="o">+=</span> <span class="n">firstFloor</span><span class="o">[</span><span class="n">j</span><span class="o">-</span><span class="mi">1</span><span class="o">];</span>
                <span class="o">}</span>
                <span class="n">floor</span><span class="o">++;</span>
            <span class="o">}</span>
            <span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">firstFloor</span><span class="o">[</span><span class="n">n</span><span class="o">]+</span><span class="s">"\n"</span><span class="o">);</span>
        <span class="o">}</span>
        
        <span class="n">bw</span><span class="o">.</span><span class="na">flush</span><span class="o">();</span>
        <span class="n">bw</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
        <span class="n">br</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
    <span class="o">}</span>
 <span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="회고">회고</h3>
<ul>
  <li>문제를 보고 각 k층에 거주자 수를 구하기 위해서 k-1층의 거주자 수들을 알아야 하기 때문에 가장 낮은 층부터 순차적으로 구해 나가야 함을 빠르게 알 수 있었다.</li>
</ul>]]></content><author><name>lango</name></author><category term="Java" /><category term="blog" /><category term="algorithm" /><category term="study" /><category term="java" /><category term="baekjoon" /><summary type="html"><![CDATA[브론즈 1 - 부녀회장이 될테야]]></summary></entry><entry><title type="html">[Java] 프로그래머스(level-2) - 예상 대진표</title><link href="http://localhost:4000/java/76-post/" rel="alternate" type="text/html" title="[Java] 프로그래머스(level-2) - 예상 대진표" /><published>2022-09-20T00:00:00+09:00</published><updated>2022-09-20T00:00:00+09:00</updated><id>http://localhost:4000/java/76-post</id><content type="html" xml:base="http://localhost:4000/java/76-post/"><![CDATA[<p><br /></p>
<center><img src="/assets/images/programmers/20220917_02.png" width="700" /></center>
<p><br /></p>

<p><strong>입출력 예시</strong></p>
<blockquote>
  <p>Input <br />
<strong>N=8, A=4, B=7</strong> <br /></p>
</blockquote>

<blockquote>
  <p>Output <br />
<strong>3</strong></p>
</blockquote>

<p><br /></p>

<h3 id="문제-풀이">문제 풀이</h3>
<hr />
<p>이 문제는 토너먼트에서 경쟁자인 a와 b가 몇번째 라운드에서 만나는지 구해야 한다. <br />
2명씩 대전해가며 특정 라운드에서 서로 만나려면 <strong>a가 b보다 1크거나, 1작아야 한다.</strong> <br />
어떤 상황에서 a가 b보다 1이 작거나, 1이 클수가 있을까?</p>

<ul>
  <li><strong>a가 짝수라면 a-1의 수가 b</strong>이어야 한다.</li>
  <li><strong>a가 홀수라면 a+1의 수가 b</strong>이어야 한다.</li>
</ul>

<p><br /></p>

<p>a가 짝수라면, a의 이전 자리에 b가 와야 하고, a가 홀수라면, a의 다음자리에 b가 와야 서로 대전이 매칭될 수 있다. <br />
그렇다면 <strong>a와 b를 인접한 수</strong>가 될 때까지 변경해야 한다. 그런데 a와 b값을 어떻게 변경할까? <br /><br />
예를 들어 예시처럼 a가 4, b는 7이라 하자. a와 b를 인접한 수로 만들기 위해서 간단하게 생각하면 <strong>2로 나누면</strong> 된다. <br />
그런데, 2로 나눠 떨어지지 않는 수의 경우는 반올림을 해야하니 1을 더해준다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre>a=4,b=7 -&gt; 1라운드
(a/2)=2, (b/2)+1=4 -&gt; 2라운드(인접한 수가 아니기에 다음 라운드 진행)
(a/2)=1, (b/2)+1=2 -&gt; 3라운드
</pre></td></tr></tbody></table></code></pre></div></div>

<p>이와 같이 라운드를 진행하면서 라운드마다 a와 b가 인접한 수가 됐는지 검증하고 인접한 수가 아니라면, 다음 라운드에서 다시 확인하는 식으로 진행하면 된다.</p>

<p><br /></p>

<p>바로 코드를 작성해보자.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
</pre></td><td class="rouge-code"><pre><span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>

<span class="k">while</span><span class="o">(</span><span class="kc">true</span><span class="o">)</span> <span class="o">{</span>
    <span class="k">if</span><span class="o">((</span><span class="n">a</span><span class="o">%</span><span class="mi">2</span><span class="o">)==</span><span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="o">(</span><span class="n">a</span><span class="o">-</span><span class="mi">1</span><span class="o">)==</span><span class="n">b</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">break</span><span class="o">;</span>
    <span class="o">}</span><span class="k">else</span> <span class="k">if</span><span class="o">((</span><span class="n">a</span><span class="o">%</span><span class="mi">2</span><span class="o">)==</span><span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="o">(</span><span class="n">a</span><span class="o">+</span><span class="mi">1</span><span class="o">)==</span><span class="n">b</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">break</span><span class="o">;</span>
    <span class="o">}</span>
    <span class="n">a</span> <span class="o">=</span> <span class="n">half</span><span class="o">(</span><span class="n">a</span><span class="o">);</span>
    <span class="n">b</span> <span class="o">=</span> <span class="n">half</span><span class="o">(</span><span class="n">b</span><span class="o">);</span>
    <span class="n">answer</span><span class="o">++;</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>1라운드부터 시작해서 while 반복문을 순회햐며 <strong>a가 짝수이면서 이전 수가 b일 경우, a가 홀수이면서 다음 수가 b일 경우</strong>가 될 때까지 a와 b값을 바꿔준다. <br /></p>

<p><br /></p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="rouge-code"><pre><span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">half</span><span class="o">(</span><span class="kt">int</span> <span class="n">num</span><span class="o">)</span> <span class="o">{</span>
    <span class="k">if</span><span class="o">(</span><span class="n">num</span><span class="o">%</span><span class="mi">2</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="k">return</span> <span class="n">num</span><span class="o">/</span><span class="mi">2</span><span class="o">;</span>
    <span class="k">else</span> <span class="nf">return</span> <span class="o">(</span><span class="n">num</span><span class="o">/</span><span class="mi">2</span><span class="o">)+</span><span class="mi">1</span><span class="o">;</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>그리고 half() 함수를 통해 a나 b의 값을 받아서 짝수면 2로 나눈 몫을, 홀수면 2로 나눈 몫에 1을 더하면 반환한다.</p>

<p><br /></p>

<h3 id="작성-코드">작성 코드</h3>
<hr />
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">Scanner</span> <span class="n">sc</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Scanner</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
        <span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
        <span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
        <span class="kt">int</span> <span class="n">b</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>

        <span class="kt">long</span> <span class="n">start</span> <span class="o">=</span> <span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        <span class="n">solution</span><span class="o">(</span><span class="n">n</span><span class="o">,</span><span class="n">a</span><span class="o">,</span><span class="n">b</span><span class="o">);</span>
        <span class="kt">long</span> <span class="n">end</span> <span class="o">=</span> <span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"\n수행시간 = "</span> <span class="o">+</span> <span class="o">(</span><span class="n">end</span><span class="o">-</span><span class="n">start</span><span class="o">));</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span> <span class="n">n</span><span class="o">,</span> <span class="kt">int</span> <span class="n">a</span><span class="o">,</span> <span class="kt">int</span> <span class="n">b</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>

        <span class="k">while</span><span class="o">(</span><span class="kc">true</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">if</span><span class="o">((</span><span class="n">a</span><span class="o">%</span><span class="mi">2</span><span class="o">)==</span><span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="o">(</span><span class="n">a</span><span class="o">-</span><span class="mi">1</span><span class="o">)==</span><span class="n">b</span><span class="o">)</span> <span class="o">{</span>
                <span class="k">break</span><span class="o">;</span>
            <span class="o">}</span><span class="k">else</span> <span class="k">if</span><span class="o">((</span><span class="n">a</span><span class="o">%</span><span class="mi">2</span><span class="o">)==</span><span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="o">(</span><span class="n">a</span><span class="o">+</span><span class="mi">1</span><span class="o">)==</span><span class="n">b</span><span class="o">)</span> <span class="o">{</span>
                <span class="k">break</span><span class="o">;</span>
            <span class="o">}</span>
            <span class="n">a</span> <span class="o">=</span> <span class="n">half</span><span class="o">(</span><span class="n">a</span><span class="o">);</span>
            <span class="n">b</span> <span class="o">=</span> <span class="n">half</span><span class="o">(</span><span class="n">b</span><span class="o">);</span>
            <span class="n">answer</span><span class="o">++;</span>
        <span class="o">}</span>

        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">half</span><span class="o">(</span><span class="kt">int</span> <span class="n">num</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">if</span><span class="o">(</span><span class="n">num</span><span class="o">%</span><span class="mi">2</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="k">return</span> <span class="n">num</span><span class="o">/</span><span class="mi">2</span><span class="o">;</span>
        <span class="k">else</span> <span class="nf">return</span> <span class="o">(</span><span class="n">num</span><span class="o">/</span><span class="mi">2</span><span class="o">)+</span><span class="mi">1</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="회고">회고</h3>
<ul>
  <li>a와 b를 인접한 수로 만들기 위해 짝수, 홀수일 경우를 구분지어 2로 나누는 등의 연산식을 생각해내는게 힘들었다.</li>
</ul>]]></content><author><name>lango</name></author><category term="Java" /><category term="blog" /><category term="algorithm" /><category term="study" /><category term="java" /><category term="programmers" /><summary type="html"><![CDATA[level 2 - 예상 대진표]]></summary></entry><entry><title type="html">[Java] 백준(브론즈-2) 10250번 - ACM 호텔</title><link href="http://localhost:4000/java/74-post/" rel="alternate" type="text/html" title="[Java] 백준(브론즈-2) 10250번 - ACM 호텔" /><published>2022-09-19T00:00:00+09:00</published><updated>2022-09-19T00:00:00+09:00</updated><id>http://localhost:4000/java/74-post</id><content type="html" xml:base="http://localhost:4000/java/74-post/"><![CDATA[<p><br /></p>

<center><img src="/assets/images/baekjoon/10250.png" width="1200" /></center>

<p><br /></p>

<p><strong>입출력 예시</strong></p>
<blockquote>
  <p>Input <br /></p>
</blockquote>
<pre>
2
6 12 10
30 50 72
</pre>
<blockquote>
  <p>Output <br /></p>
</blockquote>
<pre>
402
1203
</pre>
<p><br /></p>

<h3 id="문제-풀이">문제 풀이</h3>
<hr />
<p>이 문제는 조건식을 잘 세워야 한다. 호텔의 방을 배정할 조건을 정해보자.</p>
<ul>
  <li>엘리베이터에서 가까운 순으로 방을 배정한다.</li>
  <li>거리가 같다면, 낮은 층수부터 방을 배정한다.</li>
</ul>

<p><br /></p>

<p>아래 예시를 보면 빠르게 이해할 수 있다. <br /></p>

<p><img src="https://www.acmicpc.net/upload/images2/elevator.png" /></p>

<p>방 번호의 경우 <strong>YYX 또는 YYXX</strong> 형식으로 이루어진다. Y는 층수, X는 호수 즉, 엘리베이터와의 떨어진 거리이다. <br />
위 예시를 보면 층수 H가 6이고, 호수 W가 12인 호텔에서 10(N)번째 손님의 경우 <strong>402호</strong>를 배정받게 된다.</p>

<p><br /></p>

<h4 id="층수-구하기">층수 구하기</h4>
<p>먼저 N번째 손님이 배정받을 방의 층수를 구해보자. 입력받은 H를 활용해 어떻게 층수를 구할 수 있을까? <br />
위 예시처럼 10번째 손님일 경우 1층에서 6층까지는 자리가 없고 다시 1층부터 시작하여 4층에서 방을 배정받을 수 있다. <br />
나머지 연산을 해보니 10%6으로 4층에 배정받음을 알 수 있었다.</p>
<ul>
  <li><strong>층 수: N % H</strong></li>
</ul>

<p>그런데, 반례를 찾아보니, <strong>N번째 손님이 정상층에 배정받아야 할 경우</strong>를 고려해야 한다. <br />
예를 들어 6층 호텔에 6번째 손님일 경우 정상층인 6층을 배정받아야 하는데 위 식대로라면, 6%6=0 되어 0층이 되어버린다. <br />
그래서 정상층일 경우엔 나머지연산을 하지 않고 H층으로 부여해야 한다.</p>
<ul>
  <li><strong>정상층 배정받을 경우 층수: H</strong></li>
  <li><strong>그 외 층수: N % H</strong></li>
</ul>

<p>그리고 방 번호는 YXX 또는 YYXX 형식으로 최소 100 자리수를 지켜야 한다. 구한 층수에 100씩 곱하면 된다.</p>
<ul>
  <li><strong>정상층 배정받을 경우 층수: H * 100</strong></li>
  <li><strong>그 외 층수: (N % H) * 100</strong></li>
</ul>

<p><br />
<br /></p>

<h4 id="호수-구하기">호수 구하기</h4>
<p>이제 층수를 구했으니, 호수만 구하면 된다. 호수는 엘리베이터로부터 떨어진 거리이다. <br />
<strong>N을 H로 나눈 몫에서 +1</strong>을 하면 거리를 구할 수 있다. <br />
왜 +1을 하냐면, N=10을 H=6로 나눈 몫은 0이지만, <strong>실제 호수는 1부터 시작</strong>하기 떄문이다.</p>
<ul>
  <li><strong>호수: (N / H) + 1</strong></li>
</ul>

<p>그런데, 호수를 구할 때도 정상층에 배정받아야 할 때 고려해야 할 점이 있다. <br />
예를 들어 H=6, N=6일 때 601호를 배정받아야 하는데 위 식을 적용하여 호수를 구하면 (6/6)+1 로 602호라고 나온다. <br />
그렇기에 위 정상층을 배정받을 경우 층수 구할 때와 동일하게 <strong>+1을 해주지 않고 N/H</strong>만 해주면 된다.</p>
<ul>
  <li><strong>정상층 배정받을 경우 호수: N / H</strong></li>
  <li><strong>그 외 호수: (N / H) + 1</strong></li>
</ul>

<p><br />
<br /></p>

<h4 id="w는-필요없다">W는 필요없다?</h4>
<p>원래 입력받을 때 H W N 형식으로 3개의 입력이 주어지는데 문제를 풀다보면 <strong>W가 필요없었다.</strong> <br />
테스트케이스에서 N이 H*W값보다 큰 값으로 주어지지 않기 때문임을 알 수 있었다. <br />
고로 W는 없어도 됨을 인지할 수 있었다. <br /></p>

<p><br /></p>

<p>이제 위에서 도출한 아이디어를 가지고 코드를 작성해보자.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
</pre></td><td class="rouge-code"><pre><span class="kt">int</span> <span class="n">rs_H</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
<span class="kt">int</span> <span class="n">rs_W</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>

<span class="k">if</span><span class="o">(</span><span class="no">N</span><span class="o">%</span><span class="no">H</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span> <span class="c1">// 정상층을 배정받아야 하는 경우</span>
    <span class="n">rs_H</span> <span class="o">=</span> <span class="no">H</span> <span class="o">*</span> <span class="mi">100</span><span class="o">;</span>
    <span class="n">rs_W</span> <span class="o">=</span> <span class="no">N</span> <span class="o">/</span> <span class="no">H</span><span class="o">;</span>
    <span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">rs_H</span><span class="o">+</span><span class="n">rs_W</span><span class="o">+</span><span class="s">"\n"</span><span class="o">);</span>

<span class="o">}</span>
<span class="k">else</span> <span class="o">{</span> <span class="c1">// 그 외 층을 배정받아야 할 경우</span>
    <span class="n">rs_H</span> <span class="o">=</span> <span class="o">(</span><span class="no">N</span> <span class="o">%</span> <span class="no">H</span><span class="o">)</span> <span class="o">*</span> <span class="mi">100</span><span class="o">;</span>
    <span class="n">rs_W</span> <span class="o">=</span> <span class="o">(</span><span class="no">N</span> <span class="o">/</span> <span class="no">H</span><span class="o">)</span> <span class="o">+</span> <span class="mi">1</span><span class="o">;</span>
    <span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">rs_H</span><span class="o">+</span><span class="n">rs_W</span><span class="o">+</span><span class="s">"\n"</span><span class="o">);</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>배정받을 층수를 rs_H, 호수를 rs_W 변수에 받아 테스트케이스마다 출력하도록 작성하였다. <br />
층수와 호수 모두 정상층을 배정받을 경우와 아닌 경우를 구분지어 조건을 줄 수 있기에 합칠 수 있었다.</p>

<p><br /></p>

<h3 id="작성코드">작성코드</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">java.io.*</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">IOException</span> <span class="o">{</span>
        <span class="nc">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>
        <span class="nc">BufferedWriter</span> <span class="n">bw</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedWriter</span><span class="o">(</span><span class="k">new</span> <span class="nc">OutputStreamWriter</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">));</span>
        
        <span class="kt">int</span> <span class="no">T</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>

        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="no">T</span><span class="o">;</span> <span class="n">i</span><span class="o">++){</span>
            <span class="nc">StringTokenizer</span> <span class="n">st</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
            <span class="kt">int</span> <span class="no">H</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
            <span class="kt">int</span> <span class="no">W</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
            <span class="kt">int</span> <span class="no">N</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>

            <span class="kt">int</span> <span class="n">rs_H</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
            <span class="kt">int</span> <span class="n">rs_W</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>

            <span class="k">if</span><span class="o">(</span><span class="no">N</span><span class="o">%</span><span class="no">H</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">rs_H</span> <span class="o">=</span> <span class="no">H</span> <span class="o">*</span> <span class="mi">100</span><span class="o">;</span>
                <span class="n">rs_W</span> <span class="o">=</span> <span class="no">N</span> <span class="o">/</span> <span class="no">H</span><span class="o">;</span>
                <span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">rs_H</span><span class="o">+</span><span class="n">rs_W</span><span class="o">+</span><span class="s">"\n"</span><span class="o">);</span>

            <span class="o">}</span>
            <span class="k">else</span> <span class="o">{</span>
                <span class="n">rs_H</span> <span class="o">=</span> <span class="o">(</span><span class="no">N</span> <span class="o">%</span> <span class="no">H</span><span class="o">)</span> <span class="o">*</span> <span class="mi">100</span><span class="o">;</span>
                <span class="n">rs_W</span> <span class="o">=</span> <span class="o">(</span><span class="no">N</span> <span class="o">/</span> <span class="no">H</span><span class="o">)</span> <span class="o">+</span> <span class="mi">1</span><span class="o">;</span>
                <span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">rs_H</span><span class="o">+</span><span class="n">rs_W</span><span class="o">+</span><span class="s">"\n"</span><span class="o">);</span>
            <span class="o">}</span>
        <span class="o">}</span>
        
        <span class="n">bw</span><span class="o">.</span><span class="na">flush</span><span class="o">();</span>
        <span class="n">bw</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
        <span class="n">br</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="회고">회고</h3>
<ul>
  <li>알고리즘 문제에서 수학적 계산이 필요한 문제에서는 특정 수로 나눈 나머지나 몫을 유심히 보고 패턴을 유추해야 함을 느꼈다.</li>
</ul>

<h3 id="출처">출처</h3>
<ul>
  <li><a href="https://www.acmicpc.net/problem/10250">예시 이미지 출처</a></li>
</ul>]]></content><author><name>lango</name></author><category term="Java" /><category term="blog" /><category term="algorithm" /><category term="study" /><category term="java" /><category term="baekjoon" /><summary type="html"><![CDATA[브론즈 2 - ACM 호텔]]></summary></entry><entry><title type="html">[Java] 프로그래머스(level-2) - H-index</title><link href="http://localhost:4000/java/72-post/" rel="alternate" type="text/html" title="[Java] 프로그래머스(level-2) - H-index" /><published>2022-09-17T00:00:00+09:00</published><updated>2022-09-17T00:00:00+09:00</updated><id>http://localhost:4000/java/72-post</id><content type="html" xml:base="http://localhost:4000/java/72-post/"><![CDATA[<p><br /></p>
<center><img src="/assets/images/programmers/20220917_01.png" width="700" /></center>
<p><br /></p>

<p><strong>입출력 예시</strong></p>
<blockquote>
  <p>Input-1 <br />
<strong>citations = [3, 0, 6, 1, 5]</strong> <br />
Output-1 <br />
<strong>3</strong></p>
</blockquote>

<p><br /></p>

<h3 id="문제-풀이">문제 풀이</h3>
<hr />
<p>문제 풀이에 앞서 H-index가 뭔지 짚고 넘어가자.</p>

<blockquote>
  <p><strong>h-index</strong>란? <br />
위키피디아에 기재된 내용을 보면 “h-index는 주어진 저자/저널이 각각 최소 h회 인용된 최소 h개의 논문을 출판 한 h의 최대값으로 정의됩니다.” 라고 한다.</p>
</blockquote>

<p>위키피디아 내용을 보면 <strong>내림차순으로 정렬된 배열</strong>이 있어야 h-index를 구할 수 있다. <br />
그리고 각각의 인덱스값과 인덱스에 해당하는 값을 비교해 <strong>인덱스가 인덱스에 해당하는 값보다 크거나 같으면 그 값이 h-index</strong>라고 이해하면 된다.</p>

<p>말로는 잘 이해가 안되니 citations배열 [3, 0, 6, 1, 5]을 예시로 들어보자.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="rouge-code"><pre>citations = [6,5,3,1,0] // 내림차순 정렬

i=1, citations=6 -&gt; index&lt;citations -&gt; h-index 아님
i=2, citations=5 -&gt; index&lt;citations -&gt; h-index 아님
i=3, citations=3 -&gt; index==citations -&gt; i값이 h-index

</pre></td></tr></tbody></table></code></pre></div></div>
<p>위 과정대로 h-index를 구할 수 있다. 이제 코드를 작성해보자.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="rouge-code"><pre><span class="nc">Integer</span><span class="o">[]</span> <span class="n">cit</span> <span class="o">=</span> <span class="nc">Arrays</span><span class="o">.</span><span class="na">stream</span><span class="o">(</span><span class="n">citations</span><span class="o">).</span><span class="na">boxed</span><span class="o">().</span><span class="na">toArray</span><span class="o">(</span><span class="nc">Integer</span><span class="o">[]::</span><span class="k">new</span><span class="o">);</span> 
<span class="nc">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">cit</span><span class="o">,</span> <span class="nc">Collections</span><span class="o">.</span><span class="na">reverseOrder</span><span class="o">());</span>

<span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
<span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
<span class="kt">boolean</span> <span class="n">none</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>먼저 citations를 내림차순 정렬한 cit 배열을 초기화하고, h-index를 담을 answer와 index 값을 담을 i, h가 0으로만 존재할 때를 검증할 none 변수를 초기화했다.</p>

<p><br /></p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
</pre></td><td class="rouge-code"><pre><span class="k">for</span><span class="o">(;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">cit</span><span class="o">.</span><span class="na">length</span><span class="o">-</span><span class="mi">1</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
    <span class="k">if</span><span class="o">((</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">)&lt;=</span><span class="n">cit</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">&amp;&amp;</span> <span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">2</span><span class="o">)&gt;</span><span class="n">cit</span><span class="o">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">])</span> <span class="o">{</span>
        <span class="n">answer</span> <span class="o">=</span> <span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">;</span>
        <span class="k">break</span><span class="o">;</span>
    <span class="o">}</span>
    <span class="k">else</span> <span class="nf">if</span><span class="o">((</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">)&gt;</span><span class="n">cit</span><span class="o">[</span><span class="n">i</span><span class="o">])</span> <span class="n">none</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
<span class="o">}</span>
<span class="k">if</span><span class="o">(</span><span class="n">none</span><span class="o">==</span><span class="kc">false</span><span class="o">)</span> <span class="n">answer</span><span class="o">=</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">;</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>cit에서 마지막-1까지 순회하며 현재 인덱스값이 cit값보다 작거나 같고, 다음 인덱스값이 다음 cit값보다 크면 현재 인덱스값이 h-index임을 표현하였다. <br />
그리고 인덱스 값이 하나라도 크다면 none을 true로 변경한다. none을 통해 인덱스값이 항상 작을 때 마지막 인덱스값이 h-index임을 구할 수 있다.</p>

<p><br /></p>

<h3 id="작성-코드">작성 코드</h3>
<hr />
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span><span class="o">[]</span> <span class="n">citations</span>	<span class="o">=</span> <span class="o">{</span><span class="mi">3</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">6</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">5</span><span class="o">};</span>
        <span class="c1">// int[] citations = {10,8,5,4,3};</span>
        <span class="c1">// int[] citations = {25,8,5,3,3};</span>
        <span class="c1">// int[] citations = {4,4,4};</span>
        <span class="c1">// int[] citations = {10,10,10,10,10};</span>
        <span class="c1">// int[] citations = {0,0,0,0,0};</span>

        <span class="kt">long</span> <span class="n">start</span> <span class="o">=</span> <span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        <span class="n">solution2</span><span class="o">(</span><span class="n">citations</span><span class="o">);</span>
        <span class="kt">long</span> <span class="n">end</span> <span class="o">=</span> <span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"\n수행시간 = "</span> <span class="o">+</span> <span class="o">(</span><span class="n">end</span><span class="o">-</span><span class="n">start</span><span class="o">));</span>
    <span class="o">}</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">citations</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">Integer</span><span class="o">[]</span> <span class="n">cit</span> <span class="o">=</span> <span class="nc">Arrays</span><span class="o">.</span><span class="na">stream</span><span class="o">(</span><span class="n">citations</span><span class="o">).</span><span class="na">boxed</span><span class="o">().</span><span class="na">toArray</span><span class="o">(</span><span class="nc">Integer</span><span class="o">[]::</span><span class="k">new</span><span class="o">);</span> 
        <span class="nc">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">cit</span><span class="o">,</span> <span class="nc">Collections</span><span class="o">.</span><span class="na">reverseOrder</span><span class="o">());</span>

        <span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="kt">boolean</span> <span class="n">none</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>

        <span class="k">for</span><span class="o">(;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">cit</span><span class="o">.</span><span class="na">length</span><span class="o">-</span><span class="mi">1</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">if</span><span class="o">((</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">)&lt;=</span><span class="n">cit</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">&amp;&amp;</span> <span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">2</span><span class="o">)&gt;</span><span class="n">cit</span><span class="o">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">])</span> <span class="o">{</span>
                <span class="n">answer</span> <span class="o">=</span> <span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">;</span>
                <span class="k">break</span><span class="o">;</span>
            <span class="o">}</span>
            <span class="k">else</span> <span class="nf">if</span><span class="o">((</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">)&gt;</span><span class="n">cit</span><span class="o">[</span><span class="n">i</span><span class="o">])</span> <span class="n">none</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
        <span class="o">}</span>

        <span class="k">if</span><span class="o">(</span><span class="n">none</span><span class="o">==</span><span class="kc">false</span><span class="o">)</span> <span class="n">answer</span><span class="o">=</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">;</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="회고">회고</h3>
<ul>
  <li>문제를 봐도 H-index에 대해 이해가 잘 안되었는데, 링크된 <a href="https://en.wikipedia.org/wiki/H-index">위키피디아</a> 글을 보고 이해하였다.</li>
  <li>현재 작성한 코드가 맘에 안든다.. 다음에 다시 풀며 간결한 코드로 수정할 예정이다.</li>
</ul>]]></content><author><name>lango</name></author><category term="Java" /><category term="blog" /><category term="algorithm" /><category term="study" /><category term="java" /><category term="programmers" /><summary type="html"><![CDATA[level 2 - H-index]]></summary></entry><entry><title type="html">[Java] 프로그래머스(level-2) - 전화번호 목록</title><link href="http://localhost:4000/java/73-post/" rel="alternate" type="text/html" title="[Java] 프로그래머스(level-2) - 전화번호 목록" /><published>2022-09-17T00:00:00+09:00</published><updated>2022-09-17T00:00:00+09:00</updated><id>http://localhost:4000/java/73-post</id><content type="html" xml:base="http://localhost:4000/java/73-post/"><![CDATA[<p><br /></p>
<center><img src="/assets/images/programmers/20220917_02.png" width="700" /></center>
<p><br /></p>

<p><strong>입출력 예시</strong></p>
<blockquote>
  <p>Input-1 <br />
<strong>phone_book = [“119”, “97674223”, “1195524421”]</strong> <br />
Output-1 <br />
<strong>false</strong></p>
</blockquote>

<blockquote>
  <p>Input-2 <br />
<strong>phone_book = [“123”,”456”,”789”]</strong> <br />
Output-2 <br />
<strong>true</strong></p>
</blockquote>

<blockquote>
  <p>Input-1 <br />
<strong>phone_book = [“12”,”123”,”1235”,”567”,”88”]</strong> <br />
Output-1 <br />
<strong>false</strong></p>
</blockquote>

<p><br /></p>

<h3 id="문제-풀이">문제 풀이</h3>
<hr />
<p>이 문제는 처음엔 이중 반복문으로 풀어봤는데 효율성 테스트에서 시간초과가 발생되어 반복문을 한 번만 돌려서 해결해야 했다. <br />
또한 phone_book의 각 원소들의 접두사 포함여부를 검증하기 위해 contains나 indexOf를 사용하려 했는데, String 관련 함수중 <strong>startsWith</strong> 함수를 찾게 되었다.</p>

<h4 id="1-오름차순-정렬">1. 오름차순 정렬</h4>
<p>먼저 <strong>이중 반복문 없이 하나의 반복문 만으로 어떻게 각 단어들의 접두어를 확인할까?</strong> 바로 <strong>오름차순 정렬</strong>을 활용하면 된다. <br />
예를 들어 phone_book 배열이 [“6”, “12”, “6789”] 원소를 가지고 있다고 한다면, “6”과 “6789”의 접두어가 같기에 두번 비교해야 한다. 그런데, 오름차순 정렬을 하게 되면 [“6”, “6789”, “12”]가 되고, “6”과 “12”는 서로 접두어로 시작하지 않기에 <strong>마지막 원소까지 비교할 필요가 없어진다.</strong> 단지 현재 원소와 다음 원소의 접두어만 비교하면 된다.</p>

<h4 id="2-startswith-함수-활용">2. startsWith 함수 활용</h4>
<p>하나의 반복문을 돌면서 현재 문자열의 접두어가 다음 문자열의 접두어가 되는지 확인하기 위해 startsWith() 함수를 활용하자.</p>

<blockquote>
  <p><strong>startsWith()</strong> <br />
startsWith() 함수는 대상 문자열이 특정 문자 또는 문자열로 시작하는지 즉, 접두사가 되는지 체크하는 함수이다. <br />
해당 문자열로 시작되는지 여부를 확인하고 boolean 에 맞춰 true/false 값을 리턴한다.</p>
</blockquote>

<p>이제 오름차순 정렬과 startsWith 함수를 활용해 코드를 작성해보자.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="rouge-code"><pre><span class="nc">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">phone_book</span><span class="o">);</span>
<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">phone_book</span><span class="o">.</span><span class="na">length</span><span class="o">-</span><span class="mi">1</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
    <span class="k">if</span><span class="o">(</span><span class="n">phone_book</span><span class="o">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">].</span><span class="na">startsWith</span><span class="o">(</span><span class="n">phone_book</span><span class="o">[</span><span class="n">i</span><span class="o">]))</span> <span class="n">answer</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>   
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>phone_book 배열을 오름차순으로 정렬하고 for문에서 현재요소의 접두어가 다음 요소의 접두어가 되는지 확인하면 된다.</p>

<p><br /></p>

<h3 id="작성-코드">작성 코드</h3>
<hr />
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">java.util.Arrays</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">String</span><span class="o">[]</span> <span class="n">phone_book</span> <span class="o">=</span> <span class="o">{</span><span class="s">"119"</span><span class="o">,</span> <span class="s">"97674223"</span><span class="o">,</span> <span class="s">"1195524421"</span><span class="o">};</span>
        <span class="c1">// String[] phone_book = {"AA","BB","CC","DD","DDEE","FF"};</span>
        <span class="c1">// String[] phone_book = {"123","456","789"};</span>

        <span class="kt">long</span> <span class="n">start</span> <span class="o">=</span> <span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        <span class="n">solution</span><span class="o">(</span><span class="n">phone_book</span><span class="o">);</span>
        <span class="kt">long</span> <span class="n">end</span> <span class="o">=</span> <span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"\n수행시간 = "</span> <span class="o">+</span> <span class="o">(</span><span class="n">end</span><span class="o">-</span><span class="n">start</span><span class="o">));</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">boolean</span> <span class="nf">solution</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">phone_book</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">boolean</span> <span class="n">answer</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
        <span class="nc">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">phone_book</span><span class="o">);</span>

        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">phone_book</span><span class="o">.</span><span class="na">length</span><span class="o">-</span><span class="mi">1</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="n">phone_book</span><span class="o">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">].</span><span class="na">startsWith</span><span class="o">(</span><span class="n">phone_book</span><span class="o">[</span><span class="n">i</span><span class="o">]))</span> <span class="n">answer</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>   
        <span class="o">}</span>

        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="회고">회고</h3>
<ul>
  <li>효율성을 높이기 위해선 이중 반복문을 최대한 지양해야 한다는 것이 중요하다 느낄 수 있었고, 한번의 정렬만으로 불필요한 반복과 비교를 줄일 수 있었다.</li>
  <li>String 관련 함수중 startsWith()와 endsWith() 에 대해서 공부할 수 있었다.</li>
</ul>]]></content><author><name>lango</name></author><category term="Java" /><category term="blog" /><category term="algorithm" /><category term="study" /><category term="java" /><category term="programmers" /><summary type="html"><![CDATA[level 2 - 전화번호 목록]]></summary></entry></feed>