<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2022-09-15T16:14:04+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">lango’s DevLog</title><subtitle>developer</subtitle><author><name>lango</name></author><entry><title type="html">[Java] 프로그래머스(level-2) - 카펫</title><link href="http://localhost:4000/java/65-post/" rel="alternate" type="text/html" title="[Java] 프로그래머스(level-2) - 카펫" /><published>2022-09-15T00:00:00+09:00</published><updated>2022-09-15T00:00:00+09:00</updated><id>http://localhost:4000/java/65-post</id><content type="html" xml:base="http://localhost:4000/java/65-post/"><![CDATA[<p><br /></p>
<center><img src="/assets/images/programmers/20220915_01.png" width="700" /></center>
<p><br /></p>

<p><strong>제한사항</strong></p>
<ul>
  <li>갈색 격자의 수 brown은 8 이상 5,000 이하인 자연수입니다.</li>
  <li>노란색 격자의 수 yellow는 1 이상 2,000,000 이하인 자연수입니다.</li>
  <li>카펫의 가로 길이는 세로 길이와 같거나, 세로 길이보다 깁니다.</li>
</ul>

<p><br /></p>

<p><strong>입출력 예시</strong></p>
<blockquote>
  <p>Input-1 <br />
<strong>brown=10</strong> <br />
<strong>yellow=2</strong> <br />
Output-1 <br />
<strong>[4,3]</strong></p>
</blockquote>

<blockquote>
  <p>Input-2 <br />
<strong>brown=8</strong> <br />
<strong>yellow=1</strong> <br />
Output-2 <br />
<strong>[3,3]</strong></p>
</blockquote>

<blockquote>
  <p>Input-3 <br />
<strong>brown=24</strong> <br />
<strong>yellow=24</strong> <br />
Output-3 <br />
<strong>[8,6]</strong></p>
</blockquote>

<p><br /></p>

<h3 id="문제-풀이">문제 풀이</h3>
<hr />
<p>brown과 yellow의 약수를 활용해 접근하였다. <br /></p>

<p><strong>왜 약수를 통해 접근하였을까?</strong> <br />
brown을 b, yellow를 y라 하고 가로크기를 w, 세로크기를 h라 하자.<br />
b+y 값은 w와 h의 곱과 같음을 알 수 있다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
</pre></td><td class="rouge-code"><pre>b b b b 
b y y b
b b b b
- b=10, y=2, b+y=12
- w=4, h=3, w*h=12

b b b
b y b
b b b
- b=8, y=1, b+y=9
- w=3, h=3, w*h=9

b b b b b b b b
b y y y y y y b
b y y y y y y b
b y y y y y y b
b y y y y y y b
b b b b b b b b
- b=24, y=24, b+y=48
- w=8, h=6, w*h=48
</pre></td></tr></tbody></table></code></pre></div></div>
<p>그리고 b와 y는 b+y의 약수중 하나의 수로 구성되어 있다. b+y의 약수들 중에 w와 h를 찾으면 된다.</p>

<h4 id="w와-h-구하기">w와 h 구하기</h4>
<p>b+y를 sum이라 하면, sum의 약수들을 구하고 sum만큼 반복하며 <strong>sum과 두 약수의 곱이 같을 때</strong> 두 약수가 w와 h가 된다. <br /></p>

<p>그런데, 아래 예를 보자.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="rouge-code"><pre>b=10, y=2, sum=12, divisor=[1,2,3,4,6,12] 일 떄
i=1이면, 1*12 = 12
i=2이면, 2*6 = 12
i=3이면, 3*4 = 12
...
</pre></td></tr></tbody></table></code></pre></div></div>

<p>각 i별로 매칭되는 i를 곱하면 모든 수가 sum의 약수이기에 모두 sum을 구할 수 있다. <br />
그렇기에 가로와 세로크기를 구할 때 아래 식을 검증해야 한다.</p>
<ul>
  <li><strong>(w-2)(h-2) = yellow</strong></li>
</ul>

<p><strong>w와 h에 각각 2를 빼고 곱한값</strong>이 세로크기 즉, yellow 값이 되어야 한다. <br />
이 식을 대입해서 생각해보면 (w-2)(h-2) == 6을 만족해야 한다.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre>i=1이면, (1-2)*(12-2) = -10
i=2이면, (2-2)*(6-2) = 0
i=3이면, (3-2)*(4-2) = 2 (=yellow)
</pre></td></tr></tbody></table></code></pre></div></div>
<p>위와 같이 i가 3일 때 조건을 만족하는 것을 알 수 있다.</p>

<p>이제 카펫의 가로와 세로크기를 구하는 방법을 알았으니, 코드로 작성해보자.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre><span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">div</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span> <span class="c1">// 약수를 담을 리스트</span>
<span class="kt">int</span> <span class="n">sum</span> <span class="o">=</span> <span class="n">brown</span><span class="o">+</span><span class="n">yellow</span><span class="o">;</span> <span class="c1">// brown+yellow</span>
<span class="kt">int</span><span class="o">[]</span> <span class="n">answer</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="mi">2</span><span class="o">];</span> <span class="c1">// return 배열</span>

<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;=</span><span class="n">sum</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
    <span class="k">if</span><span class="o">(</span><span class="n">sum</span><span class="o">%</span><span class="n">i</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="n">div</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">i</span><span class="o">);</span> <span class="c1">// 약수만 div에 저장</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>약수들을 담을 ArrayList div 리스트, brown과 yellow의 합을 담을 sum 변수, 가로크기와 세로크기를 담아 반환할 answer 배열을 초기화하였다. <br />
그리고 sum만큼 반복하며 약수들을 div에 담았다. <strong>이때, 약수를 담을 div를 int배열로 만들지않고 ArrayList로 선언한 이유는, 약수의 개수를 미리 알 수 없기 때문이다.</strong></p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre><span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;=</span><span class="n">div</span><span class="o">.</span><span class="na">size</span><span class="o">()/</span><span class="mi">2</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span> <span class="c1">// div의 반만큼만 반복</span>
    <span class="k">if</span><span class="o">((</span><span class="n">div</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">)-</span><span class="mi">2</span><span class="o">)*(</span><span class="n">sum</span><span class="o">/</span><span class="n">div</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">)-</span><span class="mi">2</span><span class="o">)</span> <span class="o">==</span> <span class="n">yellow</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">answer</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">=</span> <span class="n">sum</span><span class="o">/</span><span class="n">div</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
        <span class="n">answer</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="o">=</span> <span class="n">div</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
        <span class="k">break</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>약수리스트인 <strong>div의 반만큼만 반복해도 [sum/현재약수] 하여 모든 약수를 알 수 있다</strong> <br />
반복문 내에서 각 약수마다 (w-2)(h-2)==yellow 식을 검증하여 가로크기와 세로크기를 구했다.</p>

<p><br /></p>

<h3 id="작성-코드">작성 코드</h3>
<hr />
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">Scanner</span> <span class="n">sc</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Scanner</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
        <span class="kt">int</span> <span class="n">b</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
        <span class="kt">int</span> <span class="n">y</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
        
        <span class="kt">long</span> <span class="n">start</span> <span class="o">=</span> <span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        <span class="n">solution</span><span class="o">(</span><span class="n">b</span><span class="o">,</span><span class="n">y</span><span class="o">);</span>
        <span class="kt">long</span> <span class="n">end</span> <span class="o">=</span> <span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"\n수행시간 = "</span> <span class="o">+</span> <span class="o">(</span><span class="n">end</span><span class="o">-</span><span class="n">start</span><span class="o">));</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span><span class="o">[]</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span> <span class="n">brown</span><span class="o">,</span> <span class="kt">int</span> <span class="n">yellow</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">div</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>
        <span class="kt">int</span> <span class="n">sum</span> <span class="o">=</span> <span class="n">brown</span><span class="o">+</span><span class="n">yellow</span><span class="o">;</span>
        <span class="kt">int</span><span class="o">[]</span> <span class="n">answer</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="mi">2</span><span class="o">];</span>

        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;=</span><span class="n">sum</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="n">sum</span><span class="o">%</span><span class="n">i</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="n">div</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
        <span class="o">}</span>

        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;=</span><span class="n">div</span><span class="o">.</span><span class="na">size</span><span class="o">()/</span><span class="mi">2</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">if</span><span class="o">((</span><span class="n">div</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">)-</span><span class="mi">2</span><span class="o">)*(</span><span class="n">sum</span><span class="o">/</span><span class="n">div</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">)-</span><span class="mi">2</span><span class="o">)</span> <span class="o">==</span> <span class="n">yellow</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">answer</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">=</span> <span class="n">sum</span><span class="o">/</span><span class="n">div</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
                <span class="n">answer</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="o">=</span> <span class="n">div</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
                <span class="k">break</span><span class="o">;</span>
            <span class="o">}</span>
        <span class="o">}</span>
        
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="회고">회고</h3>
<ul>
  <li>약수를 활용해 접근하는 것까지는 하였지만, (w-2)(h-2)==yellow 식을 떠올리기가 힘들었다. 특정 수를 구할 수 있는 식을 많이 세워봐야한다.</li>
</ul>]]></content><author><name>lango</name></author><category term="Java" /><category term="blog" /><category term="algorithm" /><category term="study" /><category term="java" /><category term="programmers" /><summary type="html"><![CDATA[level 2 - 카펫]]></summary></entry><entry><title type="html">[Java] 프로그래머스(level-1) - 신고 결과 받기</title><link href="http://localhost:4000/java/66-post/" rel="alternate" type="text/html" title="[Java] 프로그래머스(level-1) - 신고 결과 받기" /><published>2022-09-15T00:00:00+09:00</published><updated>2022-09-15T00:00:00+09:00</updated><id>http://localhost:4000/java/66-post</id><content type="html" xml:base="http://localhost:4000/java/66-post/"><![CDATA[<p><br /></p>
<center><img src="/assets/images/programmers/20220915_02.png" width="700" /></center>
<p><br /></p>

<p>상세한 문제 내용은 <a href="https://school.programmers.co.kr/learn/courses/30/lessons/92334">여기</a>에서 확인 바랍니다.
<br /></p>

<p><strong>제한사항</strong></p>
<ul>
  <li>2 ≤ id_list의 길이 ≤ 1,000
    <ul>
      <li>1 ≤ id_list의 원소 길이 ≤ 10</li>
      <li>id_list의 원소는 이용자의 id를 나타내는 문자열이며 알파벳 소문자로만 이루어져 있습니다.</li>
      <li>id_list에는 같은 아이디가 중복해서 들어있지 않습니다.</li>
    </ul>
  </li>
  <li>1 ≤ report의 길이 ≤ 200,000
    <ul>
      <li>3 ≤ report의 원소 길이 ≤ 21</li>
      <li>report의 원소는 “이용자id 신고한id”형태의 문자열입니다.</li>
      <li>예를 들어 “muzi frodo”의 경우 “muzi”가 “frodo”를 신고했다는 의미입니다.</li>
      <li>id는 알파벳 소문자로만 이루어져 있습니다.</li>
      <li>이용자id와 신고한id는 공백(스페이스)하나로 구분되어 있습니다.</li>
      <li>자기 자신을 신고하는 경우는 없습니다.</li>
    </ul>
  </li>
  <li>1 ≤ k ≤ 200, k는 자연수입니다.</li>
  <li>return 하는 배열은 id_list에 담긴 id 순서대로 각 유저가 받은 결과 메일 수를 담으면 됩니다.</li>
</ul>

<p><br /></p>

<p><strong>입출력 예시</strong></p>
<blockquote>
  <p>Input-1 <br />
<strong>id_list = [“muzi”, “frodo”, “apeach”, “neo”]</strong> <br />
<strong>report = [“muzi frodo”,”apeach frodo”,”frodo neo”,”muzi neo”,”apeach muzi”]</strong> <br />
<strong>k = 2</strong> <br />
Output-1 <br />
<strong>[2,1,1,0]</strong></p>
</blockquote>

<blockquote>
  <p>Input-2 <br />
<strong>id_list = [“con”, “ryan”]</strong> <br />
<strong>report = [“ryan con”, “ryan con”, “ryan con”, “ryan con”]</strong> <br />
<strong>k = 3</strong> <br />
Output-2 <br />
<strong>[0,0]</strong></p>
</blockquote>

<p><br /></p>

<h3 id="문제-풀이">문제 풀이</h3>
<hr />
<p>사용자가 들어있는 배열 id_list과, [신고자 피신고자] 배열인 report에서 k번 이상 신고되어 정지된 피신고자를 신고한 사용자를 구해야 한다. <br />
이를 위해 도출한 아이디어는 아래와 같다.</p>
<ol>
  <li>신고자 신고메일 수신횟수를 담을 LinkedHashMap인 result을 선언하고 id:0으로 초기화한다.</li>
  <li>같은 id가 같은 id를 신고하는 건 1번으로 처리한다 -&gt; report를 중복없는 HashSet으로 저장한다.</li>
  <li>reportSet을 돌며 신고당한자와 신고횟수를 HashMap에 저장한다.</li>
  <li>reportSet의 신고자:피신고자돌며 reportMap의 피신고자:신고횟수와 비교하여 k이상이면 result에서 신고자 메일 수신횟수를 증가시킨다.</li>
</ol>

<p>위 아이디어를 코드로 작성해보자.</p>

<h4 id="1번-linkedhaspmap-초기화">1번. LinkedHaspMap 초기화</h4>
<p>먼저, 신고하여 정지된 사용자마다 메일을 받기 위해 id_list의 순서대로 [id:메일횟수] 형식을 지켜 저장하기 위해 <strong>LinkedHashMap을</strong> 활용했다. <br />
id_list를 순회하며 LinkedHashMap인 result을 id:0으로 초기화했다.</p>

<blockquote>
  <p><strong>LinkedHashMap</strong>이란? <br />
HashMap을 상속받아 만들어졌으며, 순서가 유지되는 HashMap이다.</p>
</blockquote>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="rouge-code"><pre><span class="nc">LinkedHashMap</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">result</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">LinkedHashMap</span><span class="o">&lt;&gt;();</span>
<span class="k">for</span><span class="o">(</span><span class="nc">String</span> <span class="n">id</span> <span class="o">:</span> <span class="n">id_list</span><span class="o">)</span> <span class="o">{</span>
    <span class="n">result</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">id</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="2번-hashset을-활용해-중복-신고건-제거">2번. HashSet을 활용해 중복 신고건 제거</h4>
<p>문제 요구사항에서 같은 사용자가 같은 사용자를 신고한 건은 1건으로 처리한다고 하니, <strong>report배열의 중복 원소를 제거</strong>해야 한다. <br /></p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="nc">HashSet</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">reportSet</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HashSet</span><span class="o">&lt;&gt;();</span>
<span class="k">for</span><span class="o">(</span><span class="nc">String</span> <span class="n">s</span> <span class="o">:</span> <span class="n">report</span><span class="o">)</span> <span class="n">reportSet</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">s</span><span class="o">);</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>중복이 허용되지 않는 HashSet에 report배열의 원소를 저장하여 중복을 제거했다.</p>

<h4 id="3번-피신고자와-신고횟수를-담은-hashmap-생성">3번. 피신고자와 신고횟수를 담은 HashMap 생성</h4>
<p>피신고자가 몇번 신고를 당했는지, k번 이상 신고당해 정지를 할지 말지를 알기 위해 중복이 제거된 reportSet을 돌며 [피신고자:신고횟수]를 저장한다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="rouge-code"><pre><span class="nc">HashMap</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">reportMap</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HashMap</span><span class="o">&lt;&gt;();</span>
<span class="k">for</span><span class="o">(</span><span class="nc">String</span> <span class="n">s</span> <span class="o">:</span> <span class="n">reportSet</span><span class="o">)</span> <span class="o">{</span>
    <span class="nc">String</span> <span class="n">reported</span> <span class="o">=</span> <span class="n">s</span><span class="o">.</span><span class="na">split</span><span class="o">(</span><span class="s">" "</span><span class="o">)[</span><span class="mi">1</span><span class="o">];</span>
    <span class="n">reportMap</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">reported</span><span class="o">,</span> <span class="n">reportMap</span><span class="o">.</span><span class="na">getOrDefault</span><span class="o">(</span><span class="n">reported</span><span class="o">,</span> <span class="mi">0</span><span class="o">)+</span><span class="mi">1</span><span class="o">);</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>3번 과정을 통해 reportMap에 저장되는 과정을 보자.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="rouge-code"><pre>신고자:muzi, 피신고자: frodo -&gt; reportMap=[frodo:1]
신고자:apeach, 피신고자: frodo -&gt; reportMap=[frodo:2]
신고자:frodo, 피신고자: neo -&gt; reportMap=[frodo:2, neo:1]
신고자:muzi, 피신고자: neo -&gt; reportMap=[frodo:2, neo:2]
신고자:apeach, 피신고자: muzi -&gt; reportMap=[frodo:2, neo:2, muzi:1]
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="4번-신고자가-받을-메일횟수-구하기">4번. 신고자가 받을 메일횟수 구하기</h4>
<p>마지막으로, 정지된 사용자를 신고한 신고자가 받을 메일의 횟수를 구하면 된다. <br />
reportSet의 신고자(reporter)가 신고한 피신고자(reported)와 reportMap의 key(피신고자)가 같다면, <strong>k번 이상 신고되어 정지되었는지 확인</strong>한다. <br />
그리고 정지된 사용자라면 맨 처음 작성한 result에서 해당 <strong>신고자를 찾아 메일횟수 1을 증가</strong>시킨다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre><span class="k">for</span><span class="o">(</span><span class="nc">String</span> <span class="n">s</span> <span class="o">:</span> <span class="n">reportSet</span><span class="o">)</span> <span class="o">{</span>
    <span class="nc">String</span> <span class="n">reporter</span> <span class="o">=</span> <span class="n">s</span><span class="o">.</span><span class="na">split</span><span class="o">(</span><span class="s">" "</span><span class="o">)[</span><span class="mi">0</span><span class="o">];</span>
    <span class="nc">String</span> <span class="n">reported</span> <span class="o">=</span> <span class="n">s</span><span class="o">.</span><span class="na">split</span><span class="o">(</span><span class="s">" "</span><span class="o">)[</span><span class="mi">1</span><span class="o">];</span>
    <span class="k">for</span><span class="o">(</span><span class="nc">Map</span><span class="o">.</span><span class="na">Entry</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">entry</span> <span class="o">:</span> <span class="n">reportMap</span><span class="o">.</span><span class="na">entrySet</span><span class="o">())</span> <span class="o">{</span>
        <span class="k">if</span><span class="o">(</span><span class="n">reported</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">entry</span><span class="o">.</span><span class="na">getKey</span><span class="o">())</span> <span class="o">&amp;&amp;</span> <span class="n">entry</span><span class="o">.</span><span class="na">getValue</span><span class="o">()&gt;=</span><span class="n">k</span><span class="o">)</span> <span class="n">result</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">reporter</span><span class="o">,</span> <span class="n">result</span><span class="o">.</span><span class="na">getOrDefault</span><span class="o">(</span><span class="n">reporter</span><span class="o">,</span> <span class="mi">0</span><span class="o">)+</span><span class="mi">1</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>4번 과정을 통해 result에 변경점을 알아보면,</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre>reportMap=[frodo:2, neo:2, muzi:1]

신고자:muzi, 피신고자: frodo -&gt; frodo는 정지된 사용자로 muzi에게 메일을 전송한다. -&gt; result=[muzi:1,frodo:0, apeach:0, neo:0]
신고자:apeach, 피신고자: frodo -&gt; frodo는 정지된 사용자로 apeach에게 메일을 전송한다. -&gt; result=[muzi:1,frodo:0, apeach:1, neo:0]
신고자:frodo, 피신고자: neo -&gt; neo는 정지된 사용자로 frodo에게 메일을 전송한다. -&gt; result=[muzi:1,frodo:1, apeach:1, neo:0]
신고자:muzi, 피신고자: neo -&gt; neo는 정지된 사용자로 muzi에게 메일을 전송한다. -&gt; result=[muzi:2,frodo:1, apeach:1, neo:0]
신고자:apeach, 피신고자: muzi -&gt; muzi는 1번 신고되어 정지되지 않았기에 apeach에게 메일을 전송하지 않는다. -&gt; result=[muzi:2,frodo:1, apeach:1, neo:0]
</pre></td></tr></tbody></table></code></pre></div></div>
<p><br /></p>

<p>이렇게 작성한 코드를 제출하니 모든 테스트케이스를 정상적으로 통과하였다.</p>

<p><br /></p>

<h3 id="작성-코드">작성 코드</h3>
<hr />
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">String</span><span class="o">[]</span> <span class="n">id_list</span> <span class="o">=</span> <span class="o">{</span><span class="s">"muzi"</span><span class="o">,</span> <span class="s">"frodo"</span><span class="o">,</span> <span class="s">"apeach"</span><span class="o">,</span> <span class="s">"neo"</span><span class="o">};</span>
        <span class="nc">String</span><span class="o">[]</span> <span class="n">report</span> <span class="o">=</span> <span class="o">{</span><span class="s">"muzi frodo"</span><span class="o">,</span><span class="s">"apeach frodo"</span><span class="o">,</span><span class="s">"frodo neo"</span><span class="o">,</span><span class="s">"muzi neo"</span><span class="o">,</span><span class="s">"apeach muzi"</span><span class="o">};</span>
        <span class="c1">// String[] id_list = {"con", "ryan"};</span>
        <span class="c1">// String[] report = {"ryan con", "ryan con", "ryan con", "ryan con"};</span>
        <span class="kt">int</span> <span class="n">k</span><span class="o">=</span><span class="mi">2</span><span class="o">;</span>

        <span class="kt">long</span> <span class="n">start</span> <span class="o">=</span> <span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        <span class="n">solution</span><span class="o">(</span><span class="n">id_list</span><span class="o">,</span> <span class="n">report</span><span class="o">,</span> <span class="n">k</span><span class="o">);</span>
        <span class="kt">long</span> <span class="n">end</span> <span class="o">=</span> <span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"\n수행시간 = "</span> <span class="o">+</span> <span class="o">(</span><span class="n">end</span><span class="o">-</span><span class="n">start</span><span class="o">));</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span><span class="o">[]</span> <span class="nf">solution</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">id_list</span><span class="o">,</span> <span class="nc">String</span><span class="o">[]</span> <span class="n">report</span><span class="o">,</span> <span class="kt">int</span> <span class="n">k</span><span class="o">)</span> <span class="o">{</span>
        <span class="c1">// 1. 아이디어 </span>
        <span class="c1">// 1.1 신고자 신고메일 수신횟수를 담을 LinkedHashMap인 result을 선언하고 id:0으로 초기화한다.</span>
        <span class="c1">// 1.2 같은 id가 같은 id를 신고하는 건 1번으로 처리한다 -&gt; report를 중복없는 HashSet으로 저장한다.</span>
        <span class="c1">// 1.3 reportSet을 돌며 신고당한자와 신고횟수를 HashMap에 저장한다.</span>
        <span class="c1">// 1.4 reportSet의 신고자:피신고자돌며 reportMap의 피신고자:신고횟수와 비교하여 k이상이면 result에서 신고자 메일 수신횟수를 증가시킨다.</span>
        <span class="nc">LinkedHashMap</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">result</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">LinkedHashMap</span><span class="o">&lt;&gt;();</span>
        <span class="k">for</span><span class="o">(</span><span class="nc">String</span> <span class="n">id</span> <span class="o">:</span> <span class="n">id_list</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">result</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">id</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span>
        <span class="o">}</span>

        <span class="nc">HashSet</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">reportSet</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HashSet</span><span class="o">&lt;&gt;();</span>
        <span class="k">for</span><span class="o">(</span><span class="nc">String</span> <span class="n">s</span> <span class="o">:</span> <span class="n">report</span><span class="o">)</span> <span class="n">reportSet</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">s</span><span class="o">);</span>

        <span class="nc">HashMap</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">reportMap</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HashMap</span><span class="o">&lt;&gt;();</span>
        <span class="k">for</span><span class="o">(</span><span class="nc">String</span> <span class="n">s</span> <span class="o">:</span> <span class="n">reportSet</span><span class="o">)</span> <span class="o">{</span>
            <span class="nc">String</span> <span class="n">reported</span> <span class="o">=</span> <span class="n">s</span><span class="o">.</span><span class="na">split</span><span class="o">(</span><span class="s">" "</span><span class="o">)[</span><span class="mi">1</span><span class="o">];</span>
            <span class="n">reportMap</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">reported</span><span class="o">,</span> <span class="n">reportMap</span><span class="o">.</span><span class="na">getOrDefault</span><span class="o">(</span><span class="n">reported</span><span class="o">,</span> <span class="mi">0</span><span class="o">)+</span><span class="mi">1</span><span class="o">);</span>
        <span class="o">}</span>

        <span class="k">for</span><span class="o">(</span><span class="nc">String</span> <span class="n">s</span> <span class="o">:</span> <span class="n">reportSet</span><span class="o">)</span> <span class="o">{</span>
            <span class="nc">String</span> <span class="n">reporter</span> <span class="o">=</span> <span class="n">s</span><span class="o">.</span><span class="na">split</span><span class="o">(</span><span class="s">" "</span><span class="o">)[</span><span class="mi">0</span><span class="o">];</span>
            <span class="nc">String</span> <span class="n">reported</span> <span class="o">=</span> <span class="n">s</span><span class="o">.</span><span class="na">split</span><span class="o">(</span><span class="s">" "</span><span class="o">)[</span><span class="mi">1</span><span class="o">];</span>
            <span class="k">for</span><span class="o">(</span><span class="nc">Map</span><span class="o">.</span><span class="na">Entry</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">entry</span> <span class="o">:</span> <span class="n">reportMap</span><span class="o">.</span><span class="na">entrySet</span><span class="o">())</span> <span class="o">{</span>
                <span class="k">if</span><span class="o">(</span><span class="n">reported</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">entry</span><span class="o">.</span><span class="na">getKey</span><span class="o">())</span> <span class="o">&amp;&amp;</span> <span class="n">entry</span><span class="o">.</span><span class="na">getValue</span><span class="o">()&gt;=</span><span class="n">k</span><span class="o">)</span> <span class="n">result</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">reporter</span><span class="o">,</span> <span class="n">result</span><span class="o">.</span><span class="na">getOrDefault</span><span class="o">(</span><span class="n">reporter</span><span class="o">,</span> <span class="mi">0</span><span class="o">)+</span><span class="mi">1</span><span class="o">);</span>
            <span class="o">}</span>
        <span class="o">}</span>

        <span class="kt">int</span><span class="o">[]</span> <span class="n">answer</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">id_list</span><span class="o">.</span><span class="na">length</span><span class="o">];</span>
        <span class="kt">int</span> <span class="n">idx</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">cnt</span> <span class="o">:</span> <span class="n">result</span><span class="o">.</span><span class="na">values</span><span class="o">())</span> <span class="o">{</span>
            <span class="n">answer</span><span class="o">[</span><span class="n">idx</span><span class="o">]</span> <span class="o">=</span> <span class="n">cnt</span><span class="o">;</span>
            <span class="n">idx</span><span class="o">++;</span>
        <span class="o">}</span>
        
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="회고">회고</h3>
<ul>
  <li>LinkedHashMap, HashMap을 활용하여 [key,value] 대로 접근하는 방법을 제대로 복습하고 익힐 수 있었다.</li>
  <li>드디어 프로그래머스 레벨 1 문제들을 모두 풀었다. 레벨 2 문제들도 같이 병행하여 풀고있었는데, 코딩테스트까지 남은 이틀 레벨 2 문제 열심히 풀어야겠다.</li>
</ul>]]></content><author><name>lango</name></author><category term="Java" /><category term="blog" /><category term="algorithm" /><category term="study" /><category term="java" /><category term="programmers" /><summary type="html"><![CDATA[level 1 - 신고 결과 받기]]></summary></entry><entry><title type="html">[Java] 프로그래머스(level-2) - 영어 끝말잇기</title><link href="http://localhost:4000/java/64-post/" rel="alternate" type="text/html" title="[Java] 프로그래머스(level-2) - 영어 끝말잇기" /><published>2022-09-14T00:00:00+09:00</published><updated>2022-09-14T00:00:00+09:00</updated><id>http://localhost:4000/java/64-post</id><content type="html" xml:base="http://localhost:4000/java/64-post/"><![CDATA[<p><br /></p>
<center><img src="/assets/images/programmers/20220914_01.png" width="700" /></center>
<p><br /></p>

<p><strong>제한사항</strong></p>
<ul>
  <li>끝말잇기에 참여하는 사람의 수 n은 2 이상 10 이하의 자연수입니다.</li>
  <li>words는 끝말잇기에 사용한 단어들이 순서대로 들어있는 배열이며, 길이는 n 이상 100 이하입니다.</li>
  <li>단어의 길이는 2 이상 50 이하입니다.</li>
  <li>모든 단어는 알파벳 소문자로만 이루어져 있습니다.</li>
  <li>끝말잇기에 사용되는 단어의 뜻(의미)은 신경 쓰지 않으셔도 됩니다.</li>
  <li>정답은 [ 번호, 차례 ] 형태로 return 해주세요.</li>
  <li>만약 주어진 단어들로 탈락자가 생기지 않는다면, [0, 0]을 return 해주세요.</li>
</ul>

<p><br /></p>

<p><strong>입출력 예시</strong></p>
<blockquote>
  <p>Input-1 <br />
<strong>78</strong> <br />
Output-1 <br />
<strong>83</strong></p>
</blockquote>

<blockquote>
  <p>Input-2 <br />
<strong>15</strong> <br />
Output-2 <br />
<strong>23</strong></p>
</blockquote>

<p><br /></p>

<h3 id="문제-풀이">문제 풀이</h3>
<hr />
<p>끝말잇기 배열에서 n번째마다 돌아가며 n번째 사람의 끝말잇기가 틀렸을 때를 알아야 한다. <br />
그리고 이전 끝말잇기 단어의 마지막 글자와 현재 끝말잇기 단어의 첫글자가 같은지도 검증해야 한다.</p>

<h4 id="n번째-순서-구하기">n번째 순서 구하기</h4>
<p>먼저, 끝말잇기 단어 배열을 순회하며 n명이 돌아가며 단어를 주고받도록 해야한다. <br />
예시의 words배열의 경우 9번의 단어를 주고받는데 3명이서 돌아가며 주고받는다. <br />
n이 3이고, 9번 끝말잇기 단어를 주고받는다고 하면 <strong>i를 n으로 즉, 3으로 나눈 나머지</strong>를 통해 알 수 있다.</p>
<ul>
  <li><strong>n번째 사람 : i % n</strong></li>
</ul>

<h4 id="실패한-사람-및-차례-구하기">실패한 사람 및 차례 구하기</h4>
<p>n명이 돌아가며 단어를 주고받는 것을 구했으니, 몇번째 차례에서 끝말잇기를 누가 실패했는지 알아야 한다. <br />
만약 n이 3이고, 끝말잇기 단어를 9번 주고받았다면, 총 3명이 3번씩 주고받는다. 즉, <strong>i를 n으로 나눈 나머지가 0일 때 차례가 뒤바뀐다.</strong></p>
<ul>
  <li><strong>n번째 차례 : i%n == 0</strong></li>
</ul>

<p>그리고 이전 단어의 마지막 글자와 현재 단어의 첫글자를 비교하여 다르다면 실패한 것으로 간주하자. <br />
또한, HashSet에 끝말잇기 단어를 담으며, 중복으로 끝말잇기 단어가 나올 경우 실패한 것으로 간주하자.</p>

<p>위에서 정한 내용을 코드로 작성해보자.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="rouge-code"><pre><span class="kt">int</span> <span class="n">num</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
<span class="kt">int</span> <span class="n">cnt</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
<span class="kt">int</span> <span class="n">fail</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
<span class="nc">HashSet</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">set</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HashSet</span><span class="o">&lt;&gt;();</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>먼저 사용할 변수와 자료구조를 초기화하였다. <br />
num의 경우는 n번째 사람을 저장하고, cnt는 몇번째 차례인지, fail은 실패한 사람을 담는다. <br />
HashSet은 끝말잇기 단어를 담을 자료구조이다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
</pre></td><td class="rouge-code"><pre><span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">words</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
    <span class="n">num</span> <span class="o">=</span> <span class="n">i</span><span class="o">%</span><span class="n">n</span><span class="o">;</span>
    <span class="k">if</span><span class="o">(</span><span class="n">num</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="n">cnt</span><span class="o">++;</span>
    <span class="k">if</span><span class="o">(</span><span class="n">set</span><span class="o">.</span><span class="na">contains</span><span class="o">(</span><span class="n">words</span><span class="o">[</span><span class="n">i</span><span class="o">]))</span> <span class="o">{</span>
        <span class="n">fail</span> <span class="o">=</span> <span class="n">num</span><span class="o">+</span><span class="mi">1</span><span class="o">;</span>
        <span class="k">break</span><span class="o">;</span>
    <span class="o">}</span>
    <span class="k">else</span> <span class="n">set</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">words</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
    <span class="k">if</span><span class="o">(</span><span class="n">i</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">String</span> <span class="n">beforelastLetter</span> <span class="o">=</span> <span class="n">words</span><span class="o">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">].</span><span class="na">substring</span><span class="o">(</span><span class="n">words</span><span class="o">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">].</span><span class="na">length</span><span class="o">()-</span><span class="mi">1</span><span class="o">,</span> <span class="n">words</span><span class="o">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">].</span><span class="na">length</span><span class="o">());</span>
        <span class="nc">String</span> <span class="n">nowFirstLetter</span> <span class="o">=</span> <span class="n">words</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">substring</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span><span class="mi">1</span><span class="o">);</span>
        <span class="k">if</span><span class="o">(!</span><span class="n">beforelastLetter</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">nowFirstLetter</span><span class="o">))</span> <span class="o">{</span>
            <span class="n">fail</span> <span class="o">=</span> <span class="n">num</span><span class="o">+</span><span class="mi">1</span><span class="o">;</span>
            <span class="k">break</span><span class="o">;</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>끝말잇기 배열을 순회하며 num에 몇번째 사람인지를 담아두고, num이 0이라면 한바퀴 차례를 돌았기에 cnt 횟수를 증가시킨다. <br />
그리고 끝말잇기 단어를 Hashset에 저장하며, 중복 단어가 나왔다면 fail에 실패한 사람을 담고 반복문을 탈출한다. <br />
마지막으로 이전단어의 마지막글자와 현재단어의 첫글자를 비교하고 다르다면 fail에 실패한 사람을 담고 반복문을 탈출한다.</p>

<p>작성한 코드를 제출하니 모든 테스트케이스를 정상적으로 통과하였다.</p>

<p><br /></p>

<h3 id="작성-코드">작성 코드</h3>
<hr />
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">Scanner</span> <span class="n">sc</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Scanner</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
        <span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
        <span class="nc">String</span><span class="o">[]</span> <span class="n">words</span> <span class="o">=</span> <span class="o">{</span><span class="s">"tank"</span><span class="o">,</span> <span class="s">"kick"</span><span class="o">,</span> <span class="s">"know"</span><span class="o">,</span> <span class="s">"wheel"</span><span class="o">,</span> <span class="s">"land"</span><span class="o">,</span> <span class="s">"dream"</span><span class="o">,</span> <span class="s">"mother"</span><span class="o">,</span> <span class="s">"robot"</span><span class="o">,</span> <span class="s">"tank"</span><span class="o">};</span>

        <span class="kt">long</span> <span class="n">start</span> <span class="o">=</span> <span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        <span class="n">solution</span><span class="o">(</span><span class="n">n</span><span class="o">,</span><span class="n">words</span><span class="o">);</span>
        <span class="kt">long</span> <span class="n">end</span> <span class="o">=</span> <span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"\n수행시간 = "</span> <span class="o">+</span> <span class="o">(</span><span class="n">end</span><span class="o">-</span><span class="n">start</span><span class="o">));</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span><span class="o">[]</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span> <span class="n">n</span><span class="o">,</span> <span class="nc">String</span><span class="o">[]</span> <span class="n">words</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">num</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">cnt</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">fail</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="nc">HashSet</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">set</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HashSet</span><span class="o">&lt;&gt;();</span>

        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">words</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="n">num</span> <span class="o">=</span> <span class="n">i</span><span class="o">%</span><span class="n">n</span><span class="o">;</span>
            <span class="k">if</span><span class="o">(</span><span class="n">num</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="n">cnt</span><span class="o">++;</span>
            <span class="k">if</span><span class="o">(</span><span class="n">set</span><span class="o">.</span><span class="na">contains</span><span class="o">(</span><span class="n">words</span><span class="o">[</span><span class="n">i</span><span class="o">]))</span> <span class="o">{</span>
                <span class="n">fail</span> <span class="o">=</span> <span class="n">num</span><span class="o">+</span><span class="mi">1</span><span class="o">;</span>
                <span class="k">break</span><span class="o">;</span>
            <span class="o">}</span>
            <span class="k">else</span> <span class="n">set</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">words</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
            <span class="k">if</span><span class="o">(</span><span class="n">i</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
                <span class="nc">String</span> <span class="n">beforelastLetter</span> <span class="o">=</span> <span class="n">words</span><span class="o">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">].</span><span class="na">substring</span><span class="o">(</span><span class="n">words</span><span class="o">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">].</span><span class="na">length</span><span class="o">()-</span><span class="mi">1</span><span class="o">,</span> <span class="n">words</span><span class="o">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">].</span><span class="na">length</span><span class="o">());</span>
                <span class="nc">String</span> <span class="n">nowFirstLetter</span> <span class="o">=</span> <span class="n">words</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">substring</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span><span class="mi">1</span><span class="o">);</span>
                <span class="k">if</span><span class="o">(!</span><span class="n">beforelastLetter</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">nowFirstLetter</span><span class="o">))</span> <span class="o">{</span>
                    <span class="n">fail</span> <span class="o">=</span> <span class="n">num</span><span class="o">+</span><span class="mi">1</span><span class="o">;</span>
                    <span class="k">break</span><span class="o">;</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="k">if</span><span class="o">(</span><span class="n">fail</span><span class="o">==</span><span class="mi">0</span><span class="o">)</span> <span class="n">cnt</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
        <span class="kt">int</span><span class="o">[]</span> <span class="n">answer</span> <span class="o">=</span> <span class="o">{</span><span class="n">fail</span><span class="o">,</span> <span class="n">cnt</span><span class="o">};</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="회고">회고</h3>
<ul>
  <li>i%n 연산을 통해 n번째 사람마다 돌아가며 끝말잇기 배열에 접근할 수 있었고, HashSet을 활용해 중복단어를 적절히 거를 수 있었다.</li>
</ul>]]></content><author><name>lango</name></author><category term="Java" /><category term="blog" /><category term="algorithm" /><category term="study" /><category term="java" /><category term="programmers" /><summary type="html"><![CDATA[level 2 - 영어 끝말잇기]]></summary></entry><entry><title type="html">[Java] 백준 11659번 - 구간 합 구하기 4</title><link href="http://localhost:4000/java/62-post/" rel="alternate" type="text/html" title="[Java] 백준 11659번 - 구간 합 구하기 4" /><published>2022-09-14T00:00:00+09:00</published><updated>2022-09-14T00:00:00+09:00</updated><id>http://localhost:4000/java/62-post</id><content type="html" xml:base="http://localhost:4000/java/62-post/"><![CDATA[<p><br /></p>

<center><img src="/assets/images/baekjoon/11659.png" /></center>

<p><br /></p>

<p><strong>입출력 예시</strong></p>
<blockquote>
  <p>Input <br />
<strong>5 3</strong> <br />
<strong>5 4 3 2 1</strong> <br />
<strong>1 3</strong> <br />
<strong>2 4</strong> <br />
<strong>5 5</strong> <br />
Output <br />
<strong>12</strong> <br />
<strong>9</strong> <br />
<strong>1</strong> <br /></p>
</blockquote>

<p><br /></p>

<h3 id="문제-풀이">문제 풀이</h3>
<hr />
<p>이 문제는 <strong>구간 합 알고리즘을 활용해 합배열</strong>을 만들어서 풀어야 한다. <br /></p>

<p>먼저 n개의 수들의 합배열을 만들어보자.</p>

<h4 id="합배열-만들기">합배열 만들기</h4>
<p>n개의 수를 5,4,3,2,1 라고 한다면, 합배열은 각 수의 합을 더해 나가면 5,9,12,14,15 이다. <br />
그렇다면 합배열을 만드는 과정을 코드로 작성해보자.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre><span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
<span class="kt">int</span> <span class="n">m</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
<span class="kt">int</span><span class="o">[]</span> <span class="n">sum</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">n</span><span class="o">+</span><span class="mi">1</span><span class="o">];</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>문제 요구사항대로 n과 m을 입력받고 n개의 수를 입력받아 sum 배열에 담을 것이다. <br />
이때, <strong>sum 배열의 경우 n+1의 크기</strong>를 가지고 있다. <br /></p>

<p><strong>합배열의 크기는 왜 n+1인가?</strong> <br />
문제에서 i와 j를 보면 [1,3], [2,4], [5,5] 등 <strong>배열에서의 인덱스+1</strong> 로써 표현되고 있다. <br />
합배열에 0,1,2,3,4 인덱스가 아닌 1,2,3,4,5라는 인덱스로 접근하기위해 sum[0]은 0인채로 두고, 1,2,3,4,5 인덱스 자리를 초기화해야 한다.</p>

<p>이제 sum배열의 1,2,3,4,5 인덱스에 주어진 수들을 더한 누적값으로 채워나가야한다. <br />
합배열을 sum, 주어진 수배열을 N이라고 했을 때, 합배열을 만드는 공식은 아래와 같다.</p>
<ul>
  <li><strong>sum[i] = sum[i-1] + N[i]</strong></li>
</ul>

<p>예를 들어 N=[5,4,3,2,1]이라고 한다면,</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="rouge-code"><pre>sum[1] = sum[0]+N[1] = 0+5 = 5
sum[2] = sum[1]+N[2] = 5+4 = 9
sum[3] = sum[2]+N[3] = 9+3 = 12
sum[4] = sum[3]+N[4] = 12+2 = 14
sum[5] = sum[4]+N[5] = 14+1 = 15
</pre></td></tr></tbody></table></code></pre></div></div>
<p>위와 같은 과정으로 합배열이 이루어짐을 알 수 있다. <br />
그러면 합배열을 만드는 코드를 작성해보자.</p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="rouge-code"><pre><span class="n">st</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;=</span><span class="n">n</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
    <span class="n">sum</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="n">sum</span><span class="o">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">]</span> <span class="o">+</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>위의 합배열 공식을 그대로 적용하여 합배열인 sum = [5,9,12,14,15]를 만들 수 있다.</p>

<h4 id="i부터-j까지의-구간-합-구하기">i부터 j까지의 구간 합 구하기</h4>
<p>합배열을 만들었으니 i와 j를 입력받고 i번째 수부터 j번째 수까지의 합을 구해야 한다. <br />
i번째 수부터 j번째 수까지의 구간 합을 구하는 공식은 아래과 같다.</p>
<ul>
  <li>구간 합 : <strong>sum[j] - sum[i-1]</strong></li>
</ul>

<p>예를 들어 N=[5,4,3,2,1]이고, i가 1, j가 3이라면 5+4+3인 12를 구해야한다. 공식을 적용해보자.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre>sum = [0,5,9,12,14,15]
sum[3]-sum[0] = 12-0 = 12
</pre></td></tr></tbody></table></code></pre></div></div>
<p>또 i가 2, j가 4일 때라면 4+3+2인 9를 구해야 한다.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>sum[4]-sum[1] = 14-5= 9
</pre></td></tr></tbody></table></code></pre></div></div>
<p>위와 같이 합배열과 구간합이 연관되어 있음을 알 수 있다. <br />
구간 합을 구하는 공식을 코드로 작성해보자.</p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="rouge-code"><pre><span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">idx</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">idx</span><span class="o">&lt;</span><span class="n">m</span><span class="o">;</span> <span class="n">idx</span><span class="o">++)</span> <span class="o">{</span>
    <span class="n">st</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
    <span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
    <span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
    <span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">sum</span><span class="o">[</span><span class="n">j</span><span class="o">]-</span><span class="n">sum</span><span class="o">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">]+</span> <span class="s">"\n"</span><span class="o">);</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>i와 j의 입력횟수 m만큼 순회하며 i와 j를 입력받고 합배열에서 구간 합 공식을 이용해 구간 합을 구하였다.</p>

<p><br /></p>

<h3 id="작성코드">작성코드</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">java.io.*</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">IOException</span> <span class="o">{</span>
        <span class="nc">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>
        <span class="nc">BufferedWriter</span> <span class="n">bw</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedWriter</span><span class="o">(</span><span class="k">new</span> <span class="nc">OutputStreamWriter</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">));</span>
        <span class="nc">StringTokenizer</span> <span class="n">st</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
        
        <span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
        <span class="kt">int</span> <span class="n">m</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
        <span class="kt">int</span><span class="o">[]</span> <span class="n">sum</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">n</span><span class="o">+</span><span class="mi">1</span><span class="o">];</span>
        
        <span class="n">st</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;=</span><span class="n">n</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="n">sum</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="n">sum</span><span class="o">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">]</span> <span class="o">+</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
        <span class="o">}</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">idx</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">idx</span><span class="o">&lt;</span><span class="n">m</span><span class="o">;</span> <span class="n">idx</span><span class="o">++)</span> <span class="o">{</span>
            <span class="n">st</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
            <span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
            <span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
            <span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">sum</span><span class="o">[</span><span class="n">j</span><span class="o">]-</span><span class="n">sum</span><span class="o">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">]+</span> <span class="s">"\n"</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="n">bw</span><span class="o">.</span><span class="na">flush</span><span class="o">();</span>
        <span class="n">bw</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
        <span class="n">br</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="회고">회고</h3>
<ul>
  <li>구간 합과 합배열의 활용법을 제대로 공부할 수 있었고, 구간 합을 빠르게 구해야 할때 쉽게 사용할 수 있다고 느꼈다.</li>
</ul>]]></content><author><name>lango</name></author><category term="Java" /><category term="blog" /><category term="algorithm" /><category term="study" /><category term="java" /><category term="baekjoon" /><summary type="html"><![CDATA[구간 합 구하기 4]]></summary></entry><entry><title type="html">[Java] 백준 2018번 - 수들의 합 5</title><link href="http://localhost:4000/java/63-post/" rel="alternate" type="text/html" title="[Java] 백준 2018번 - 수들의 합 5" /><published>2022-09-14T00:00:00+09:00</published><updated>2022-09-14T00:00:00+09:00</updated><id>http://localhost:4000/java/63-post</id><content type="html" xml:base="http://localhost:4000/java/63-post/"><![CDATA[<p><br /></p>

<center><img src="/assets/images/baekjoon/2018.png" /></center>

<p><br /></p>

<p><strong>입출력 예시</strong></p>
<blockquote>
  <p>Input <br />
<strong>15</strong> <br />
Output <br />
<strong>4</strong> <br /></p>
</blockquote>

<p><br /></p>

<h3 id="문제-풀이">문제 풀이</h3>
<hr />
<p>이 문제는 주어진 n의 최댓값이 10,000,000이기에 빠른 시간복잡도를 가진 알고리즘으로 풀어야 한다. <br />
연속된 자연수들의 합을 <strong>시작 인덱스(start_idx)와 종료 인덱스(end-idx)</strong>를 지정하여 표현해보자.</p>

<h4 id="투-포인터-활용시작인덱스와-종료인덱스">투 포인터 활용(시작인덱스와 종료인덱스)</h4>
<p>먼저 입력받을 n과 사용할 변수들을 초기화하자. <br />
start_idx와 end_idx의 경우 1부터 n까지 탐색할 것이기에 1로 초기화한다. <br />
그리고 cnt를 1로 초기화한 이유는 <strong>n 자신도 연속된 자연수들의 합 케이스에 포함</strong>된 것으로 간주하여 1로 초기화하였다. <br />
sum은 시작인덱스와 종료인덱스별로 더하거나 뺄 변수로 활용되고, 1부터 시작하기에 1로 초기화한다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="rouge-code"><pre><span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
<span class="kt">int</span> <span class="n">start_idx</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
<span class="kt">int</span> <span class="n">end_idx</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
<span class="kt">int</span> <span class="n">cnt</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
<span class="kt">int</span> <span class="n">sum</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><strong>투 포인터를 활용해 연속된 자연수들의 합을 어떻게 구할 것인가?</strong> <br />
아래 공식을 활용해 구할 수 있다.</p>
<ul>
  <li><strong>sum이 n보다 작다면, end_idx++하고, sum에 end_idx를 더한다.</strong></li>
  <li><strong>sum이 n보다 크다면, sum에서 start_idx를 빼고, start_idx++한다.</strong></li>
  <li><strong>sum이 n과 같다면, cnt++, end_idx++, sum에 end_idx를 더한다.</strong></li>
</ul>

<p>n이 15일 때 경우를 예로 들어보자.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
</pre></td><td class="rouge-code"><pre>start=1, end=1, sum=1 -&gt; sum&lt;15
    end+1 = 2
    sum+end = 3
start=1, end=2, sum=3 -&gt; sum&lt;15
    end+1 = 3
    sum+end = 6
start=1, end=3, sum=6 -&gt; sum&lt;15
    end+1 = 4
    sum+end = 10
start=1, end=4, sum=10 -&gt; sum&lt;15
    end+1 = 5
    sum+end = 15
start=1, end=5, sum=15 -&gt; sum==15
    cnt+1 = 2
    end+1 = 6
    sum+end = 21
start=1, end=6, sum=21 -&gt; sum&gt;15
    sum-start = 21-1 = 20
    start+1 = 2
start=2, end=6, sum=20 -&gt; sum&gt;15
    sum-start = 20-2 = 18
    start+1 = 3
start=3, end=6, sum=18 -&gt; sum&gt;15
    sum-start = 18-3 = 15
    start+1 = 4
start=4, end=6, sum=15 -&gt; sum==15
    cnt+1 = 3
    end+1 = 7
    sum+end = 22
...
</pre></td></tr></tbody></table></code></pre></div></div>
<p>위와 같은 방식으로 end_idx가 15가 될 때까지 반복하며 sum이 15와 같을 때마다 cnt를 증가시킨다. <br /></p>

<p>위 공식을 코드로 작성해보자.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
</pre></td><td class="rouge-code"><pre><span class="k">while</span><span class="o">(</span><span class="n">end_idx</span> <span class="o">!=</span> <span class="n">n</span><span class="o">)</span> <span class="o">{</span>
    <span class="k">if</span><span class="o">(</span><span class="n">sum</span> <span class="o">==</span> <span class="n">n</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">cnt</span><span class="o">++;</span>
        <span class="n">end_idx</span><span class="o">++;</span>
        <span class="n">sum</span><span class="o">+=</span><span class="n">end_idx</span><span class="o">;</span>
    <span class="o">}</span>
    <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">sum</span> <span class="o">&gt;</span> <span class="n">n</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">sum</span><span class="o">-=</span><span class="n">start_idx</span><span class="o">;</span>
        <span class="n">start_idx</span><span class="o">++;</span> 
    <span class="o">}</span>
    <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">sum</span> <span class="o">&lt;</span> <span class="n">n</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">end_idx</span><span class="o">++;</span>
        <span class="n">sum</span><span class="o">+=</span><span class="n">end_idx</span><span class="o">;</span> 
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>while문에서 end_idx가 n이 될때까지 순회하며 sum==n일 때, sum&gt;n일 때, sum&lt;n일 때 조건문을 통해 연속된 자연수들의 합이 몇가지인지 구할 수 있다.</p>

<p><br /></p>

<h3 id="작성코드">작성코드</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">java.io.*</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">IOException</span> <span class="o">{</span>
        <span class="nc">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>
        <span class="nc">BufferedWriter</span> <span class="n">bw</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedWriter</span><span class="o">(</span><span class="k">new</span> <span class="nc">OutputStreamWriter</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">));</span>
        
        <span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
        <span class="kt">int</span> <span class="n">start_idx</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">end_idx</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">cnt</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">sum</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
        
        <span class="k">while</span><span class="o">(</span><span class="n">end_idx</span> <span class="o">!=</span> <span class="n">n</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="n">sum</span> <span class="o">==</span> <span class="n">n</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">cnt</span><span class="o">++;</span>
                <span class="n">end_idx</span><span class="o">++;</span>
                <span class="n">sum</span><span class="o">+=</span><span class="n">end_idx</span><span class="o">;</span>
            <span class="o">}</span>
            <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">sum</span> <span class="o">&gt;</span> <span class="n">n</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">sum</span><span class="o">-=</span><span class="n">start_idx</span><span class="o">;</span>
                <span class="n">start_idx</span><span class="o">++;</span> 
            <span class="o">}</span>
            <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">sum</span> <span class="o">&lt;</span> <span class="n">n</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">end_idx</span><span class="o">++;</span>
                <span class="n">sum</span><span class="o">+=</span><span class="n">end_idx</span><span class="o">;</span> 
            <span class="o">}</span>
        <span class="o">}</span>

        <span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">cnt</span><span class="o">+</span><span class="s">"\n"</span><span class="o">);</span>
        <span class="n">bw</span><span class="o">.</span><span class="na">flush</span><span class="o">();</span>
        <span class="n">bw</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
        <span class="n">br</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="회고">회고</h3>
<ul>
  <li>프로그래머스의 숫자의 표현 문제와 동일한 문제지만, 이 문제는 주어진 <strong>n의 최댓값이 10,000,000</strong>으로 매우 크게 잡혀있기 때문에 O(n)의 시간복잡도 알고리즘을 활용해야 했다.</li>
  <li><strong>투 포인터</strong>를 활용해 연속된 자연수들의 합을 구하면서 시작인덱스와 종료인덱스를 활용하는 과정을 공부할 수 있었다.</li>
</ul>]]></content><author><name>lango</name></author><category term="Java" /><category term="blog" /><category term="algorithm" /><category term="study" /><category term="java" /><category term="baekjoon" /><summary type="html"><![CDATA[수들의 합 5]]></summary></entry><entry><title type="html">[Java] 프로그래머스(level-2) - 다음 큰 숫자</title><link href="http://localhost:4000/java/61-post/" rel="alternate" type="text/html" title="[Java] 프로그래머스(level-2) - 다음 큰 숫자" /><published>2022-09-13T00:00:00+09:00</published><updated>2022-09-13T00:00:00+09:00</updated><id>http://localhost:4000/java/61-post</id><content type="html" xml:base="http://localhost:4000/java/61-post/"><![CDATA[<p><br /></p>
<center><img src="/assets/images/programmers/20220913_05.png" width="700" /></center>
<p><br /></p>

<p><strong>입출력 예시</strong></p>
<blockquote>
  <p>Input-1 <br />
<strong>78</strong> <br />
Output-1 <br />
<strong>83</strong></p>
</blockquote>

<blockquote>
  <p>Input-2 <br />
<strong>15</strong> <br />
Output-2 <br />
<strong>23</strong></p>
</blockquote>

<p><br /></p>

<h3 id="문제-풀이">문제 풀이</h3>
<hr />
<p>주어진 n을 2진수로 변환한 후 1의 개수를 cnt라고 하면 <br />
n+1, n+2 ••• n+n n보다 큰 수 중 2진수로 변환한 후의 1의 개수가 cnt와 같은 수를 구해야 하며, n보다 크면서 가장 작은 수여야 한다.</p>

<p>백문이 불여일견, 한 번 코드로 작성해보자. <br />
입력 숫자 n을 2진수로 변환하고 2진수 n을 순회하며 1일 때의 카운트를 cnt에 담는다.</p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="rouge-code"><pre><span class="nc">String</span> <span class="n">first</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">toBinaryString</span><span class="o">(</span><span class="n">n</span><span class="o">);</span>
<span class="kt">int</span> <span class="n">cnt</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">first</span><span class="o">.</span><span class="na">length</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
    <span class="k">if</span><span class="o">(</span><span class="n">first</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">)</span> <span class="o">==</span> <span class="sc">'1'</span><span class="o">)</span> <span class="n">cnt</span><span class="o">++;</span> 
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>그리고 n을 1씩 증가시키면서 2진수로 변환한 후 1의 개수가 cnt와 같은지를 비교한다.</p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="rouge-code"><pre><span class="kt">int</span> <span class="n">idx</span> <span class="o">=</span> <span class="n">n</span><span class="o">;</span>
<span class="kt">int</span> <span class="n">nextCnt</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
<span class="k">while</span><span class="o">(</span><span class="n">nextCnt</span><span class="o">!=</span><span class="n">cnt</span><span class="o">)</span> <span class="o">{</span>
    <span class="n">idx</span><span class="o">++;</span>
    <span class="n">nextCnt</span> <span class="o">=</span> <span class="n">nextOneCount</span><span class="o">(</span><span class="n">idx</span><span class="o">);</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>n보다 큰 수를 2진수로 변환한 후 1의 개수를 세는 nextOneCount 함수를 작성하였다.</p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
</pre></td><td class="rouge-code"><pre><span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">nextOneCount</span><span class="o">(</span><span class="kt">int</span> <span class="n">num</span><span class="o">)</span> <span class="o">{</span>
    <span class="kt">int</span> <span class="n">cnt</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
    <span class="nc">String</span> <span class="n">numberToBinaryString</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">toBinaryString</span><span class="o">(</span><span class="n">num</span><span class="o">);</span>
    <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">numberToBinaryString</span><span class="o">.</span><span class="na">length</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
        <span class="k">if</span><span class="o">(</span><span class="n">numberToBinaryString</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">)</span> <span class="o">==</span> <span class="sc">'1'</span><span class="o">)</span> <span class="n">cnt</span><span class="o">++;</span>
    <span class="o">}</span>
    <span class="k">return</span> <span class="n">cnt</span><span class="o">;</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="integerbitcount-메서드-활용">Integer.bitCount() 메서드 활용</h4>
<p>위에서 작성한 코드도 모든 테스트케이스를 통과했지만, 코드를 간결하고 가독성이 좋도록 작성할 수 없을까 고민하던중 Integer 클래스의 bitCount() 메서드를 알게되었다.</p>

<blockquote>
  <p><strong>bitCount(int n)</strong> 메서드란? <br />
주어진 n을 <strong>2진수로 변환한 후 1의 개수</strong>를 구해준다.</p>
</blockquote>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
</pre></td><td class="rouge-code"><pre><span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span> <span class="n">n</span><span class="o">)</span> <span class="o">{</span>
    <span class="nc">String</span> <span class="n">first</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">toBinaryString</span><span class="o">(</span><span class="n">n</span><span class="o">);</span>
    <span class="kt">int</span> <span class="n">cnt</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">bitCount</span><span class="o">(</span><span class="n">n</span><span class="o">);</span>
    <span class="kt">int</span> <span class="n">idx</span> <span class="o">=</span> <span class="n">n</span><span class="o">;</span>
    <span class="kt">int</span> <span class="n">nextCnt</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
    <span class="k">while</span><span class="o">(</span><span class="n">nextCnt</span><span class="o">!=</span><span class="n">cnt</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">idx</span><span class="o">++;</span>
        <span class="n">nextCnt</span> <span class="o">=</span> <span class="n">nextOneCount2</span><span class="o">(</span><span class="n">idx</span><span class="o">);</span>
    <span class="o">}</span>
    <span class="k">return</span> <span class="n">idx</span><span class="o">;</span>
<span class="o">}</span>
<span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">nextOneCount2</span><span class="o">(</span><span class="kt">int</span> <span class="n">num</span><span class="o">)</span> <span class="o">{</span>
    <span class="k">return</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">bitCount</span><span class="o">(</span><span class="n">num</span><span class="o">);</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>n을 2진수로 변환한 후 1의 개수를 세는 cnt를 초기화할 때, nextOneCount() 함수에서 n보다 큰 수를 2진수로 변환하여 1의 개수를 셀 때 <br />
bitCount() 메서드를 활용하여 푸니 더 간결한 코드를 작성할 수 있었다. <br /></p>

<p>bitCount() 메서드를 접목한 코드도 제출하니 모든 테스트케이스와 효율성 테스트를 통과하였다.</p>

<p><br /></p>

<h3 id="작성-코드">작성 코드</h3>
<hr />
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">Scanner</span> <span class="n">sc</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Scanner</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
        <span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>

        <span class="kt">long</span> <span class="n">start</span> <span class="o">=</span> <span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        <span class="n">solution</span><span class="o">(</span><span class="n">n</span><span class="o">);</span>
        <span class="kt">long</span> <span class="n">end</span> <span class="o">=</span> <span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"\n수행시간 = "</span> <span class="o">+</span> <span class="o">(</span><span class="n">end</span><span class="o">-</span><span class="n">start</span><span class="o">));</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span> <span class="n">n</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">String</span> <span class="n">first</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">toBinaryString</span><span class="o">(</span><span class="n">n</span><span class="o">);</span>
        <span class="kt">int</span> <span class="n">cnt</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">bitCount</span><span class="o">(</span><span class="n">n</span><span class="o">);</span>
        <span class="kt">int</span> <span class="n">idx</span> <span class="o">=</span> <span class="n">n</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">nextCnt</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="k">while</span><span class="o">(</span><span class="n">nextCnt</span><span class="o">!=</span><span class="n">cnt</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">idx</span><span class="o">++;</span>
            <span class="n">nextCnt</span> <span class="o">=</span> <span class="n">nextOneCount2</span><span class="o">(</span><span class="n">idx</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">idx</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">nextOneCount</span><span class="o">(</span><span class="kt">int</span> <span class="n">num</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">cnt</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="nc">String</span> <span class="n">numberToBinaryString</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">toBinaryString</span><span class="o">(</span><span class="n">num</span><span class="o">);</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">numberToBinaryString</span><span class="o">.</span><span class="na">length</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="n">numberToBinaryString</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">)</span> <span class="o">==</span> <span class="sc">'1'</span><span class="o">)</span> <span class="n">cnt</span><span class="o">++;</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">cnt</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">nextOneCount2</span><span class="o">(</span><span class="kt">int</span> <span class="n">num</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">return</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">bitCount</span><span class="o">(</span><span class="n">num</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="회고">회고</h3>
<ul>
  <li>2진수로 변환한 후 1의 개수를 구해주는 Integer 클래스의 bitCount() 메서드에 대해 공부할 수 있었다.</li>
</ul>]]></content><author><name>lango</name></author><category term="Java" /><category term="blog" /><category term="algorithm" /><category term="study" /><category term="java" /><category term="programmers" /><summary type="html"><![CDATA[level 2 - 다음 큰 숫자]]></summary></entry><entry><title type="html">[Java] 프로그래머스(level-1) - 성격 유형 검사하기</title><link href="http://localhost:4000/java/59-post/" rel="alternate" type="text/html" title="[Java] 프로그래머스(level-1) - 성격 유형 검사하기" /><published>2022-09-13T00:00:00+09:00</published><updated>2022-09-13T00:00:00+09:00</updated><id>http://localhost:4000/java/59-post</id><content type="html" xml:base="http://localhost:4000/java/59-post/"><![CDATA[<p><br /></p>
<center><img src="/assets/images/programmers/20220913_03.png" width="700" /></center>
<p><br />
<br />
상세한 문제 내용은 <a href="https://school.programmers.co.kr/learn/courses/30/lessons/118666">여기</a>에서 확인 바랍니다.</p>

<p><strong>입출력 예시</strong></p>
<blockquote>
  <p>Input-1 <br />
<strong>survey = [“AN”, “CF”, “MJ”, “RT”, “NA”]</strong> <br />
<strong>choices = [5, 3, 2, 7, 5]</strong> <br />
Output-1 <br />
<strong>TCMA</strong></p>
</blockquote>

<blockquote>
  <p>Input-2 <br />
<strong>survey = [“AN”, “CF”, “MJ”, “RT”, “NA”]</strong> <br />
<strong>choices = [5, 3, 2, 7, 5]</strong> <br />
Output-2 <br />
<strong>RCJA</strong></p>
</blockquote>

<p><br /></p>

<h3 id="문제-풀이">문제 풀이</h3>
<hr />
<p><br />
이 문제는 HashMap에 지표별 유형과 점수를 저장하는 것이 중요하다고 생각한다. <br />
지표 배열 survey를 순회하며 선택지가 <strong>1,2,3번이라면, 비동의</strong>쪽 선택임을, <strong>5,6,7번이라면, 동의</strong>쪽 선택임을 고려해야 한다. <br /></p>

<p>먼저 HashMap에 유형과 점수를 저장하는 코드를 작성해보자.</p>

<h4 id="hashmap에-유형-및-점수-저장">HashMap에 유형 및 점수 저장</h4>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
</pre></td><td class="rouge-code"><pre><span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">survey</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
    <span class="k">if</span><span class="o">(</span><span class="n">choices</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">&gt;</span> <span class="mi">4</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">hm</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">survey</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">split</span><span class="o">(</span><span class="s">""</span><span class="o">)[</span><span class="mi">1</span><span class="o">],</span> <span class="o">(</span><span class="n">hm</span><span class="o">.</span><span class="na">getOrDefault</span><span class="o">(</span><span class="n">survey</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">split</span><span class="o">(</span><span class="s">""</span><span class="o">)[</span><span class="mi">1</span><span class="o">],</span> <span class="mi">0</span><span class="o">)</span> <span class="o">+</span> <span class="nc">Math</span><span class="o">.</span><span class="na">abs</span><span class="o">(</span><span class="n">choices</span><span class="o">[</span><span class="n">i</span><span class="o">]-</span><span class="mi">4</span><span class="o">)));</span>
    <span class="o">}</span>
    <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">choices</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">&lt;</span> <span class="mi">4</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">hm</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">survey</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">split</span><span class="o">(</span><span class="s">""</span><span class="o">)[</span><span class="mi">0</span><span class="o">],</span> <span class="o">(</span><span class="n">hm</span><span class="o">.</span><span class="na">getOrDefault</span><span class="o">(</span><span class="n">survey</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">split</span><span class="o">(</span><span class="s">""</span><span class="o">)[</span><span class="mi">0</span><span class="o">],</span> <span class="mi">0</span><span class="o">)</span> <span class="o">+</span> <span class="nc">Math</span><span class="o">.</span><span class="na">abs</span><span class="o">(</span><span class="n">choices</span><span class="o">[</span><span class="n">i</span><span class="o">]-</span><span class="mi">4</span><span class="o">)));</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>위 코드를 보면 선택지 문항이 4보다 작을 때 즉, 1,2,3번일 경우 비동의 선택이기에 survey[i]의 왼쪽 문자와 점수를 저장한다. <br />
이 때, 점수를 누적해서 저장해야 하므로 <strong>getOrDefault() 메서드를 통해 유형별 누적 점수를 저장</strong>하도록 작성하였다. <br />
그리고 동의 선택일 경우는 반대로 생각하면 된다.</p>

<h4 id="성격-유형-검사-결과-구하기">성격 유형 검사 결과 구하기</h4>
<p>유형과 점수를 집계했으니, 집계한 내용대로 조건에 맞춰 성격 유형 검사 결과를 구하면 된다. <br />
나는 단순하게 모든 유형 변수에 HashMap에 담긴 원소 값을 가져와 저장한 후 조건문으로 구했다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
</pre></td><td class="rouge-code"><pre><span class="kt">int</span> <span class="no">R</span> <span class="o">=</span> <span class="n">hm</span><span class="o">.</span><span class="na">getOrDefault</span><span class="o">(</span><span class="s">"R"</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span>
<span class="kt">int</span> <span class="no">T</span> <span class="o">=</span> <span class="n">hm</span><span class="o">.</span><span class="na">getOrDefault</span><span class="o">(</span><span class="s">"T"</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span>
<span class="kt">int</span> <span class="no">C</span> <span class="o">=</span> <span class="n">hm</span><span class="o">.</span><span class="na">getOrDefault</span><span class="o">(</span><span class="s">"C"</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span>
<span class="kt">int</span> <span class="no">F</span> <span class="o">=</span> <span class="n">hm</span><span class="o">.</span><span class="na">getOrDefault</span><span class="o">(</span><span class="s">"F"</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span>
<span class="kt">int</span> <span class="no">J</span> <span class="o">=</span> <span class="n">hm</span><span class="o">.</span><span class="na">getOrDefault</span><span class="o">(</span><span class="s">"J"</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span>
<span class="kt">int</span> <span class="no">M</span> <span class="o">=</span> <span class="n">hm</span><span class="o">.</span><span class="na">getOrDefault</span><span class="o">(</span><span class="s">"M"</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span>
<span class="kt">int</span> <span class="no">A</span> <span class="o">=</span> <span class="n">hm</span><span class="o">.</span><span class="na">getOrDefault</span><span class="o">(</span><span class="s">"A"</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span>
<span class="kt">int</span> <span class="no">N</span> <span class="o">=</span> <span class="n">hm</span><span class="o">.</span><span class="na">getOrDefault</span><span class="o">(</span><span class="s">"N"</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span>

<span class="k">if</span><span class="o">(</span><span class="no">R</span><span class="o">!=</span><span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="no">T</span><span class="o">==</span><span class="mi">0</span><span class="o">)</span> <span class="n">answer</span> <span class="o">+=</span> <span class="s">"R"</span><span class="o">;</span>
<span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="no">T</span><span class="o">!=</span><span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="no">R</span><span class="o">==</span><span class="mi">0</span><span class="o">)</span> <span class="n">answer</span> <span class="o">+=</span> <span class="s">"T"</span><span class="o">;</span>
<span class="k">else</span> <span class="o">{</span>
    <span class="k">if</span><span class="o">(</span><span class="no">R</span><span class="o">&gt;</span><span class="no">T</span><span class="o">)</span> <span class="n">answer</span> <span class="o">+=</span> <span class="s">"R"</span><span class="o">;</span>
    <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="no">R</span><span class="o">&lt;</span><span class="no">T</span><span class="o">)</span> <span class="n">answer</span> <span class="o">+=</span> <span class="s">"T"</span><span class="o">;</span>
    <span class="k">else</span> <span class="n">answer</span> <span class="o">+=</span> <span class="s">"R"</span><span class="o">;</span>
<span class="o">}</span>

<span class="k">if</span><span class="o">(</span><span class="no">C</span><span class="o">!=</span><span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="no">F</span><span class="o">==</span><span class="mi">0</span><span class="o">)</span> <span class="n">answer</span> <span class="o">+=</span> <span class="s">"C"</span><span class="o">;</span>
<span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="no">F</span><span class="o">!=</span><span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="no">C</span><span class="o">==</span><span class="mi">0</span><span class="o">)</span> <span class="n">answer</span> <span class="o">+=</span> <span class="s">"F"</span><span class="o">;</span>
<span class="k">else</span> <span class="o">{</span>
    <span class="k">if</span><span class="o">(</span><span class="no">C</span><span class="o">&gt;</span><span class="no">F</span><span class="o">)</span> <span class="n">answer</span> <span class="o">+=</span> <span class="s">"C"</span><span class="o">;</span>
    <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="no">C</span><span class="o">&lt;</span><span class="no">F</span><span class="o">)</span> <span class="n">answer</span> <span class="o">+=</span> <span class="s">"F"</span><span class="o">;</span>
    <span class="k">else</span> <span class="n">answer</span> <span class="o">+=</span> <span class="s">"C"</span><span class="o">;</span>
<span class="o">}</span>

<span class="k">if</span><span class="o">(</span><span class="no">J</span><span class="o">!=</span><span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="no">M</span><span class="o">==</span><span class="mi">0</span><span class="o">)</span> <span class="n">answer</span> <span class="o">+=</span> <span class="s">"J"</span><span class="o">;</span>
<span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="no">M</span><span class="o">!=</span><span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="no">J</span><span class="o">==</span><span class="mi">0</span><span class="o">)</span> <span class="n">answer</span> <span class="o">+=</span> <span class="s">"M"</span><span class="o">;</span>
<span class="k">else</span> <span class="o">{</span>
    <span class="k">if</span><span class="o">(</span><span class="no">J</span><span class="o">&gt;</span><span class="no">M</span><span class="o">)</span> <span class="n">answer</span> <span class="o">+=</span> <span class="s">"J"</span><span class="o">;</span>
    <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="no">J</span><span class="o">&lt;</span><span class="no">M</span><span class="o">)</span> <span class="n">answer</span> <span class="o">+=</span> <span class="s">"M"</span><span class="o">;</span>
    <span class="k">else</span> <span class="n">answer</span> <span class="o">+=</span> <span class="s">"J"</span><span class="o">;</span>
<span class="o">}</span>

<span class="k">if</span><span class="o">(</span><span class="no">A</span><span class="o">!=</span><span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="no">N</span><span class="o">==</span><span class="mi">0</span><span class="o">)</span> <span class="n">answer</span> <span class="o">+=</span> <span class="s">"A"</span><span class="o">;</span>
<span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="no">N</span><span class="o">!=</span><span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="no">A</span><span class="o">==</span><span class="mi">0</span><span class="o">)</span> <span class="n">answer</span> <span class="o">+=</span> <span class="s">"N"</span><span class="o">;</span>
<span class="k">else</span> <span class="o">{</span>
    <span class="k">if</span><span class="o">(</span><span class="no">A</span><span class="o">&gt;</span><span class="no">N</span><span class="o">)</span> <span class="n">answer</span> <span class="o">+=</span> <span class="s">"A"</span><span class="o">;</span>
    <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="no">A</span><span class="o">&lt;</span><span class="no">N</span><span class="o">)</span> <span class="n">answer</span> <span class="o">+=</span> <span class="s">"N"</span><span class="o">;</span>
    <span class="k">else</span> <span class="n">answer</span> <span class="o">+=</span> <span class="s">"A"</span><span class="o">;</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p><br /></p>

<p>작성한 코드를 제출하니 시간은 좀 걸리긴 하지만 모든 테스트케이스에 통과하였다.</p>

<p><br /></p>

<h3 id="작성-코드">작성 코드</h3>
<hr />
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">String</span><span class="o">[]</span> <span class="n">survey</span> <span class="o">=</span> <span class="o">{</span><span class="s">"AN"</span><span class="o">,</span> <span class="s">"CF"</span><span class="o">,</span> <span class="s">"MJ"</span><span class="o">,</span> <span class="s">"RT"</span><span class="o">,</span> <span class="s">"NA"</span><span class="o">,</span> <span class="s">"JM"</span><span class="o">};</span>
        <span class="kt">int</span><span class="o">[]</span> <span class="n">choices</span> <span class="o">=</span> <span class="o">{</span><span class="mi">5</span><span class="o">,</span><span class="mi">3</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="mi">7</span><span class="o">,</span><span class="mi">5</span><span class="o">,</span><span class="mi">7</span><span class="o">};</span>
        <span class="c1">// String[] survey = {"TR", "RT", "TR"};</span>
        <span class="c1">// int[] choices = {7,1,3};</span>
        <span class="c1">// String[] survey = {"TR", "TR", "TR"};</span>
        <span class="c1">// int[] choices = {1, 7, 3};</span>

        <span class="kt">long</span> <span class="n">start</span> <span class="o">=</span> <span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        <span class="n">solution</span><span class="o">(</span><span class="n">survey</span><span class="o">,</span> <span class="n">choices</span><span class="o">);</span>
        <span class="kt">long</span> <span class="n">end</span> <span class="o">=</span> <span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"\n수행시간 = "</span> <span class="o">+</span> <span class="o">(</span><span class="n">end</span><span class="o">-</span><span class="n">start</span><span class="o">));</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="nc">String</span> <span class="nf">solution</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">survey</span><span class="o">,</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">choices</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">String</span> <span class="n">answer</span> <span class="o">=</span> <span class="s">""</span><span class="o">;</span>
        <span class="nc">HashMap</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">hm</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HashMap</span><span class="o">&lt;&gt;();</span>
        
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">survey</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="n">choices</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">&gt;</span> <span class="mi">4</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">hm</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">survey</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">split</span><span class="o">(</span><span class="s">""</span><span class="o">)[</span><span class="mi">1</span><span class="o">],</span> <span class="o">(</span><span class="n">hm</span><span class="o">.</span><span class="na">getOrDefault</span><span class="o">(</span><span class="n">survey</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">split</span><span class="o">(</span><span class="s">""</span><span class="o">)[</span><span class="mi">1</span><span class="o">],</span> <span class="mi">0</span><span class="o">)</span> <span class="o">+</span> <span class="nc">Math</span><span class="o">.</span><span class="na">abs</span><span class="o">(</span><span class="n">choices</span><span class="o">[</span><span class="n">i</span><span class="o">]-</span><span class="mi">4</span><span class="o">)));</span>
            <span class="o">}</span>
            <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">choices</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">&lt;</span> <span class="mi">4</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">hm</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">survey</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">split</span><span class="o">(</span><span class="s">""</span><span class="o">)[</span><span class="mi">0</span><span class="o">],</span> <span class="o">(</span><span class="n">hm</span><span class="o">.</span><span class="na">getOrDefault</span><span class="o">(</span><span class="n">survey</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">split</span><span class="o">(</span><span class="s">""</span><span class="o">)[</span><span class="mi">0</span><span class="o">],</span> <span class="mi">0</span><span class="o">)</span> <span class="o">+</span> <span class="nc">Math</span><span class="o">.</span><span class="na">abs</span><span class="o">(</span><span class="n">choices</span><span class="o">[</span><span class="n">i</span><span class="o">]-</span><span class="mi">4</span><span class="o">)));</span>
            <span class="o">}</span>
        <span class="o">}</span>
        
        <span class="kt">int</span> <span class="no">R</span> <span class="o">=</span> <span class="n">hm</span><span class="o">.</span><span class="na">getOrDefault</span><span class="o">(</span><span class="s">"R"</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span>
        <span class="kt">int</span> <span class="no">T</span> <span class="o">=</span> <span class="n">hm</span><span class="o">.</span><span class="na">getOrDefault</span><span class="o">(</span><span class="s">"T"</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span>
        <span class="kt">int</span> <span class="no">C</span> <span class="o">=</span> <span class="n">hm</span><span class="o">.</span><span class="na">getOrDefault</span><span class="o">(</span><span class="s">"C"</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span>
        <span class="kt">int</span> <span class="no">F</span> <span class="o">=</span> <span class="n">hm</span><span class="o">.</span><span class="na">getOrDefault</span><span class="o">(</span><span class="s">"F"</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span>
        <span class="kt">int</span> <span class="no">J</span> <span class="o">=</span> <span class="n">hm</span><span class="o">.</span><span class="na">getOrDefault</span><span class="o">(</span><span class="s">"J"</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span>
        <span class="kt">int</span> <span class="no">M</span> <span class="o">=</span> <span class="n">hm</span><span class="o">.</span><span class="na">getOrDefault</span><span class="o">(</span><span class="s">"M"</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span>
        <span class="kt">int</span> <span class="no">A</span> <span class="o">=</span> <span class="n">hm</span><span class="o">.</span><span class="na">getOrDefault</span><span class="o">(</span><span class="s">"A"</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span>
        <span class="kt">int</span> <span class="no">N</span> <span class="o">=</span> <span class="n">hm</span><span class="o">.</span><span class="na">getOrDefault</span><span class="o">(</span><span class="s">"N"</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span>

        <span class="k">if</span><span class="o">(</span><span class="no">R</span><span class="o">!=</span><span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="no">T</span><span class="o">==</span><span class="mi">0</span><span class="o">)</span> <span class="n">answer</span> <span class="o">+=</span> <span class="s">"R"</span><span class="o">;</span>
        <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="no">T</span><span class="o">!=</span><span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="no">R</span><span class="o">==</span><span class="mi">0</span><span class="o">)</span> <span class="n">answer</span> <span class="o">+=</span> <span class="s">"T"</span><span class="o">;</span>
        <span class="k">else</span> <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="no">R</span><span class="o">&gt;</span><span class="no">T</span><span class="o">)</span> <span class="n">answer</span> <span class="o">+=</span> <span class="s">"R"</span><span class="o">;</span>
            <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="no">R</span><span class="o">&lt;</span><span class="no">T</span><span class="o">)</span> <span class="n">answer</span> <span class="o">+=</span> <span class="s">"T"</span><span class="o">;</span>
            <span class="k">else</span> <span class="n">answer</span> <span class="o">+=</span> <span class="s">"R"</span><span class="o">;</span>
        <span class="o">}</span>

        <span class="k">if</span><span class="o">(</span><span class="no">C</span><span class="o">!=</span><span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="no">F</span><span class="o">==</span><span class="mi">0</span><span class="o">)</span> <span class="n">answer</span> <span class="o">+=</span> <span class="s">"C"</span><span class="o">;</span>
        <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="no">F</span><span class="o">!=</span><span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="no">C</span><span class="o">==</span><span class="mi">0</span><span class="o">)</span> <span class="n">answer</span> <span class="o">+=</span> <span class="s">"F"</span><span class="o">;</span>
        <span class="k">else</span> <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="no">C</span><span class="o">&gt;</span><span class="no">F</span><span class="o">)</span> <span class="n">answer</span> <span class="o">+=</span> <span class="s">"C"</span><span class="o">;</span>
            <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="no">C</span><span class="o">&lt;</span><span class="no">F</span><span class="o">)</span> <span class="n">answer</span> <span class="o">+=</span> <span class="s">"F"</span><span class="o">;</span>
            <span class="k">else</span> <span class="n">answer</span> <span class="o">+=</span> <span class="s">"C"</span><span class="o">;</span>
        <span class="o">}</span>

        <span class="k">if</span><span class="o">(</span><span class="no">J</span><span class="o">!=</span><span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="no">M</span><span class="o">==</span><span class="mi">0</span><span class="o">)</span> <span class="n">answer</span> <span class="o">+=</span> <span class="s">"J"</span><span class="o">;</span>
        <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="no">M</span><span class="o">!=</span><span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="no">J</span><span class="o">==</span><span class="mi">0</span><span class="o">)</span> <span class="n">answer</span> <span class="o">+=</span> <span class="s">"M"</span><span class="o">;</span>
        <span class="k">else</span> <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="no">J</span><span class="o">&gt;</span><span class="no">M</span><span class="o">)</span> <span class="n">answer</span> <span class="o">+=</span> <span class="s">"J"</span><span class="o">;</span>
            <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="no">J</span><span class="o">&lt;</span><span class="no">M</span><span class="o">)</span> <span class="n">answer</span> <span class="o">+=</span> <span class="s">"M"</span><span class="o">;</span>
            <span class="k">else</span> <span class="n">answer</span> <span class="o">+=</span> <span class="s">"J"</span><span class="o">;</span>
        <span class="o">}</span>

        <span class="k">if</span><span class="o">(</span><span class="no">A</span><span class="o">!=</span><span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="no">N</span><span class="o">==</span><span class="mi">0</span><span class="o">)</span> <span class="n">answer</span> <span class="o">+=</span> <span class="s">"A"</span><span class="o">;</span>
        <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="no">N</span><span class="o">!=</span><span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="no">A</span><span class="o">==</span><span class="mi">0</span><span class="o">)</span> <span class="n">answer</span> <span class="o">+=</span> <span class="s">"N"</span><span class="o">;</span>
        <span class="k">else</span> <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="no">A</span><span class="o">&gt;</span><span class="no">N</span><span class="o">)</span> <span class="n">answer</span> <span class="o">+=</span> <span class="s">"A"</span><span class="o">;</span>
            <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="no">A</span><span class="o">&lt;</span><span class="no">N</span><span class="o">)</span> <span class="n">answer</span> <span class="o">+=</span> <span class="s">"N"</span><span class="o">;</span>
            <span class="k">else</span> <span class="n">answer</span> <span class="o">+=</span> <span class="s">"A"</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="회고">회고</h3>
<ul>
  <li>해경방법 자체는 쉬웠던 문제였으나 성격유형 검사 결과 구하는 코드를 간결하게 작성하지 못해 아쉬웠다. 다음에 다시 풀면서 코드를 줄여봐야 겠다.</li>
</ul>]]></content><author><name>lango</name></author><category term="Java" /><category term="blog" /><category term="algorithm" /><category term="study" /><category term="java" /><category term="programmers" /><summary type="html"><![CDATA[level 1 - 성격 유형 검사하기]]></summary></entry><entry><title type="html">[Java] 프로그래머스(level-2) - 올바른 괄호</title><link href="http://localhost:4000/java/58-post/" rel="alternate" type="text/html" title="[Java] 프로그래머스(level-2) - 올바른 괄호" /><published>2022-09-13T00:00:00+09:00</published><updated>2022-09-13T00:00:00+09:00</updated><id>http://localhost:4000/java/58-post</id><content type="html" xml:base="http://localhost:4000/java/58-post/"><![CDATA[<p><br /></p>
<center><img src="/assets/images/programmers/20220913_02.png" width="700" /></center>
<p><br /></p>

<p><strong>입출력 예시</strong></p>
<blockquote>
  <p>Input-1 <br />
<strong>”()()”</strong> <br />
Output-1 <br />
<strong>true</strong></p>
</blockquote>

<blockquote>
  <p>Input-2 <br />
<strong>)()(</strong> <br />
Output-2 <br />
<strong>false</strong></p>
</blockquote>

<p><br /></p>

<h3 id="문제-풀이">문제 풀이</h3>
<hr />
<p>이 문제의 경우 스택(Stack)으로 접근하여 푸는 것이 가장 쉽기에 스택을 활용하여 풀어보았다. <br />
괄호만으로 이루어진 문자열을 순회하며 <strong>”(“일 때는 스택에 “(“를 추가하고, “)”일 때는 “(“를 꺼내는 과정</strong>을 통해 <br />
스택의 empty 유무를 통해 괄호문자열을 검증할 수 있다.</p>

<p>한 번 코드로 작성해보자.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="rouge-code"><pre><span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">s</span><span class="o">.</span><span class="na">length</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
    <span class="k">if</span><span class="o">(</span><span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">)</span> <span class="o">==</span> <span class="sc">'('</span><span class="o">)</span> <span class="n">st</span><span class="o">.</span><span class="na">push</span><span class="o">(</span><span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">));</span>
    <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">)</span> <span class="o">==</span> <span class="sc">')'</span><span class="o">)</span> <span class="n">st</span><span class="o">.</span><span class="na">pop</span><span class="o">();</span>
<span class="o">}</span>
<span class="k">if</span><span class="o">(!</span><span class="n">st</span><span class="o">.</span><span class="na">empty</span><span class="o">())</span> <span class="n">answer</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>위 코드와 같이 “(“일 때는 스택에 저장하고, “)”일때는 “(“를 꺼낸다. <br />
반복문 종료 후 스택이 비어있지 않으면 올바른 괄호문자열이 아니므로 false를 반환하면 된다.</p>

<h4 id="emptystackexception-발생">EmptyStackException 발생</h4>
<p>다만, 입력 괄호 문자열이 “((()))))”같이 “)”이 더 많을 경우를 생각해보자. <br />
“(((“까지는 스택에 저장하고, “)))”까지는 스택에서 꺼내게 된다. 그런데, 두개의 “)”가 남고, <strong>스택은 비어있는데 “(“를 꺼내라고 동작하게 되면서 EmptyStackException를 발생</strong>시키게 된다.</p>

<p>예외에 대해서 처리하기 위해 try catch문으로 감싸 다시 작성해보자.</p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
</pre></td><td class="rouge-code"><pre><span class="k">try</span> <span class="o">{</span>
    <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">s</span><span class="o">.</span><span class="na">length</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
        <span class="k">if</span><span class="o">(</span><span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">)</span> <span class="o">==</span> <span class="sc">'('</span><span class="o">)</span> <span class="n">st</span><span class="o">.</span><span class="na">push</span><span class="o">(</span><span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">));</span>
        <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">)</span> <span class="o">==</span> <span class="sc">')'</span><span class="o">)</span> <span class="n">st</span><span class="o">.</span><span class="na">pop</span><span class="o">();</span>
    <span class="o">}</span>
    <span class="k">if</span><span class="o">(!</span><span class="n">st</span><span class="o">.</span><span class="na">empty</span><span class="o">())</span> <span class="n">answer</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
<span class="o">}</span><span class="k">catch</span><span class="o">(</span><span class="nc">EmptyStackException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
    <span class="n">answer</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>예외 처리 코드를 추가하면 위 코드와 같이 작성할 수 있다.</p>

<h4 id="예외처리-제거">예외처리 제거</h4>
<p>그런데, 위 문제와 같은 상황에서 <strong>예외를 발생시키지 않는</strong> 코드를 작성할 수 없을까? 고민하게 되었다. <br /> 
그렇다면 반복문을 순회하며 “)”일 경우 바로 스택에서 꺼내는 것이 아니라 <strong>스택이 비어있는지를 추가로 확인</strong>해보면 된다고 생각했다.</p>

<p>바로 코드로 작성해보자.</p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
</pre></td><td class="rouge-code"><pre><span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">s</span><span class="o">.</span><span class="na">length</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
    <span class="k">if</span><span class="o">(</span><span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">)</span> <span class="o">==</span> <span class="sc">'('</span><span class="o">)</span> <span class="n">st</span><span class="o">.</span><span class="na">push</span><span class="o">(</span><span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">));</span>
    <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">)</span> <span class="o">==</span> <span class="sc">')'</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">if</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">empty</span><span class="o">())</span> <span class="o">{</span>
            <span class="n">answer</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
            <span class="k">break</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="k">else</span> <span class="n">st</span><span class="o">.</span><span class="na">pop</span><span class="o">();</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>위 코드를 보면 “)”일 경우의 조건에서 추가로 if else 조건문이 추가되었다. <br />
“)”일 경우에 스택이 비어있다면 어차피 올바른 괄호문자열이 아니기에 false를 반환하고 반복문을 탈출하도록 구현하였다.</p>

<p><br /></p>

<h3 id="작성-코드">작성 코드</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">Scanner</span> <span class="n">sc</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Scanner</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
        <span class="nc">String</span> <span class="n">s</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextLine</span><span class="o">();</span>

        <span class="kt">long</span> <span class="n">start</span> <span class="o">=</span> <span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        <span class="n">solution2</span><span class="o">(</span><span class="n">s</span><span class="o">);</span>
        <span class="kt">long</span> <span class="n">end</span> <span class="o">=</span> <span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"\n수행시간 = "</span> <span class="o">+</span> <span class="o">(</span><span class="n">end</span><span class="o">-</span><span class="n">start</span><span class="o">));</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">boolean</span> <span class="nf">solution</span><span class="o">(</span><span class="nc">String</span> <span class="n">s</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">boolean</span> <span class="n">answer</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
        <span class="nc">Stack</span><span class="o">&lt;</span><span class="nc">Character</span><span class="o">&gt;</span> <span class="n">st</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Stack</span><span class="o">&lt;&gt;();</span>
        <span class="k">try</span> <span class="o">{</span>
            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">s</span><span class="o">.</span><span class="na">length</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
                <span class="k">if</span><span class="o">(</span><span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">)</span> <span class="o">==</span> <span class="sc">'('</span><span class="o">)</span> <span class="n">st</span><span class="o">.</span><span class="na">push</span><span class="o">(</span><span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">));</span>
                <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">)</span> <span class="o">==</span> <span class="sc">')'</span><span class="o">)</span> <span class="n">st</span><span class="o">.</span><span class="na">pop</span><span class="o">();</span>
            <span class="o">}</span>
            <span class="k">if</span><span class="o">(!</span><span class="n">st</span><span class="o">.</span><span class="na">empty</span><span class="o">())</span> <span class="n">answer</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
        <span class="o">}</span><span class="k">catch</span><span class="o">(</span><span class="nc">EmptyStackException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">answer</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">boolean</span> <span class="nf">solution2</span><span class="o">(</span><span class="nc">String</span> <span class="n">s</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">boolean</span> <span class="n">answer</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
        <span class="nc">Stack</span><span class="o">&lt;</span><span class="nc">Character</span><span class="o">&gt;</span> <span class="n">st</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Stack</span><span class="o">&lt;&gt;();</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">s</span><span class="o">.</span><span class="na">length</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">)</span> <span class="o">==</span> <span class="sc">'('</span><span class="o">)</span> <span class="n">st</span><span class="o">.</span><span class="na">push</span><span class="o">(</span><span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">));</span>
            <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">)</span> <span class="o">==</span> <span class="sc">')'</span><span class="o">)</span> <span class="o">{</span>
                <span class="k">if</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">empty</span><span class="o">())</span> <span class="o">{</span>
                    <span class="n">answer</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
                    <span class="k">break</span><span class="o">;</span>
                <span class="o">}</span>
                <span class="k">else</span> <span class="n">st</span><span class="o">.</span><span class="na">pop</span><span class="o">();</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="k">if</span><span class="o">(!</span><span class="n">st</span><span class="o">.</span><span class="na">empty</span><span class="o">())</span> <span class="n">answer</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="회고">회고</h3>
<ul>
  <li>전에도 몇 번 풀어보았던 문제이기에 똑같은 풀이방식보다는 다른 접근방식을 고민할 수 있었다.</li>
  <li>try catch문을 통해 발생한 EmptyStackException 로 반드시 예외를 처리해야하는 상황이 아니기에 예외처리를 제거한 코드를 작성할 수 있었다.</li>
</ul>]]></content><author><name>lango</name></author><category term="Java" /><category term="blog" /><category term="algorithm" /><category term="study" /><category term="java" /><category term="programmers" /><summary type="html"><![CDATA[level 2 - 올바른 괄호]]></summary></entry><entry><title type="html">[Java] 프로그래머스(level-2) - 최솟값 만들기</title><link href="http://localhost:4000/java/57-post/" rel="alternate" type="text/html" title="[Java] 프로그래머스(level-2) - 최솟값 만들기" /><published>2022-09-13T00:00:00+09:00</published><updated>2022-09-13T00:00:00+09:00</updated><id>http://localhost:4000/java/57-post</id><content type="html" xml:base="http://localhost:4000/java/57-post/"><![CDATA[<p><br /></p>
<center><img src="/assets/images/programmers/20220913_01.png" width="700" /></center>
<p><br /></p>

<p><strong>입출력 예시</strong></p>
<blockquote>
  <p>Input-1 <br />
<strong>A = [1, 4, 2]</strong> <br />
<strong>B = [5, 4, 4]</strong> <br />
Output-1 <br />
<strong>29</strong></p>
</blockquote>

<blockquote>
  <p>Input-2 <br />
<strong>A = [1, 2]</strong> <br />
<strong>B = [3, 4]</strong> <br />
Output-2 <br />
<strong>10</strong></p>
</blockquote>

<p><br /></p>

<h3 id="문제-풀이">문제 풀이</h3>
<p>A와 B 배열에서 두 수 를 뽑아 곱한 값을 누적하여 더할 때, 최소로 되도록 해야한다. <br />
그렇다면 <strong>두 수의 차가 클 수록</strong> 곱한 값은 작아지기에 최소로 만들 수 있다. <br />
어떻게 두 수의 차가 큰 수를 뽑을 수 있을까?</p>

<p><strong>A배열은 오름차순으로, B배열은 내림차순으로 정렬</strong>하여 순서대로 뽑는다면 A배열에서 가장 작은수와 B배열에서 가장 큰 수를 뽑을 수 있다.</p>

<p>한 번 코드로 작성해보자.<br /></p>
<h4 id="a배열-오름차순-정렬">A배열 오름차순 정렬</h4>
<p>먼저, A배열을 오름차순으로 정렬하자.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="nc">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="no">A</span><span class="o">);</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="b배열-내림차순-정렬">B배열 내림차순 정렬</h4>
<p>그리고 B배열을 내림차순으로 정렬하자.</p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="nc">Integer</span><span class="o">[]</span> <span class="n">reverse_B</span> <span class="o">=</span> <span class="nc">Arrays</span><span class="o">.</span><span class="na">stream</span><span class="o">(</span><span class="no">B</span><span class="o">).</span><span class="na">boxed</span><span class="o">().</span><span class="na">toArray</span><span class="o">(</span><span class="nc">Integer</span><span class="o">[]::</span><span class="k">new</span><span class="o">);</span> 
<span class="nc">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">reverse_B</span><span class="o">,</span> <span class="nc">Collections</span><span class="o">.</span><span class="na">reverseOrder</span><span class="o">());</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<blockquote>
  <p>스트림 활용 내림차순 정렬 방식 - <strong>Arrays.stream(B).boxed().toArray(Integer[]::new)</strong> <br /></p>
  <ol>
    <li>기본형 배열을 스트림 형태로 변경 : Arrays.stream(B)</li>
    <li>int -&gt; Integer (객체 형태로 변환) : boxed()
 -&gt; 내부 코드는 아래와 같은 식이다.
      <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre> <span class="kd">public</span> <span class="kd">final</span> <span class="nc">Stream</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="nf">boxed</span><span class="o">()</span> <span class="o">{</span>
     <span class="k">return</span> <span class="nf">mapToObj</span><span class="o">(</span><span class="nl">Integer:</span><span class="o">:</span><span class="n">valueOf</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span>
 <span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div>      </div>
    </li>
    <li>객체 스트림 형태를 배열의 형태로 변경 
 Stream.toArray(Type[]::new)  =&gt; toArray(Integer[]::new);</li>
  </ol>
</blockquote>

<h5 id="효울성-테스트-시간초과">효울성 테스트 시간초과</h5>
<p><img src="/assets/images/programmers/20220913_01-2.png" width="300" />
<br />
<br />
테스트케이스는 모두 통과했지만, 효율성 테스트에서 시간초과가 발생하였다. <br />
<strong>스트림으로 내림차순 정렬 할 때 시간이 소요</strong>되는 것으로 생각하고 고쳐보기로 했다.</p>

<h4 id="정렬-방식-변경">정렬 방식 변경</h4>
<p>A와 B배열 모두 오름차순 정렬 후 <strong>A배열은 오름차순 인덱스로 접근하고, B배열은 내림차순 인덱스로 접근</strong>하였다.</p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="rouge-code"><pre><span class="nc">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="no">A</span><span class="o">);</span>
<span class="nc">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="no">B</span><span class="o">);</span>
<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="no">A</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
    <span class="n">answer</span> <span class="o">+=</span> <span class="no">A</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">*</span> <span class="no">B</span><span class="o">[</span><span class="no">B</span><span class="o">.</span><span class="na">length</span><span class="o">-</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">];</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>작성한 코드를 제출하니 정상적으로 효율성 테스트를 통과하였다.</p>

<p><br /></p>

<h3 id="작성-코드">작성 코드</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span><span class="o">[]</span> <span class="no">A</span> <span class="o">=</span> <span class="o">{</span><span class="mi">1</span><span class="o">,</span><span class="mi">2</span><span class="o">};</span>
        <span class="kt">int</span><span class="o">[]</span> <span class="no">B</span> <span class="o">=</span> <span class="o">{</span><span class="mi">3</span><span class="o">,</span><span class="mi">4</span><span class="o">};</span>

        <span class="kt">long</span> <span class="n">start</span> <span class="o">=</span> <span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        <span class="n">solution2</span><span class="o">(</span><span class="no">A</span><span class="o">,</span><span class="no">B</span><span class="o">);</span>
        <span class="kt">long</span> <span class="n">end</span> <span class="o">=</span> <span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"\n수행시간 = "</span> <span class="o">+</span> <span class="o">(</span><span class="n">end</span><span class="o">-</span><span class="n">start</span><span class="o">));</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">solution2</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="no">A</span><span class="o">,</span> <span class="kt">int</span><span class="o">[]</span> <span class="no">B</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="nc">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="no">A</span><span class="o">);</span>
        <span class="nc">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="no">B</span><span class="o">);</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="no">A</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="n">answer</span> <span class="o">+=</span> <span class="no">A</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">*</span> <span class="no">B</span><span class="o">[</span><span class="no">B</span><span class="o">.</span><span class="na">length</span><span class="o">-</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">];</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="회고">회고</h3>
<ul>
  <li>배열을 정렬할 때 <strong>스트림을 활용한 내림차순 정렬</strong> 등, 특정 메서드를 활용하는 것도 좋지만, 마냥 효율적인 코드는 아닐 수도 있음을 느꼈다.</li>
</ul>]]></content><author><name>lango</name></author><category term="Java" /><category term="blog" /><category term="algorithm" /><category term="study" /><category term="java" /><category term="programmers" /><summary type="html"><![CDATA[level 2 - 최솟값 만들기]]></summary></entry><entry><title type="html">[Java] 프로그래머스(level-2) - 숫자의 표현</title><link href="http://localhost:4000/java/60-post/" rel="alternate" type="text/html" title="[Java] 프로그래머스(level-2) - 숫자의 표현" /><published>2022-09-13T00:00:00+09:00</published><updated>2022-09-13T00:00:00+09:00</updated><id>http://localhost:4000/java/60-post</id><content type="html" xml:base="http://localhost:4000/java/60-post/"><![CDATA[<p><br /></p>
<center><img src="/assets/images/programmers/20220913_04.png" width="700" /></center>
<p><br /></p>

<p><strong>입출력 예시</strong></p>
<blockquote>
  <p>Input-1 <br />
<strong>15</strong> <br />
Output-1 <br />
<strong>4</strong></p>
</blockquote>

<p><br /></p>

<h3 id="문제-풀이">문제 풀이</h3>
<hr />
<p>연속된 자연수들의 합으로 n을 만들수 있을 때 몇개의 방법으로 n을 만들 수 있는지를 알아야 한다.</p>

<h4 id="연속된-자연수-합과-비교하기">연속된 자연수 합과 비교하기</h4>
<p>먼저 중첩 반복문을 활용해 i를 1~15까지 j를 i~15까지 순회하며 <strong>j를 누적해서 더한 값이 n이 된다면 연속된 자연수</strong>들로 이루어진 합이 된다.</p>

<p>한 번 코드로 작성해보자.</p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
</pre></td><td class="rouge-code"><pre><span class="kt">int</span> <span class="n">sum</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;=</span><span class="n">n</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
    <span class="n">sum</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
    <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="n">i</span><span class="o">;</span> <span class="n">j</span><span class="o">&lt;=</span><span class="n">n</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
        <span class="n">sum</span> <span class="o">+=</span> <span class="n">j</span><span class="o">;</span>
        <span class="k">if</span><span class="o">(</span><span class="n">sum</span> <span class="o">==</span> <span class="n">n</span><span class="o">)</span> <span class="n">answer</span><span class="o">++;</span>
        <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">sum</span> <span class="o">&gt;</span> <span class="n">n</span><span class="o">)</span> <span class="k">break</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>위 코드를 보면 바깥 반복문을 i만큼(1~15까지) 돌며 i마다 j를 순회하는데, i부터 시작된 j를 누적해서 sum에 더해가며 n과 같은지를 비교한다. <br />
sum과 n이 같다면 연속된 자연수들로 이루어진 합이므로 answer를 증가시킨다. <br /> 
만약, <strong>n과 같지 않고 커져버린다면 연속된 자연수들로 합으로 n을 만들지 못하기에</strong> 안쪽 반복문에서 탈출한다.</p>

<h4 id="등차수열-활용-접근">등차수열 활용 접근</h4>
<p>위 방법으로 문제를 풀면서 종이에 끄적끄적 그린 그림을 보니 등차수열과 같은 모양을 하고 있었다. <br />
등차수열의 원리를 활용하여 풀어보니 동일하게 정답을 낼 수 있었다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="rouge-code"><pre>15 % 1 == 0 // -1
14 % 2 == 0 // -2
12 % 3 == 0 //-3
9 % 4 != 0 // -4
5 % 5 == 0 //-5
</pre></td></tr></tbody></table></code></pre></div></div>
<p>위 내용을 보면 모두 -1이라는 공차를 가진 등차수열임을 알 수 있다. <br />
이 원리를 적용하여 풀어보자.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre><span class="kt">int</span> <span class="n">idx</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
<span class="k">while</span><span class="o">(</span><span class="kc">true</span><span class="o">)</span> <span class="o">{</span>
    <span class="k">if</span><span class="o">(</span><span class="n">n</span><span class="o">%</span><span class="n">idx</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="n">answer</span><span class="o">++;</span>
    <span class="n">n</span><span class="o">-=</span><span class="n">idx</span><span class="o">;</span>
    <span class="n">idx</span><span class="o">++;</span>
    <span class="k">if</span><span class="o">(</span><span class="n">n</span> <span class="o">&lt;=</span> <span class="mi">0</span><span class="o">)</span> <span class="k">break</span><span class="o">;</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>위 코드를 보면 while문을 순회하며 n을 idx(인덱스)로 나눈 나머지가 0이라면 answer를 증가시키고 n에서 idx를 뺀다. <br />
위 과정을 반복하며 n이 0보다 작거나 같아지면 while문을 탈출한다.</p>

<p><br /></p>

<h3 id="작성-코드">작성 코드</h3>
<hr />
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">Scanner</span> <span class="n">sc</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Scanner</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
        <span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>

        <span class="kt">long</span> <span class="n">start</span> <span class="o">=</span> <span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        <span class="n">solution2</span><span class="o">(</span><span class="n">n</span><span class="o">);</span>
        <span class="kt">long</span> <span class="n">end</span> <span class="o">=</span> <span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"\n수행시간 = "</span> <span class="o">+</span> <span class="o">(</span><span class="n">end</span><span class="o">-</span><span class="n">start</span><span class="o">));</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span> <span class="n">n</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">sum</span><span class="o">;</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;=</span><span class="n">n</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="n">sum</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="n">i</span><span class="o">;</span> <span class="n">j</span><span class="o">&lt;=</span><span class="n">n</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
                <span class="n">sum</span> <span class="o">+=</span> <span class="n">j</span><span class="o">;</span>
                <span class="k">if</span><span class="o">(</span><span class="n">sum</span> <span class="o">==</span> <span class="n">n</span><span class="o">)</span> <span class="n">answer</span><span class="o">++;</span>
                <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">sum</span> <span class="o">&gt;</span> <span class="n">n</span><span class="o">)</span> <span class="k">break</span><span class="o">;</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">solution2</span><span class="o">(</span><span class="kt">int</span> <span class="n">n</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">idx</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
        <span class="k">while</span><span class="o">(</span><span class="kc">true</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="n">n</span><span class="o">%</span><span class="n">idx</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="n">answer</span><span class="o">++;</span>
            <span class="n">n</span><span class="o">-=</span><span class="n">idx</span><span class="o">;</span>
            <span class="n">idx</span><span class="o">++;</span>
            <span class="k">if</span><span class="o">(</span><span class="n">n</span> <span class="o">&lt;=</span> <span class="mi">0</span><span class="o">)</span> <span class="k">break</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="회고">회고</h3>
<ul>
  <li>등차수열 등과 같은 수학적 원리를 통해 문제에 접근했을 때 더 간단하게 풀 수 있다고 느꼈다.</li>
</ul>]]></content><author><name>lango</name></author><category term="Java" /><category term="blog" /><category term="algorithm" /><category term="study" /><category term="java" /><category term="programmers" /><summary type="html"><![CDATA[level 2 - 숫자의 표현]]></summary></entry></feed>