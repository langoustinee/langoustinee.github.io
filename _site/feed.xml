<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2022-08-03T12:51:15+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">lango’s DevLog</title><subtitle>developer</subtitle><author><name>lango</name></author><entry><title type="html">[알고리즘 스터디 - Java] 백준 8958번</title><link href="http://localhost:4000/java/16-post/" rel="alternate" type="text/html" title="[알고리즘 스터디 - Java] 백준 8958번" /><published>2022-08-03T00:00:00+09:00</published><updated>2022-08-03T00:00:00+09:00</updated><id>http://localhost:4000/java/16-post</id><content type="html" xml:base="http://localhost:4000/java/16-post/"><![CDATA[<p><br /></p>

<center><img src="/assets/images/backjoon/8958.png" /></center>

<blockquote>
  <p>Input-1) <br />
5 <br />
OOXXOXXOOO <br />
OOXXOOXXOO <br />
OXOXOXOXOXOXOX <br />
OOOOOOOOOO <br />
OOOOXOOOOXOOOOX <br /></p>
</blockquote>

<blockquote>
  <p>Output-1) <br />
10 <br />
9 <br />
7 <br />
55 <br />
30 <br /></p>
</blockquote>

<h3 id="접근-방식">접근 방식</h3>
<p>OX 퀴즈 결과 문자열을 순회하며 아래의 조건을 통해 점수를 계산하였다.</p>
<ul>
  <li>1) O인 경우 점수를 1 증가시킨다.</li>
  <li>2) X인 경우 점수를 증가시키지 않는다.</li>
  <li>3) 점수가 계산될 떄마다 해당 점수를 합한다.</li>
</ul>

<p>하나의 OX퀴즈 문자열 점수 계산이 끝나고 합을 구했다면 4) 별도의 합 점수 배열에 담는다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
</pre></td><td class="rouge-code"><pre><span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
    <span class="n">ox_arr</span> <span class="o">=</span> <span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">().</span><span class="na">split</span><span class="o">(</span><span class="s">""</span><span class="o">);</span> <span class="c1">// 입력받을 OX퀴즈 문자열</span>
    <span class="n">sum</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="c1">// 문자열 점수들의 합</span>
    <span class="n">score</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="c1">// 해당 문자열의 점수</span>
    <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">j</span><span class="o">&lt;</span><span class="n">ox_arr</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
        <span class="k">if</span><span class="o">(</span><span class="n">ox_arr</span><span class="o">[</span><span class="n">j</span><span class="o">].</span><span class="na">equals</span><span class="o">(</span><span class="s">"O"</span><span class="o">))</span> <span class="o">{</span> <span class="c1">// 1번</span>
            <span class="n">score</span> <span class="o">+=</span> <span class="mi">1</span><span class="o">;</span> 
            <span class="n">sum</span> <span class="o">+=</span> <span class="n">score</span><span class="o">;</span> <span class="c1">// 3번</span>
        <span class="o">}</span>
        <span class="k">else</span> <span class="o">{</span> <span class="c1">// 2번</span>
            <span class="n">score</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
            <span class="n">sum</span> <span class="o">+=</span> <span class="n">score</span><span class="o">;</span> <span class="c1">// 3번</span>
        <span class="o">}</span>
    <span class="o">}</span>
    <span class="n">ox_scores</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="n">sum</span><span class="o">;</span> <span class="c1">// 4번</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<h4 id="작성코드">작성코드</h4>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">java.io.BufferedReader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.BufferedWriter</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.InputStreamReader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.OutputStreamWriter</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">IOException</span> <span class="o">{</span>
        
        <span class="nc">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>
        <span class="nc">BufferedWriter</span> <span class="n">bw</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedWriter</span><span class="o">(</span><span class="k">new</span> <span class="nc">OutputStreamWriter</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">));</span>

        <span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
        <span class="kt">int</span> <span class="n">sum</span><span class="o">,</span> <span class="n">score</span><span class="o">;</span>
        <span class="nc">String</span><span class="o">[]</span> <span class="n">ox_arr</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">String</span><span class="o">[</span><span class="n">n</span><span class="o">];</span>
        <span class="kt">int</span><span class="o">[]</span> <span class="n">ox_scores</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">n</span><span class="o">];</span>

        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="n">ox_arr</span> <span class="o">=</span> <span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">().</span><span class="na">split</span><span class="o">(</span><span class="s">""</span><span class="o">);</span>
            <span class="n">sum</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
            <span class="n">score</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
            <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">j</span><span class="o">&lt;</span><span class="n">ox_arr</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
                <span class="k">if</span><span class="o">(</span><span class="n">ox_arr</span><span class="o">[</span><span class="n">j</span><span class="o">].</span><span class="na">equals</span><span class="o">(</span><span class="s">"O"</span><span class="o">))</span> <span class="o">{</span>
                    <span class="n">score</span> <span class="o">+=</span> <span class="mi">1</span><span class="o">;</span>
                    <span class="n">sum</span> <span class="o">+=</span> <span class="n">score</span><span class="o">;</span>
                <span class="o">}</span>
                <span class="k">else</span> <span class="o">{</span>
                    <span class="n">score</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
                    <span class="n">sum</span> <span class="o">+=</span> <span class="n">score</span><span class="o">;</span>
                <span class="o">}</span>
            <span class="o">}</span>
            <span class="n">ox_scores</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="n">sum</span><span class="o">;</span>
        <span class="o">}</span>

        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">ox_score</span> <span class="o">:</span> <span class="n">ox_scores</span><span class="o">)</span> <span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">ox_score</span> <span class="o">+</span> <span class="s">"\n"</span><span class="o">);</span>
        
        <span class="n">bw</span><span class="o">.</span><span class="na">flush</span><span class="o">();</span>
        <span class="n">bw</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
        <span class="n">br</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>]]></content><author><name>lango</name></author><category term="Java" /><category term="Blog" /><category term="algorithm" /><category term="study" /><category term="java" /><category term="Backjoon" /><summary type="html"><![CDATA[OX 퀴즈]]></summary></entry><entry><title type="html">[알고리즘 스터디 - Java] 백준 1110번</title><link href="http://localhost:4000/java/14-post/" rel="alternate" type="text/html" title="[알고리즘 스터디 - Java] 백준 1110번" /><published>2022-08-02T00:00:00+09:00</published><updated>2022-08-02T00:00:00+09:00</updated><id>http://localhost:4000/java/14-post</id><content type="html" xml:base="http://localhost:4000/java/14-post/"><![CDATA[<p><br /></p>

<center><img src="/assets/images/backjoon/1110.png" /></center>

<blockquote>
  <p>Input-1) <br />
26 <br /></p>
</blockquote>

<blockquote>
  <p>Output-1) <br />
4 <br /></p>
</blockquote>

<blockquote>
  <p>Input-2) <br />
55 <br /></p>
</blockquote>

<blockquote>
  <p>Output-2) <br />
3 <br /></p>
</blockquote>

<h3 id="접근-방식">접근 방식</h3>
<p>주어진 수를 N, 새로운 수를 T라고 가정하자.<br />
<strong>N의 일의 자리가 T의 십의 자리수가 되고, N을 합한 수의 일의 자리가 T의 일의 자리수가 된다.</strong></p>
<ul>
  <li>N[0] + N[1] = T[ N[1] + (N[0]+N[1])[1] ]</li>
</ul>

<p>N과 T의 자리수를 파악할 수 있게 2칸 크기의 문자열 배열을 통해 위 패턴을 구현하였다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="rouge-code"><pre><span class="nc">String</span> <span class="n">n</span> <span class="o">=</span> <span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">();</span> <span class="c1">// 입력값</span>
<span class="kt">int</span> <span class="n">first</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">n</span><span class="o">);</span> <span class="c1">// 최초 입력 숫자 저장</span>
<span class="nc">String</span> <span class="no">N</span><span class="o">[]</span> <span class="o">=</span> <span class="n">n</span><span class="o">.</span><span class="na">split</span><span class="o">(</span><span class="s">""</span><span class="o">);</span> <span class="c1">// 입력 숫자 배열</span>
<span class="nc">String</span> <span class="no">T</span><span class="o">[]</span> <span class="o">=</span> <span class="n">n</span><span class="o">.</span><span class="na">split</span><span class="o">(</span><span class="s">""</span><span class="o">);</span> <span class="c1">// 입력 숫자 합 배열</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>또한 T를 만들려면 N의 합이 필요하기에 N의 합을 구한 뒤 
sum(N의 합)이 10 보다 큰지 작은지 여부를 검증한 후 T의 자리수를 세팅하였다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
</pre></td><td class="rouge-code"><pre><span class="n">sum</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="no">N</span><span class="o">[</span><span class="mi">0</span><span class="o">])</span> <span class="o">+</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="no">N</span><span class="o">[</span><span class="mi">1</span><span class="o">]);</span>
<span class="k">if</span><span class="o">(</span><span class="n">sum</span> <span class="o">&gt;=</span> <span class="mi">10</span><span class="o">)</span> <span class="o">{</span>
    <span class="no">T</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">=</span> <span class="no">N</span><span class="o">[</span><span class="mi">1</span><span class="o">];</span>
    <span class="no">T</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="o">=</span> <span class="nc">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">sum</span><span class="o">).</span><span class="na">split</span><span class="o">(</span><span class="s">""</span><span class="o">)[</span><span class="mi">1</span><span class="o">];</span>
<span class="o">}</span><span class="k">else</span> <span class="o">{</span>
    <span class="no">T</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">=</span> <span class="no">N</span><span class="o">[</span><span class="mi">1</span><span class="o">];</span>
    <span class="no">T</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="o">=</span> <span class="nc">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">sum</span><span class="o">);</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>주어진 N의 값이 계속해서 새로운 T값으로 대체해줘야 하기에 
T가 구해지면 N값으로 대체하도록 하였다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="no">N</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">=</span> <span class="no">T</span><span class="o">[</span><span class="mi">0</span><span class="o">];</span>
<span class="no">N</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="o">=</span> <span class="no">T</span><span class="o">[</span><span class="mi">1</span><span class="o">];</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>결국 N의 정수값이 최초 입력받은 first값과 동일할 경우 반복문에서 탈출하도록 구현하였다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="k">if</span><span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="no">N</span><span class="o">[</span><span class="mi">0</span><span class="o">])*</span><span class="mi">10</span> <span class="o">+</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="no">N</span><span class="o">[</span><span class="mi">1</span><span class="o">])</span> <span class="o">==</span> <span class="n">first</span><span class="o">)</span> <span class="k">break</span><span class="o">;</span>    
</pre></td></tr></tbody></table></code></pre></div></div>

<p><br /></p>

<h3 id="문제-해결">문제 해결</h3>
<ol>
  <li>N의 초기값이 10 이하인 수라면 반복문에서 예외가 발생한다.<br />
<strong>N이 10 이하일 경우 앞에 “0”을 붙이도록 수정하였다.</strong></li>
</ol>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="k">if</span><span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">n</span><span class="o">)</span> <span class="o">&lt;</span> <span class="mi">10</span><span class="o">)</span> <span class="n">n</span> <span class="o">=</span> <span class="s">"0"</span> <span class="o">+</span> <span class="n">n</span><span class="o">;</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><br /></p>

<h4 id="작성코드">작성코드</h4>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">java.io.BufferedReader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.BufferedWriter</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.InputStreamReader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.OutputStreamWriter</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">IOException</span> <span class="o">{</span>
        <span class="nc">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>
        <span class="nc">BufferedWriter</span> <span class="n">bw</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedWriter</span><span class="o">(</span><span class="k">new</span> <span class="nc">OutputStreamWriter</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">));</span>
        <span class="nc">String</span> <span class="n">n</span> <span class="o">=</span> <span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">();</span>
        <span class="kt">int</span> <span class="n">sum</span><span class="o">,</span> <span class="n">cnt</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">first</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">n</span><span class="o">);</span> <span class="c1">// 최초 입력 숫자 저장</span>
        <span class="k">if</span><span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">n</span><span class="o">)</span> <span class="o">&lt;</span> <span class="mi">10</span><span class="o">)</span> <span class="n">n</span> <span class="o">=</span> <span class="s">"0"</span> <span class="o">+</span> <span class="n">n</span><span class="o">;</span>
        <span class="nc">String</span> <span class="no">N</span><span class="o">[]</span> <span class="o">=</span> <span class="n">n</span><span class="o">.</span><span class="na">split</span><span class="o">(</span><span class="s">""</span><span class="o">);</span> <span class="c1">// 입력 숫자 배열</span>
        <span class="nc">String</span> <span class="no">T</span><span class="o">[]</span> <span class="o">=</span> <span class="n">n</span><span class="o">.</span><span class="na">split</span><span class="o">(</span><span class="s">""</span><span class="o">);</span> <span class="c1">// 입력 숫자 합 배열</span>
        <span class="k">while</span> <span class="o">(</span><span class="kc">true</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">n</span><span class="o">)</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">cnt</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
                <span class="k">break</span><span class="o">;</span>
            <span class="o">}</span>
            <span class="n">sum</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="no">N</span><span class="o">[</span><span class="mi">0</span><span class="o">])</span> <span class="o">+</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="no">N</span><span class="o">[</span><span class="mi">1</span><span class="o">]);</span>
            <span class="k">if</span><span class="o">(</span><span class="n">sum</span> <span class="o">&gt;=</span> <span class="mi">10</span><span class="o">)</span> <span class="o">{</span>
                <span class="no">T</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">=</span> <span class="no">N</span><span class="o">[</span><span class="mi">1</span><span class="o">];</span>
                <span class="no">T</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="o">=</span> <span class="nc">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">sum</span><span class="o">).</span><span class="na">split</span><span class="o">(</span><span class="s">""</span><span class="o">)[</span><span class="mi">1</span><span class="o">];</span>
            <span class="o">}</span><span class="k">else</span> <span class="o">{</span>
                <span class="no">T</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">=</span> <span class="no">N</span><span class="o">[</span><span class="mi">1</span><span class="o">];</span>
                <span class="no">T</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="o">=</span> <span class="nc">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">sum</span><span class="o">);</span>
            <span class="o">}</span>
            <span class="no">N</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">=</span> <span class="no">T</span><span class="o">[</span><span class="mi">0</span><span class="o">];</span>
            <span class="no">N</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="o">=</span> <span class="no">T</span><span class="o">[</span><span class="mi">1</span><span class="o">];</span>
            <span class="n">cnt</span> <span class="o">+=</span> <span class="mi">1</span><span class="o">;</span>
            <span class="k">if</span><span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="no">N</span><span class="o">[</span><span class="mi">0</span><span class="o">])*</span><span class="mi">10</span> <span class="o">+</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="no">N</span><span class="o">[</span><span class="mi">1</span><span class="o">])</span> <span class="o">==</span> <span class="n">first</span><span class="o">)</span> <span class="k">break</span><span class="o">;</span>    
        <span class="o">}</span>
        <span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">cnt</span> <span class="o">+</span> <span class="s">"\n"</span><span class="o">);</span>
        <span class="n">bw</span><span class="o">.</span><span class="na">flush</span><span class="o">();</span>
        <span class="n">bw</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
        <span class="n">br</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><br /></p>

<h2 id="회고">회고</h2>
<ul>
  <li>1110번 문제의 알고리즘 패턴의 경우 생각보다는 단순해보였는데, 실제로 해당 로직을 구현하고 보니, 더 좋은 패턴으로 풀 수 있었을 것 같다.</li>
  <li>십의 자리수와 일의 자리수 조합을 아름답게 사용하면 코드길이를 대폭 줄일 수 있을 것 같다.</li>
</ul>]]></content><author><name>lango</name></author><category term="Java" /><category term="Blog" /><category term="algorithm" /><category term="study" /><category term="java" /><category term="Backjoon" /><summary type="html"><![CDATA[더하기 사이클]]></summary></entry><entry><title type="html">[알고리즘 스터디 - Java] 백준 2577번</title><link href="http://localhost:4000/java/15-post/" rel="alternate" type="text/html" title="[알고리즘 스터디 - Java] 백준 2577번" /><published>2022-08-02T00:00:00+09:00</published><updated>2022-08-02T00:00:00+09:00</updated><id>http://localhost:4000/java/15-post</id><content type="html" xml:base="http://localhost:4000/java/15-post/"><![CDATA[<p><br /></p>

<center><img src="/assets/images/backjoon/2577.png" /></center>

<blockquote>
  <p>Input-1) <br />
150 <br />
266 <br />
427 <br /></p>
</blockquote>

<blockquote>
  <p>Output-1) <br />
3 <br />
1 <br />
0 <br />
2 <br />
0 <br />
0 <br />
0 <br />
2 <br />
0 <br />
0 <br /></p>
</blockquote>

<h3 id="접근-방식">접근 방식</h3>
<p>a, b, c를 곱한 값을 arr(배열)로 가지고 있다고 하면, 
0부터 9까지의 인덱스가 arr의 값과 <strong>중복</strong>되는지를 검증하여 세면 될 것이라 생각했다.</p>

<p>먼저 a, b, c를 곱하여 arr이라는 배열로 파싱한다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="c1">// 세 수를 곱한 값을 배열로 파싱</span>
<span class="nc">String</span><span class="o">[]</span> <span class="n">arr</span> <span class="o">=</span> <span class="nc">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">a</span><span class="o">*</span><span class="n">b</span><span class="o">*</span><span class="n">c</span><span class="o">).</span><span class="na">split</span><span class="o">(</span><span class="s">""</span><span class="o">);</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>그리고 반복문을 통해 0~9까지 돌며 arr 배열의 값과 같은지를 검증한다.
같다면 cnt(개수)를 증가시킨다.
바깥 반복문 사이클이 한바퀴씩 돌때마다 <strong>cnt를 0으로 초기화</strong>하여 인덱스별 개수를 세도록 하였다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre><span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;=</span><span class="mi">9</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span> 
    <span class="n">cnt</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="c1">// i가 한바퀴 돌때마다 cnt 초기화</span>
    <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">j</span><span class="o">&lt;</span><span class="n">arr</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span> <span class="c1">// arr를 돌며 같으면 cnt 증가</span>
        <span class="k">if</span><span class="o">(</span><span class="n">i</span> <span class="o">==</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">arr</span><span class="o">[</span><span class="n">j</span><span class="o">]))</span> <span class="n">cnt</span> <span class="o">+=</span> <span class="mi">1</span><span class="o">;</span>
    <span class="o">}</span>
    <span class="n">counter</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">toString</span><span class="o">(</span><span class="n">i</span><span class="o">),</span> <span class="n">cnt</span><span class="o">);</span> <span class="c1">// 현재 i까지 저장된 cnt를 counter 맵에 저장</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><br /></p>

<h4 id="작성코드">작성코드</h4>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">java.io.BufferedReader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.BufferedWriter</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.InputStreamReader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.OutputStreamWriter</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.HashMap</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">IOException</span> <span class="o">{</span>
        <span class="nc">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>
        <span class="nc">BufferedWriter</span> <span class="n">bw</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedWriter</span><span class="o">(</span><span class="k">new</span> <span class="nc">OutputStreamWriter</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">));</span>

        <span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
        <span class="kt">int</span> <span class="n">b</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
        <span class="kt">int</span> <span class="n">c</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
        <span class="kt">int</span> <span class="n">cnt</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        
        <span class="nc">String</span><span class="o">[]</span> <span class="n">arr</span> <span class="o">=</span> <span class="nc">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">a</span><span class="o">*</span><span class="n">b</span><span class="o">*</span><span class="n">c</span><span class="o">).</span><span class="na">split</span><span class="o">(</span><span class="s">""</span><span class="o">);</span>
        <span class="nc">HashMap</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">counter</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HashMap</span><span class="o">&lt;&gt;();</span>

        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;=</span><span class="mi">9</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="n">cnt</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
            <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">j</span><span class="o">&lt;</span><span class="n">arr</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
                <span class="k">if</span><span class="o">(</span><span class="n">i</span> <span class="o">==</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">arr</span><span class="o">[</span><span class="n">j</span><span class="o">]))</span> <span class="n">cnt</span> <span class="o">+=</span> <span class="mi">1</span><span class="o">;</span>
            <span class="o">}</span>
            <span class="n">counter</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">toString</span><span class="o">(</span><span class="n">i</span><span class="o">),</span> <span class="n">cnt</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">res</span> <span class="o">:</span> <span class="n">counter</span><span class="o">.</span><span class="na">values</span><span class="o">())</span> <span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">res</span> <span class="o">+</span> <span class="s">"\n"</span><span class="o">);</span>

        <span class="n">bw</span><span class="o">.</span><span class="na">flush</span><span class="o">();</span>
        <span class="n">bw</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
        <span class="n">br</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>]]></content><author><name>lango</name></author><category term="Java" /><category term="Blog" /><category term="algorithm" /><category term="study" /><category term="java" /><category term="Backjoon" /><summary type="html"><![CDATA[숫자의 개수]]></summary></entry><entry><title type="html">[알고리즘 스터디 - Java] 백준 10951번</title><link href="http://localhost:4000/java/13-post/" rel="alternate" type="text/html" title="[알고리즘 스터디 - Java] 백준 10951번" /><published>2022-08-01T00:00:00+09:00</published><updated>2022-08-01T00:00:00+09:00</updated><id>http://localhost:4000/java/13-post</id><content type="html" xml:base="http://localhost:4000/java/13-post/"><![CDATA[<p><br /></p>

<h1 id="ab---4">A+B - 4</h1>
<p>두 정수 A와 B를 입력받은 다음, A+B를 출력하는 프로그램을 작성하시오.
입력은 여러 개의 테스트 케이스로 이루어져 있다.
각 테스트 케이스는 한 줄로 이루어져 있으며, 각 줄에 A와 B가 주어진다. (0 &lt; A, B &lt; 10)</p>

<blockquote>
  <p>Input-1) <br />
1 1 <br />
2 3 <br />
3 4 <br />
9 8 <br />
5 2 <br /></p>
</blockquote>

<blockquote>
  <p>Output-1) <br />
2 <br />
5 <br />
7 <br />
17 <br />
7 <br /></p>
</blockquote>

<h3 id="접근-방식">접근 방식</h3>
<ul>
  <li>해당 문제에서 핵심은 입력 종료 조건이 없다는 것이다.
그래서 더 이상 읽을 수 있는 데이터가 없다면 반복을 종료하라는 것으로 판단하였다.</li>
</ul>

<blockquote>
  <ol>
    <li>A, B는 공백으로 구분된다.</li>
    <li><strong>EOF(읽을 수 없는 데이터)</strong> 가 존재할 경우 입력을 종료한다.
<br /></li>
  </ol>
</blockquote>

<blockquote>
  <p>EOF 란?
데이터가 더이상 존재하지 않을 때 우리는 EOF (End of File) 즉, 파일의 끝이라고 한다.</p>
</blockquote>

<p><br /></p>

<h3 id="문제-해결-과정">문제 해결 과정</h3>
<ul>
  <li>Scanner와 입력받는 방식과 BufferedReader로 입력받는 방식으로 풀어볼 것이다.</li>
</ul>

<p><br /></p>

<h3 id="scanner를-통한-풀이과정">Scanner를 통한 풀이과정</h3>
<ul>
  <li>Scanner 클래스의 hasNext() 메서드를 이용해 입력의 종료를 검증하였다.
hasNext()나 hasNextInt() 둘중 아무거나 사용해도 무관하지만 
nextInt()를 통해 정수를 입력받으니 hasNextInt()를 사용하였다.
    <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="nc">Scanner</span> <span class="n">sc</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Scanner</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
<span class="k">while</span> <span class="o">(</span><span class="n">sc</span><span class="o">.</span><span class="na">hasNextInt</span><span class="o">())</span> <span class="o">...</span>
</pre></td></tr></tbody></table></code></pre></div>    </div>
  </li>
</ul>

<h4 id="scanner-작성코드">Scanner 작성코드</h4>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">java.util.Scanner</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">Scanner</span> <span class="n">sc</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Scanner</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
        <span class="kt">int</span> <span class="n">a</span><span class="o">,</span> <span class="n">b</span><span class="o">;</span>
        <span class="k">while</span> <span class="o">(</span><span class="n">sc</span><span class="o">.</span><span class="na">hasNextInt</span><span class="o">())</span> <span class="o">{</span>
            <span class="n">a</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
            <span class="n">b</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">a</span><span class="o">+</span><span class="n">b</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="n">sc</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><br /></p>

<h3 id="bufferedreader를-통한-풀이과정">BufferedReader를 통한 풀이과정</h3>
<ul>
  <li>readLine을 통해 입력을 받아 input에 저장된 값이 null일 경우 입력의 종료라고 판단하고 반복문을 종료하도록 작성하였다.
    <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="nc">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>
<span class="k">while</span><span class="o">((</span><span class="n">input</span> <span class="o">=</span> <span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">())</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">...</span>
</pre></td></tr></tbody></table></code></pre></div>    </div>
  </li>
</ul>

<h4 id="bufferedreader-작성코드">BufferedReader 작성코드</h4>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">java.io.BufferedReader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.BufferedWriter</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.InputStreamReader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.OutputStreamWriter</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.StringTokenizer</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">IOException</span> <span class="o">{</span>
        <span class="nc">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>
        <span class="nc">BufferedWriter</span> <span class="n">bw</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedWriter</span><span class="o">(</span><span class="k">new</span> <span class="nc">OutputStreamWriter</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">));</span>
        <span class="kt">int</span> <span class="n">a</span><span class="o">,</span> <span class="n">b</span><span class="o">;</span>
        <span class="nc">String</span> <span class="n">input</span><span class="o">;</span>
        <span class="k">while</span><span class="o">((</span><span class="n">input</span> <span class="o">=</span> <span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">())</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
            <span class="nc">StringTokenizer</span> <span class="n">st</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">input</span><span class="o">);</span>
            <span class="n">a</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
            <span class="n">b</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
            <span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">((</span><span class="n">a</span><span class="o">+</span><span class="n">b</span><span class="o">)</span> <span class="o">+</span> <span class="s">"\n"</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="n">bw</span><span class="o">.</span><span class="na">flush</span><span class="o">();</span>
        <span class="n">bw</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
        <span class="n">br</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><br /></p>

<h2 id="회고">회고</h2>
<ul>
  <li>Python으로는 손쉽게 풀수 있었으나 Java로 풀어보니 EOF를 고려하지 않을 수 없었다. 그래서 EOF에 대해서 다시 복습할 수 있었다.</li>
  <li>그리고 입력값이 많아질수록 Scanner보다 BufferedReader가 실행 속도에 있어서 메리트가 있음을 알게 되었다.</li>
</ul>]]></content><author><name>lango</name></author><category term="Java" /><category term="Blog" /><category term="algorithm" /><category term="study" /><category term="java" /><category term="Backjoon" /><summary type="html"><![CDATA[A+B - 4]]></summary></entry><entry><title type="html">[알고리즘 스터디] 백준 1316번</title><link href="http://localhost:4000/python/12-post/" rel="alternate" type="text/html" title="[알고리즘 스터디] 백준 1316번" /><published>2022-07-21T00:00:00+09:00</published><updated>2022-07-21T00:00:00+09:00</updated><id>http://localhost:4000/python/12-post</id><content type="html" xml:base="http://localhost:4000/python/12-post/"><![CDATA[<p><br /></p>

<h1 id="그룹-단어-체커">그룹 단어 체커</h1>
<p>그룹 단어란 단어에 존재하는 모든 문자에 대해서, 각 문자가 연속해서 나타나는 경우만을 말한다. 예를 들면, ccazzzzbb는 c, a, z, b가 모두 연속해서 나타나고, kin도 k, i, n이 연속해서 나타나기 때문에 그룹 단어이지만, aabbbccb는 b가 떨어져서 나타나기 때문에 그룹 단어가 아니다. 단어 N개를 입력으로 받아 그룹 단어의 개수를 출력하는 프로그램을 작성하시오.</p>

<blockquote>
  <p>Input-1) <br />
3 <br />
happy <br />
new <br />
year <br /></p>
</blockquote>

<blockquote>
  <p>Output-1) <br />
3</p>
</blockquote>

<blockquote>
  <p>Input-2) <br />
4 <br />
aba <br />
abab <br />
abcabc <br />
a</p>
</blockquote>

<blockquote>
  <p>Output-2) <br />
1</p>
</blockquote>

<p><br /></p>

<h3 id="접근-방식">접근 방식</h3>
<ol>
  <li>2글자 이하의 문자열은 무조건 조건을 충족하기에 그룹 단어로 포함한다.</li>
  <li>3글자 이상의 문자열일 경우 별도의 조건을 통해 검증한다.
    <ul>
      <li>문자열 중 같은 문자가 여러개일 경우 연속된 문자인지 확인한다.</li>
      <li>현재 문자가 뒷 문자열에 없는지 확인한다.</li>
    </ul>
  </li>
  <li>2번 조건을 충족할 경우 그룹단어로 포함한다.</li>
</ol>

<p><br /></p>

<h3 id="문제">문제</h3>
<ul>
  <li>3글자 이상의 문자열이면서, 같은 문자가 여러개 존재할 경우 조건을 일일이 부여해야 했다.</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="rouge-code"><pre><span class="k">if</span> <span class="n">group_word</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">!=</span> <span class="n">group_word</span><span class="p">[</span><span class="n">j</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span> <span class="ow">and</span> <span class="n">group_word</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">!=</span> <span class="n">group_word</span><span class="p">[</span><span class="n">j</span><span class="o">-</span><span class="mi">1</span><span class="p">]:</span>
    <span class="n">status</span> <span class="o">=</span> <span class="bp">False</span>
<span class="k">if</span> <span class="n">group_word</span><span class="p">[</span><span class="n">j</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="n">group_word</span><span class="p">[</span><span class="n">j</span><span class="o">+</span><span class="mi">1</span><span class="p">]:</span>
    <span class="n">status</span> <span class="o">=</span> <span class="bp">False</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<ul>
  <li>현재 문자 기준으로 뒷 문자와 앞 문자가 같은 경우(aba 등)는 고려할 수 있으나 같은 문자가 서로 멀리 존재할 경우(aabcbb)도 고려해야 했다.</li>
</ul>

<p><br /></p>

<h3 id="문제-해결">문제 해결</h3>
<p>조건을 일일이 부여하여 검증하는 것이 아니라 슬라이싱 방식을 통해 같은 문자가 여러개 이면서 연속되었는지 여부를 검증하도록 수정하였다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="k">if</span> <span class="n">g_word</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="ow">in</span> <span class="n">g_word</span><span class="p">[</span><span class="n">j</span><span class="o">+</span><span class="mi">1</span><span class="p">:]:</span>
    <span class="p">...</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<ul>
  <li>위와 같이 현재 문자가 현재 문자 이후의 문자열에 포함되어 있는지 여부를 통해 같은 문자가 서로 멀리 존재할 경우를 고려할 수 있다.</li>
</ul>

<p><br /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="rouge-code"><pre><span class="n">n</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">())</span>
<span class="n">result</span> <span class="o">=</span> <span class="n">n</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">n</span><span class="p">):</span>
    <span class="n">g_word</span> <span class="o">=</span> <span class="nb">input</span><span class="p">()</span>
    <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">g_word</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="p">):</span>
        <span class="k">if</span> <span class="n">g_word</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">==</span> <span class="n">g_word</span><span class="p">[</span><span class="n">j</span><span class="o">+</span><span class="mi">1</span><span class="p">]:</span> <span class="c1"># 연속된 문자일 경우
</span>           <span class="k">continue</span>
        <span class="k">if</span> <span class="n">g_word</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="ow">in</span> <span class="n">g_word</span><span class="p">[</span><span class="n">j</span><span class="o">+</span><span class="mi">1</span><span class="p">:]:</span> <span class="c1"># 뒷 문자열에 존재할 경우
</span>            <span class="n">result</span> <span class="o">-=</span> <span class="mi">1</span>
            <span class="k">break</span>
<span class="k">print</span><span class="p">(</span><span class="n">result</span><span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h2 id="회고">회고</h2>
<p>1316번 문제를 통해 인덱싱도 중요하지만, 슬라이싱 문법에 대해 확실하게 복습할 수 있었다.</p>]]></content><author><name>lango</name></author><category term="Python" /><category term="Blog" /><category term="algorithm" /><category term="study" /><category term="python" /><category term="Backjoon" /><summary type="html"><![CDATA[그룹 단어 체커]]></summary></entry><entry><title type="html">[알고리즘 스터디] 백준 2941번</title><link href="http://localhost:4000/python/11-post/" rel="alternate" type="text/html" title="[알고리즘 스터디] 백준 2941번" /><published>2022-07-14T00:00:00+09:00</published><updated>2022-07-14T00:00:00+09:00</updated><id>http://localhost:4000/python/11-post</id><content type="html" xml:base="http://localhost:4000/python/11-post/"><![CDATA[<h1 id="크로아티아-알파벳">크로아티아 알파벳</h1>
<p>ljes=njak은 크로아티아 알파벳 6개(lj, e, š, nj, a, k)로 이루어져 있다. 단어가 주어졌을 때, 몇 개의 크로아티아 알파벳으로 이루어져 있는지 출력한다.
dž는 무조건 하나의 알파벳으로 쓰이고, d와 ž가 분리된 것으로 보지 않는다. lj와 nj도 마찬가지이다. 위 목록에 없는 알파벳은 한 글자씩 센다.</p>

<blockquote>
  <p>Input-1) <br />
ljes=njak <br />
Output-1) <br />
6</p>
</blockquote>

<blockquote>
  <p>Input-2) <br />
ddz=z= <br />
Output-2) <br />
3</p>
</blockquote>

<p><br /></p>

<h3 id="최초-접근-방식">최초 접근 방식</h3>
<ol>
  <li>내 입력에 크로아티아 알파벳(이하 alph)이 포함되어 있는지 확인한다.</li>
  <li>포함되어 있으면 점수를 1개 증가시키고 내 입력 문자열에서 해당 alph를 공백값으로 치환한다.</li>
  <li>1번 검증이 완료되고 남은 입력 문자열에서 공백을 없앤 후 갯수를 점수에 증가시킨다.</li>
</ol>

<p><br /></p>

<h3 id="문제-해결">문제 해결</h3>
<p>위와 같이 구현하니, dz=dz=, ljlj 등과 같이 연속으로 alph에 포함된 문자열이 주어졌을 때 한꺼번에 처리하는 문제가 발생하였다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="rouge-code"><pre><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">cro_alph</span><span class="p">:</span>
    <span class="k">if</span> <span class="n">n</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="n">i</span><span class="p">)</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="p">:</span>
        <span class="n">n</span> <span class="o">=</span> <span class="n">n</span><span class="p">.</span><span class="n">replace</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="s">' '</span><span class="p">)</span>
        <span class="n">cnt</span> <span class="o">+=</span> <span class="mi">1</span>
<span class="n">n</span> <span class="o">=</span> <span class="n">n</span><span class="p">.</span><span class="n">replace</span><span class="p">(</span><span class="s">' '</span><span class="p">,</span> <span class="s">''</span><span class="p">)</span>
<span class="n">cnt</span> <span class="o">+=</span> <span class="nb">len</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>그렇다면 아예 문자열을 치환할 때 공백값이 아닌 문자로 치환한 다음, 치환한 문자와 남은 문자의 갯수를 함께 세면 어떨까? 라는 방식으로 문제 해결을 시도했다.</p>

<h3 id="문제-해결을-위한-접근-방식-수정">문제 해결을 위한 접근 방식 수정</h3>
<ol>
  <li>내 입력 문자열에 크로아티아 알파벳(이하 alph)이 포함되어 있는지 확인한다.</li>
  <li>포함되어 있으면 <del>점수를 1개 증가시키고</del> <strong>내 입력 문자열에서 해당 alph를 ‘*‘으로 치환한다.</strong></li>
  <li>1번 검증이 완료되고 입력 문자열에서 <strong>‘*‘의 갯수를 점수에 증가</strong>시킨다.</li>
  <li>이후 입력 문자열에서 ‘*‘을 제거하여 alph에 포함되지 않은 문자열 갯수를 점수에 증가시킨다.</li>
</ol>

<p><br /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
</pre></td><td class="rouge-code"><pre><span class="n">n</span> <span class="o">=</span> <span class="nb">str</span><span class="p">(</span><span class="nb">input</span><span class="p">())</span>
<span class="n">cro_alph</span> <span class="o">=</span> <span class="p">[</span><span class="s">'c='</span><span class="p">,</span> <span class="s">'c-'</span><span class="p">,</span> <span class="s">'dz='</span><span class="p">,</span> <span class="s">'d-'</span><span class="p">,</span> <span class="s">'lj'</span><span class="p">,</span> <span class="s">'nj'</span><span class="p">,</span> <span class="s">'s='</span><span class="p">,</span> <span class="s">'z='</span><span class="p">]</span>
<span class="n">cnt</span> <span class="o">=</span> <span class="mi">0</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">cro_alph</span><span class="p">:</span>
    <span class="k">if</span> <span class="n">n</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="n">i</span><span class="p">)</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="p">:</span>
        <span class="n">n</span> <span class="o">=</span> <span class="n">n</span><span class="p">.</span><span class="n">replace</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="s">'*'</span><span class="p">)</span>
<span class="n">cnt</span> <span class="o">+=</span> <span class="n">n</span><span class="p">.</span><span class="n">count</span><span class="p">(</span><span class="s">'*'</span><span class="p">)</span>
<span class="n">n</span> <span class="o">=</span> <span class="n">n</span><span class="p">.</span><span class="n">replace</span><span class="p">(</span><span class="s">'*'</span><span class="p">,</span> <span class="s">''</span><span class="p">)</span>
<span class="n">cnt</span> <span class="o">+=</span> <span class="nb">len</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">cnt</span><span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>]]></content><author><name>lango</name></author><category term="Python" /><category term="Blog" /><category term="algorithm" /><category term="study" /><category term="python" /><category term="Backjoon" /><summary type="html"><![CDATA[크로아티아 알파벳]]></summary></entry><entry><title type="html">[알고리즘 스터디] 백준 1157번</title><link href="http://localhost:4000/python/10-post/" rel="alternate" type="text/html" title="[알고리즘 스터디] 백준 1157번" /><published>2022-07-12T00:00:00+09:00</published><updated>2022-07-12T00:00:00+09:00</updated><id>http://localhost:4000/python/10-post</id><content type="html" xml:base="http://localhost:4000/python/10-post/"><![CDATA[<h1 id="단어-공부">단어 공부</h1>
<p>알파벳 대소문자로 된 단어가 주어지면, 이 단어에서 가장 많이 사용된 알파벳이 무엇인지 알아내는 프로그램을 작성하시오. 단, 대문자와 소문자를 구분하지 않는다.</p>

<blockquote>
  <p>Input-1) <br />
Mississipi <br />
Output-1) <br />
?</p>
</blockquote>

<blockquote>
  <p>Input-2) <br />
bbaaac <br />
Output-2) <br />
A</p>
</blockquote>

<h3 id="접근-방식">접근 방식</h3>
<ol>
  <li>입력 배열의 알파벳 중복을 제거한 뒤 사용된 알파벳의 갯수를 세어 빈 배열에 저장한다.</li>
  <li>1번에서 저장한 배열의 최대값 개수가 2개 이상이라면 ?를 출력한다.</li>
  <li>1번에서 저장한 배열의 최대값 개수가 1개라면 해당 알파벳을 출력한다.</li>
</ol>

<p><br /></p>

<h3 id="문제-해결">문제 해결</h3>
<p>count 함수와 인덱싱이 헷갈려 시간을 많이 잡아먹었다.</p>

<p>사용된 알파벳 개수를 새 배열에 저장한 후 sort(reverse=True) 함수를 통해 정렬하여 계산하려 했으나 알파벳 배열의 순서와 맞지 않았다.
다시 생각해보니 그냥 “알파벳 개수를 센 배열의 최대값 개수”를 알면 해결될 문제라 생각하고 코드를 작성하였다.</p>

<p>먼저 이번 문제를 통해 count 함수를 다시 한번 공부하게 되었다.</p>

<p><br /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
</pre></td><td class="rouge-code"><pre><span class="n">n</span> <span class="o">=</span> <span class="nb">input</span><span class="p">().</span><span class="n">upper</span><span class="p">()</span>
<span class="n">l</span><span class="p">,</span><span class="n">rs</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="nb">set</span><span class="p">(</span><span class="n">n</span><span class="p">)),[]</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">l</span><span class="p">:</span>
    <span class="n">rs</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">n</span><span class="p">.</span><span class="n">count</span><span class="p">(</span><span class="n">i</span><span class="p">))</span>
<span class="k">if</span> <span class="n">rs</span><span class="p">.</span><span class="n">count</span><span class="p">(</span><span class="nb">max</span><span class="p">(</span><span class="n">rs</span><span class="p">))</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="n">l</span><span class="p">[</span><span class="n">rs</span><span class="p">.</span><span class="n">index</span><span class="p">(</span><span class="nb">max</span><span class="p">(</span><span class="n">rs</span><span class="p">))])</span>
<span class="k">else</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">'?'</span><span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>]]></content><author><name>lango</name></author><category term="Python" /><category term="Blog" /><category term="algorithm" /><category term="study" /><category term="python" /><category term="Backjoon" /><summary type="html"><![CDATA[단어 공부]]></summary></entry><entry><title type="html">[알고리즘 스터디] 백준 4673번</title><link href="http://localhost:4000/python/9-post/" rel="alternate" type="text/html" title="[알고리즘 스터디] 백준 4673번" /><published>2022-06-24T00:00:00+09:00</published><updated>2022-06-24T00:00:00+09:00</updated><id>http://localhost:4000/python/9-post</id><content type="html" xml:base="http://localhost:4000/python/9-post/"><![CDATA[<h1 id="셀프-넘버">셀프 넘버</h1>
<p>셀프 넘버는 1949년 인도 수학자 D.R. Kaprekar가 이름 붙였다. 양의 정수 n에 대해서 d(n)을 n과 n의 각 자리수를 더하는 함수라고 정의하자. 예를 들어, d(75) = 75+7+5 = 87이다.
양의 정수 n이 주어졌을 때, 이 수를 시작해서 n, d(n), d(d(n)), d(d(d(n))), …과 같은 무한 수열을 만들 수 있다. 
예를 들어, 33으로 시작한다면 다음 수는 33 + 3 + 3 = 39이고, 그 다음 수는 39 + 3 + 9 = 51, 다음 수는 51 + 5 + 1 = 57이다. 이런식으로 다음과 같은 수열을 만들 수 있다.
33, 39, 51, 57, 69, 84, 96, 111, 114, 120, 123, 129, 141, …
n을 d(n)의 생성자라고 한다. 위의 수열에서 33은 39의 생성자이고, 39는 51의 생성자, 51은 57의 생성자이다. 생성자가 한 개보다 많은 경우도 있다. 예를 들어, 101은 생성자가 2개(91과 100) 있다. 
생성자가 없는 숫자를 셀프 넘버라고 한다. 100보다 작은 셀프 넘버는 총 13개가 있다. 1, 3, 5, 7, 9, 20, 31, 42, 53, 64, 75, 86, 97
10000보다 작거나 같은 셀프 넘버를 한 줄에 하나씩 출력하는 프로그램을 작성하시오.</p>

<blockquote>
  <p>Input) <br />
Output) <br />
1<br />
3<br />
5<br />
7<br />
9<br />
20<br />
31<br />
42<br />
53<br />
64<br />
 |<br />
 |       &lt;– a lot more numbers<br />
 |<br />
9903<br />
9914<br />
9925<br />
9927<br />
9938<br />
9949<br />
9960<br />
9971<br />
9982<br />
9993<br /></p>
</blockquote>

<h3 id="접근-방식">접근 방식</h3>
<p>셀프넘버가 아닌 수(=생성자 존재, 이하 S)를 구하는게 핵심이다.
S 수를 배열에 넣어두고, S 수로 이루어진 배열에 포함되지 않은 수(셀프넘버)를 찾는 방식으로 접근하였다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
</pre></td><td class="rouge-code"><pre><span class="n">l</span> <span class="o">=</span> <span class="p">[]</span>
<span class="k">def</span> <span class="nf">selfNum</span><span class="p">(</span><span class="n">n</span><span class="p">):</span>
    <span class="n">res</span> <span class="o">=</span> <span class="n">n</span>
    <span class="k">if</span><span class="p">(</span><span class="n">n</span> <span class="o">&lt;</span> <span class="mi">10</span><span class="p">):</span>
        <span class="n">res</span> <span class="o">=</span> <span class="n">n</span><span class="o">+</span><span class="n">n</span>
    <span class="k">elif</span><span class="p">(</span><span class="n">n</span> <span class="o">&lt;</span> <span class="mi">100</span><span class="p">):</span>
        <span class="n">res</span> <span class="o">=</span> <span class="n">n</span> <span class="o">+</span> <span class="nb">int</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">n</span><span class="p">)[</span><span class="mi">0</span><span class="p">])</span> <span class="o">+</span> <span class="nb">int</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">n</span><span class="p">)[</span><span class="mi">1</span><span class="p">])</span>
    <span class="k">elif</span><span class="p">(</span><span class="n">n</span> <span class="o">&lt;</span> <span class="mi">1000</span><span class="p">):</span>
        <span class="n">res</span> <span class="o">=</span> <span class="n">n</span> <span class="o">+</span> <span class="nb">int</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">n</span><span class="p">)[</span><span class="mi">0</span><span class="p">])</span> <span class="o">+</span> <span class="nb">int</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">n</span><span class="p">)[</span><span class="mi">1</span><span class="p">])</span> <span class="o">+</span> <span class="nb">int</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">n</span><span class="p">)[</span><span class="mi">2</span><span class="p">])</span>
    <span class="k">elif</span><span class="p">(</span><span class="n">n</span> <span class="o">&lt;</span> <span class="mi">10000</span><span class="p">):</span>
        <span class="n">res</span> <span class="o">=</span> <span class="n">n</span> <span class="o">+</span> <span class="nb">int</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">n</span><span class="p">)[</span><span class="mi">0</span><span class="p">])</span> <span class="o">+</span> <span class="nb">int</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">n</span><span class="p">)[</span><span class="mi">1</span><span class="p">])</span> <span class="o">+</span> <span class="nb">int</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">n</span><span class="p">)[</span><span class="mi">2</span><span class="p">])</span> <span class="o">+</span> <span class="nb">int</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">n</span><span class="p">)[</span><span class="mi">3</span><span class="p">])</span>
    <span class="k">return</span> <span class="n">res</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">10001</span><span class="p">):</span>
    <span class="n">l</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">selfNum</span><span class="p">(</span><span class="n">i</span><span class="p">))</span>
    <span class="k">if</span> <span class="n">i</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">l</span><span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>]]></content><author><name>lango</name></author><category term="Python" /><category term="Blog" /><category term="algorithm" /><category term="study" /><category term="python" /><category term="Backjoon" /><summary type="html"><![CDATA[셀프 넘버]]></summary></entry><entry><title type="html">[알고리즘 문제] 괄호 문자열 검증</title><link href="http://localhost:4000/javascript/8-post/" rel="alternate" type="text/html" title="[알고리즘 문제] 괄호 문자열 검증" /><published>2022-06-06T00:00:00+09:00</published><updated>2022-06-06T00:00:00+09:00</updated><id>http://localhost:4000/javascript/8-post</id><content type="html" xml:base="http://localhost:4000/javascript/8-post/"><![CDATA[<h1 id="괄호-문자열-검증">괄호 문자열 검증</h1>
<p>’(‘, ‘)’, ‘{‘, ‘}’, ‘[’ 및 ‘]’ 만 포함하는 문자열이 주어지면 입력 문자열이 유효한지 확인하자.
다음과 같은 경우 입력 문자열이 유효합니다.
열린 괄호와 동일한 유형의 괄호로 닫아야 합니다.
열린 괄호는 올바른 순서로 닫아야 합니다.
유효하면 true, 아니면 false를 리턴합니다.</p>

<blockquote>
  <p>Input) <br />
() <br />
Output) <br />
true</p>
</blockquote>

<blockquote>
  <p>Input) <br />
()[]{} <br />
Output) <br />
true</p>
</blockquote>

<blockquote>
  <p>Input) <br />
(] <br />
Output) <br />
false</p>
</blockquote>

<blockquote>
  <p>Input) <br />
(([])) <br />
Output) <br />
true</p>
</blockquote>

<h2 id="접근방식">접근방식</h2>
<p>열린, 닫힌 괄호를 객체로 생성하여 두고, 입력 문자열을 반복하며 현재요소가 괄호객체에 key, value 값으로 존재하는지 여부를 확인하여 검증하는 방식으로 접근하였다.</p>

<h3 id="문제">문제</h3>
<ul>
  <li>단순히 t배열이 빈배열을 만들면 될 것이라 생각했는데, ‘())’의 경우 앞의 ‘()’를 통해 빈배열을 만들 수 있지만 남은 ‘)’ 때문에 문제가 발생하였다.</li>
  <li>t배열의 마지막요소를 key값으로 value값을 찾을 때 괄호 유형이 다를 경우 문제가 발생하였다. ex) ‘([)]’
    <h3 id="문제해결">문제해결</h3>
    <p>ele(현재요소)가 t배열의 마지막원소를 key값으로 조회한 value값과 일치하지 않는 경우 false를 반환하도록 구현하였다.</p>
  </li>
</ul>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
</pre></td><td class="rouge-code"><pre><span class="kd">function</span> <span class="nx">bracket_input</span><span class="p">(</span><span class="nx">input</span><span class="p">)</span> <span class="p">{</span>
    <span class="kd">let</span> <span class="nx">map</span><span class="o">=</span><span class="p">{</span> <span class="dl">'</span><span class="s1">(</span><span class="dl">'</span><span class="p">:</span><span class="dl">'</span><span class="s1">)</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">{</span><span class="dl">'</span><span class="p">:</span><span class="dl">'</span><span class="s1">}</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">[</span><span class="dl">'</span><span class="p">:</span><span class="dl">'</span><span class="s1">]</span><span class="dl">'</span> <span class="p">},</span> <span class="nx">keys</span><span class="o">=</span><span class="nb">Object</span><span class="p">.</span><span class="nx">keys</span><span class="p">(</span><span class="nx">map</span><span class="p">),</span> <span class="nx">l</span><span class="o">=</span><span class="nx">input</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="dl">''</span><span class="p">),</span> <span class="nx">t</span><span class="o">=</span><span class="p">[],</span> <span class="nx">result</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span>
    <span class="k">for</span> <span class="p">(</span><span class="kd">let</span> <span class="nx">ele</span> <span class="k">of</span> <span class="nx">l</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">if</span><span class="p">(</span><span class="nx">keys</span><span class="p">.</span><span class="nx">includes</span><span class="p">(</span><span class="nx">ele</span><span class="p">))</span> <span class="p">{</span> <span class="nx">t</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">ele</span><span class="p">);</span> <span class="p">}</span>
        <span class="k">else</span> <span class="p">{</span> 
            <span class="k">if</span><span class="p">(</span><span class="nx">ele</span> <span class="o">===</span> <span class="nx">map</span><span class="p">[</span><span class="nx">t</span><span class="p">.</span><span class="nx">at</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)])</span> <span class="p">{</span> <span class="nx">t</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span> <span class="p">}</span>
            <span class="k">else</span> <span class="p">{</span> <span class="nx">result</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span> <span class="k">return</span> <span class="nx">result</span><span class="p">;</span> <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span> 
    <span class="c1">// input값이 유효하다면 t배열은 빈 배열이 되고(true), 배열에 값이 있다면 짝이 안맞는 괄호값이 존재(false)</span>
    <span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">length</span> <span class="o">!==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span> <span class="nx">result</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span> <span class="k">return</span> <span class="nx">result</span><span class="p">;</span> <span class="p">}</span>
    <span class="k">return</span> <span class="nx">result</span><span class="p">;</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<h2 id="소스-리뷰">소스 리뷰</h2>
<h3 id="4-line">4 line</h3>
<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="rouge-code"><pre><span class="k">for</span> <span class="p">(</span><span class="kd">let</span> <span class="nx">ele</span> <span class="k">of</span> <span class="nx">l</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">if</span><span class="p">(</span><span class="nx">keys</span><span class="p">.</span><span class="nx">includes</span><span class="p">(</span><span class="nx">ele</span><span class="p">))</span> <span class="p">{</span> <span class="nx">t</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">ele</span><span class="p">);</span> <span class="p">}</span>
    <span class="p">...</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<blockquote>
  <p>ele(현재요소)가 map(괄호객체)에 key값으로 존재한다면 t(빈배열) 맨뒤에 값을 넣음.</p>
</blockquote>

<h3 id="6-line">6 line</h3>
<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="k">if</span><span class="p">(</span><span class="nx">ele</span> <span class="o">===</span> <span class="nx">map</span><span class="p">[</span><span class="nx">t</span><span class="p">.</span><span class="nx">at</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)])</span> <span class="p">{</span> <span class="nx">t</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span> <span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<blockquote>
  <p>ele(현재요소)가 조회한 value값과 일치하면 괄호의 짝이 맞으므로 t배열에서 마지막요소 삭제함.</p>
</blockquote>]]></content><author><name>lango</name></author><category term="JavaScript" /><category term="Blog" /><category term="algorithm" /><category term="study" /><category term="js" /><summary type="html"><![CDATA[괄호 '(',')','{','}','[',']' 문자열 검증]]></summary></entry><entry><title type="html">[알고리즘 스터디] 백준 1110번</title><link href="http://localhost:4000/python/7-post/" rel="alternate" type="text/html" title="[알고리즘 스터디] 백준 1110번" /><published>2022-06-05T00:00:00+09:00</published><updated>2022-06-05T00:00:00+09:00</updated><id>http://localhost:4000/python/7-post</id><content type="html" xml:base="http://localhost:4000/python/7-post/"><![CDATA[<h1 id="1110번-더하기-사이클">1110번 더하기 사이클</h1>
<p>0보다 크거나 같고, 99보다 작거나 같은 정수가 주어질 때 다음과 같은 연산을 할 수 있다. 먼저 주어진 수가 10보다 작다면 앞에 0을 붙여 두 자리 수로 만들고, 각 자리의 숫자를 더한다. 그 다음, 주어진 수의 가장 오른쪽 자리 수와 앞에서 구한 합의 가장 오른쪽 자리 수를 이어 붙이면 새로운 수를 만들 수 있다.
26부터 시작한다. 2+6 = 8이다. 새로운 수는 68이다. 6+8 = 14이다. 새로운 수는 84이다. 8+4 = 12이다. 새로운 수는 42이다. 4+2 = 6이다. 새로운 수는 26이다.
N이 주어졌을 때, N의 사이클의 길이를 구하는 프로그램을 작성하시오.</p>

<blockquote>
  <p>Input) <br />
26</p>
</blockquote>

<blockquote>
  <p>Output) <br />
4</p>
</blockquote>

<h2 id="문제">문제</h2>
<p>최초 입력값(n)이 10보다 작을 경우 앞에 0을 붙이는 로직을 while문 안에서 수행하다 보니 루프를 1번 진행한 후 10보다 작은 수(n을 new_n값으로 치환할 때)가 될 경우 0을 한번 더 붙여버리는 문제가 발생하였다.</p>
<h2 id="문제해결">문제해결</h2>
<p>최초 입력값(n)이 10보다 작을 경우에만 앞에 0을 붙이도록 while문 바깥쪽에서 수행하도록 변경하였다.
<del>코드가 더러워졌다는 단점이 있다..</del></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
</pre></td><td class="rouge-code"><pre><span class="n">n</span> <span class="o">=</span> <span class="nb">input</span><span class="p">()</span>
<span class="n">new_n</span><span class="p">,</span><span class="n">count</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span><span class="mi">0</span>
<span class="n">first_n</span> <span class="o">=</span> <span class="n">n</span>
<span class="k">if</span> <span class="nb">int</span><span class="p">(</span><span class="n">n</span><span class="p">)</span> <span class="o">&lt;</span> <span class="mi">10</span><span class="p">:</span> <span class="c1"># 최초 입력값이 10보다 작을 경우 앞에 0을 붙임.
</span>    <span class="n">n</span> <span class="o">=</span> <span class="s">'0'</span> <span class="o">+</span> <span class="n">n</span>
<span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
    <span class="k">if</span> <span class="nb">int</span><span class="p">(</span><span class="n">n</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
        <span class="n">count</span> <span class="o">=</span> <span class="mi">1</span>
        <span class="k">break</span>
    <span class="n">rs</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">n</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span><span class="o">+</span><span class="nb">int</span><span class="p">(</span><span class="n">n</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span> <span class="c1"># 두수의 합
</span>    <span class="k">if</span> <span class="n">rs</span> <span class="o">&gt;=</span> <span class="mi">10</span><span class="p">:</span>
        <span class="n">new_n</span> <span class="o">=</span> <span class="n">n</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">rs</span><span class="p">)[</span><span class="mi">1</span><span class="p">]</span> <span class="c1"># 두수의 합이 10보다 클 경우 우측자리수로 저장.
</span>    <span class="k">else</span><span class="p">:</span>
        <span class="n">new_n</span> <span class="o">=</span> <span class="n">n</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">rs</span><span class="p">)</span> 
    <span class="n">n</span> <span class="o">=</span> <span class="n">new_n</span>
    <span class="n">count</span> <span class="o">=</span> <span class="n">count</span><span class="o">+</span><span class="mi">1</span>
    <span class="k">if</span> <span class="nb">int</span><span class="p">(</span><span class="n">new_n</span><span class="p">)</span> <span class="o">==</span> <span class="nb">int</span><span class="p">(</span><span class="n">first_n</span><span class="p">):</span>
        <span class="k">break</span>
<span class="k">print</span><span class="p">(</span><span class="n">count</span><span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>]]></content><author><name>lango</name></author><category term="Python" /><category term="Blog" /><category term="algorithm" /><category term="study" /><category term="python" /><category term="Backjoon" /><summary type="html"><![CDATA[반복문 - 더하기 사이클]]></summary></entry></feed>