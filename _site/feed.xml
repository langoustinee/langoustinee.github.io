<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2022-09-01T14:09:33+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">lango’s DevLog</title><subtitle>developer</subtitle><author><name>lango</name></author><entry><title type="html">[알고리즘 스터디 - Java] 프로그래머스(level-2) - N개의 최소공배수</title><link href="http://localhost:4000/java/41-post/" rel="alternate" type="text/html" title="[알고리즘 스터디 - Java] 프로그래머스(level-2) - N개의 최소공배수" /><published>2022-09-01T00:00:00+09:00</published><updated>2022-09-01T00:00:00+09:00</updated><id>http://localhost:4000/java/41-post</id><content type="html" xml:base="http://localhost:4000/java/41-post/"><![CDATA[<p><br /></p>

<center><img src="/assets/images/programmers/20220901_01.png" width="700" /></center>

<p><strong>입출력 예시</strong></p>
<blockquote>
  <p>Input-1 <br />
<strong>[2, 6, 8, 14]</strong> <br />
Output-1 <br />
<strong>168</strong></p>
</blockquote>

<blockquote>
  <p>Input-2 <br />
<strong>[1, 2, 3]</strong> <br />
Output-2 <br />
<strong>6</strong></p>
</blockquote>

<p><br /></p>

<h3 id="문제-풀이">문제 풀이</h3>
<p>문제의 핵심은 <strong>앞의 두 수를 가지고 구한 최소공배수를 가지고 다음 수와의 최소공배수를 구하는 방식</strong>으로 구해나가야 한다는 것이다.</p>

<p>먼저 최소공배수의 경우 두 수의 곱을 두수의 최대공약수로 나누면 된다. <br />
최대공약수의 경우는 유클리드 호제법 함수를 통해 구하였다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="rouge-code"><pre><span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">gcd</span><span class="o">(</span><span class="kt">int</span> <span class="n">bn</span><span class="o">,</span> <span class="kt">int</span> <span class="n">sn</span><span class="o">)</span> <span class="o">{</span> <span class="c1">// 유클리드 호제법을 통해 최대공약수 찾기</span>
    <span class="kt">int</span> <span class="n">r</span> <span class="o">=</span> <span class="n">bn</span> <span class="o">%</span> <span class="n">sn</span><span class="o">;</span>
    <span class="k">if</span><span class="o">(</span><span class="n">r</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="k">return</span> <span class="n">sn</span><span class="o">;</span>
    <span class="k">else</span> <span class="k">return</span> <span class="nf">gcd</span><span class="o">(</span><span class="n">sn</span><span class="o">,</span> <span class="n">r</span><span class="o">);</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>다음으로 N번째까지의 최소공배수를 구하기 위해 아래의 작업을 반복해야 한다.</p>
<ul>
  <li>(이전 최소 공배수 * 다음 수) / GCD(이전 최소 공배수, 다음 수)</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="rouge-code"><pre><span class="nc">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">arr</span><span class="o">);</span>
<span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="n">arr</span><span class="o">[</span><span class="mi">0</span><span class="o">];</span>
<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">arr</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
    <span class="n">answer</span> <span class="o">=</span> <span class="o">(</span><span class="n">answer</span> <span class="o">*</span> <span class="n">arr</span><span class="o">[</span><span class="n">i</span><span class="o">])</span> <span class="o">/</span> <span class="n">gcd</span><span class="o">(</span><span class="n">answer</span><span class="o">,</span> <span class="n">arr</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>위 코드는 최소공배수를 구해나가는 과정을 작성한 것이다. <br />
첫번째 수의 값을 answer에 담아서 반복문 내에서 첫번째 수를 대입한 후에는 <strong>구해진 최소공배수가 answer에 담겨져</strong> 위의 작업을 이행할 수 있게 된다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
</pre></td><td class="rouge-code"><pre>arr [2, 6, 8, 14]

i = 1 //6일 때
    answer = arr[0] = 2
    gcd = (2,6) = 2
    answer = (2*6)/2 = 6

i = 2 //8일 때
    answer = 6
    gcd = (6,8) = 2
    answer = (6*8)/2 = 24

i = 3 //14일 때
    answer = 24
    gcd = (24,14) = 2
    answer = (24*14)/2 = 168
</pre></td></tr></tbody></table></code></pre></div></div>

<p><br /></p>

<h3 id="작성-코드">작성 코드</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>        
        <span class="kt">int</span><span class="o">[]</span> <span class="n">arr</span> <span class="o">=</span> <span class="o">{</span><span class="mi">2</span><span class="o">,</span><span class="mi">6</span><span class="o">,</span><span class="mi">8</span><span class="o">,</span><span class="mi">14</span><span class="o">};</span>
        <span class="c1">// int[] arr = {1,2,3};</span>
        <span class="kt">long</span> <span class="n">start</span> <span class="o">=</span> <span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        <span class="n">solution</span><span class="o">(</span><span class="n">arr</span><span class="o">);</span>
        <span class="kt">long</span> <span class="n">end</span> <span class="o">=</span> <span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"\n수행시간 = "</span> <span class="o">+</span> <span class="o">(</span><span class="n">end</span><span class="o">-</span><span class="n">start</span><span class="o">));</span>
    <span class="o">}</span>
    
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">arr</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">arr</span><span class="o">);</span>
        <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="n">arr</span><span class="o">[</span><span class="mi">0</span><span class="o">];</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">arr</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="n">answer</span> <span class="o">=</span> <span class="o">(</span><span class="n">answer</span> <span class="o">*</span> <span class="n">arr</span><span class="o">[</span><span class="n">i</span><span class="o">])</span> <span class="o">/</span> <span class="n">gcd</span><span class="o">(</span><span class="n">answer</span><span class="o">,</span> <span class="n">arr</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
    
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">gcd</span><span class="o">(</span><span class="kt">int</span> <span class="n">bn</span><span class="o">,</span> <span class="kt">int</span> <span class="n">sn</span><span class="o">)</span> <span class="o">{</span> <span class="c1">// 유클리드 호제법을 통해 최대공약수 찾기</span>
        <span class="kt">int</span> <span class="n">r</span> <span class="o">=</span> <span class="n">bn</span> <span class="o">%</span> <span class="n">sn</span><span class="o">;</span>
        <span class="k">if</span><span class="o">(</span><span class="n">r</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="k">return</span> <span class="n">sn</span><span class="o">;</span>
        <span class="k">else</span> <span class="k">return</span> <span class="nf">gcd</span><span class="o">(</span><span class="n">sn</span><span class="o">,</span> <span class="n">r</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="회고">회고</h3>
<ul>
  <li>이전에 두수의 최대공약수와 최소공배수를 구하는 문제를 풀어보았기에 쉽게 문제풀이에 접근할 수 있었다.</li>
</ul>]]></content><author><name>lango</name></author><category term="Java" /><category term="blog" /><category term="algorithm" /><category term="study" /><category term="java" /><category term="programmers" /><summary type="html"><![CDATA[level 2 - N개의 최소공배수]]></summary></entry><entry><title type="html">[알고리즘 스터디 - Java] 프로그래머스(level-1) - 폰켓몬</title><link href="http://localhost:4000/java/42-post/" rel="alternate" type="text/html" title="[알고리즘 스터디 - Java] 프로그래머스(level-1) - 폰켓몬" /><published>2022-09-01T00:00:00+09:00</published><updated>2022-09-01T00:00:00+09:00</updated><id>http://localhost:4000/java/42-post</id><content type="html" xml:base="http://localhost:4000/java/42-post/"><![CDATA[<p><br /></p>

<center><img src="/assets/images/programmers/20220901_02.png" width="700" /></center>

<p><strong>제약 사항</strong></p>
<blockquote>
  <ul>
    <li>nums는 폰켓몬의 종류 번호가 담긴 1차원 배열입니다.</li>
    <li>nums의 길이(N)는 1 이상 10,000 이하의 자연수이며, 항상 짝수로 주어집니다.</li>
    <li>폰켓몬의 종류 번호는 1 이상 200,000 이하의 자연수로 나타냅니다.</li>
    <li>가장 많은 종류의 폰켓몬을 선택하는 방법이 여러 가지인 경우에도, 선택할 수 있는 폰켓몬 종류 개수의 최댓값 하나만 return 하면 됩니다.</li>
  </ul>
</blockquote>

<p><strong>입출력 예시</strong></p>
<blockquote>
  <p>Input-1 <br />
<strong>[3, 1, 2, 3]</strong> <br />
Output-1 <br />
<strong>2</strong></p>
</blockquote>

<blockquote>
  <p>Input-2 <br />
<strong>[3, 3, 3, 2, 2, 4]</strong> <br />
Output-2 <br />
<strong>3</strong></p>
</blockquote>

<p><br /></p>

<h3 id="문제-풀이">문제 풀이</h3>
<p>N개의 배열에서 N/2까지만 선택할 수 있다.<br />
문제의 핵심은 <strong>중복되지 않는, 선택 가능한 폰켓몬의 수</strong>를 구하는 것이다.</p>

<p>중복을 제거하기 위해 HashSet을 활용하여 풀어보자.</p>

<blockquote>
  <p><strong>HashSet이란?</strong> <br />
Set 인터페익스에서 제공하는 구현 클래스로, 순서대로 입력되지 않고, 정렬 되지도 않으며, 중복을 허용하지 않는다.</p>
</blockquote>

<p>주어진 nums배열을 HashSet에 추가하여 중복을 제거하는 코드를 작성해보자.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="nc">HashSet</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">set</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HashSet</span><span class="o">&lt;&gt;();</span>
<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">n</span> <span class="o">:</span> <span class="n">nums</span><span class="o">)</span> <span class="n">set</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">n</span><span class="o">);</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre>nums = [3, 3, 3, 2, 2, 4]
set = [3, 2, 4]
</pre></td></tr></tbody></table></code></pre></div></div>
<p>위와 같이 nums배열의 중복을 제거했으니 다음으로 선택 가능한 경우의 수의 최대값을 구하면 된다.</p>

<p>nums = [3, 1, 2, 3] 이라고 하면 중복되지 않는 2마리를 선택해야 한다. <br />
또한 Hashset을 활용해 set = [1, 2, 3] 을 구했다. <br />
선택할 수 있는 경우의 수의 최대값은 set의 길이에 상관없이 2마리이기에 2를 반환하면 된다.</p>

<p>다만, set의 길이보다 선택해야할 마리수가 많을 경우에는 선택할 수 있는 마리수가 set의 길이만큼이기에 set.size()를 반환한다. <br />
예를 들어 nums = [1, 1, 1, 1, 1, 2, 2, 2, 2, 2]의 경우 5마리를 선택해야하고 중복이 제거된 set의 길이는 2이다. <br />
결국 5마리를 선택하고 싶어도 선택할 수 있는 마리수는 2마리이기 때문에 set.size()인 2를 반환하면 된다.</p>

<p>위 내용을 코드로 작성하면 아래와 같다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre><span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
<span class="k">if</span><span class="o">(</span><span class="n">choice</span> <span class="o">&lt;=</span> <span class="n">set</span><span class="o">.</span><span class="na">size</span><span class="o">())</span> <span class="n">answer</span> <span class="o">=</span> <span class="n">choice</span><span class="o">;</span>
<span class="k">else</span> <span class="n">answer</span> <span class="o">=</span> <span class="n">set</span><span class="o">.</span><span class="na">size</span><span class="o">();</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><br /></p>

<h3 id="작성-코드">작성 코드</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span><span class="o">[]</span> <span class="n">arr</span> <span class="o">=</span> <span class="o">{</span><span class="mi">3</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="mi">3</span><span class="o">};</span>
        <span class="c1">// int[] arr = {3,3,3,2,2,4};</span>
        <span class="c1">// int[] arr = {3,3,3,2,2,2};</span>
        <span class="c1">// int[] arr = {1,2,2,2,3,3,3,3};</span>

        <span class="kt">long</span> <span class="n">start</span> <span class="o">=</span> <span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        <span class="n">solution</span><span class="o">(</span><span class="n">arr</span><span class="o">);</span>
        <span class="kt">long</span> <span class="n">end</span> <span class="o">=</span> <span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"\n수행시간 = "</span> <span class="o">+</span> <span class="o">(</span><span class="n">end</span><span class="o">-</span><span class="n">start</span><span class="o">));</span>
    <span class="o">}</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">nums</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">HashSet</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">set</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HashSet</span><span class="o">&lt;&gt;();</span>
        <span class="kt">int</span> <span class="n">choice</span> <span class="o">=</span> <span class="n">nums</span><span class="o">.</span><span class="na">length</span><span class="o">/</span><span class="mi">2</span><span class="o">;</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">n</span> <span class="o">:</span> <span class="n">nums</span><span class="o">)</span> <span class="n">set</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">n</span><span class="o">);</span>
        
        <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="k">if</span><span class="o">(</span><span class="n">choice</span> <span class="o">&lt;=</span> <span class="n">set</span><span class="o">.</span><span class="na">size</span><span class="o">())</span> <span class="n">answer</span> <span class="o">=</span> <span class="n">choice</span><span class="o">;</span>
        <span class="k">else</span> <span class="n">answer</span> <span class="o">=</span> <span class="n">set</span><span class="o">.</span><span class="na">size</span><span class="o">();</span>

        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="회고">회고</h3>
<ul>
  <li>중복을 제거한 목록을 만들 수 있는 HashSet을 활용할 수 있었다.</li>
</ul>]]></content><author><name>lango</name></author><category term="Java" /><category term="blog" /><category term="algorithm" /><category term="study" /><category term="java" /><category term="programmers" /><summary type="html"><![CDATA[level 2 - 폰켓몬]]></summary></entry><entry><title type="html">[알고리즘 스터디 - Java] 프로그래머스(level1) - 완주하지 못한 선수</title><link href="http://localhost:4000/java/40-post/" rel="alternate" type="text/html" title="[알고리즘 스터디 - Java] 프로그래머스(level1) - 완주하지 못한 선수" /><published>2022-08-31T00:00:00+09:00</published><updated>2022-08-31T00:00:00+09:00</updated><id>http://localhost:4000/java/40-post</id><content type="html" xml:base="http://localhost:4000/java/40-post/"><![CDATA[<p><br /></p>

<center><img src="/assets/images/programmers/20220831_03-1.png" width="700" /></center>

<p><strong>입출력 예시</strong></p>
<blockquote>
  <p>Input-1 <br />
<strong>participant = [“leo”, “kiki”, “eden”]</strong> <br />
<strong>completion = [“eden”, “kiki”]</strong> <br />
Output-1 <br />
<strong>“leo”</strong></p>
</blockquote>

<blockquote>
  <p>Input-2 <br />
<strong>participant = [“marina”, “josipa”, “nikola”, “vinko”, “filipa”]</strong> <br />
<strong>completion = [“josipa”, “filipa”, “marina”, “nikola”]</strong> <br />
Output-2 <br />
<strong>“vinko”</strong></p>
</blockquote>

<blockquote>
  <p>Input-3 <br />
<strong>participant = [“mislav”, “stanko”, “mislav”, “ana”]</strong> <br />
<strong>completion = [“stanko”, “ana”, “mislav”]</strong> <br />
Output-3 <br />
<strong>“mislav”</strong></p>
</blockquote>

<p><br /></p>

<h3 id="문제-풀이">문제 풀이</h3>
<p>이 문제를  배열을 정렬하여 반복문을 활용하여 풀었지만, 해시로 풀어야 좋은 성능이 나오기에 두 가지 풀이 모두 작성한다.</p>

<h4 id="정렬하여-반복문을-활용한-방식">정렬하여 반복문을 활용한 방식</h4>
<p>주어진 <strong>participant 배열과 completion 배열을 정렬하여 completion의 길이만큼 반복</strong>하는 것이 키포인트다.</p>

<p>completion의 길이만큼 순회하며 두 배열을 검증해보자. <br /></p>
<ul>
  <li>participant[i]의 값과 completion[i]의 값이 같다면 participant[i]는 완주한 선수다.</li>
  <li>participant[i]의 값과 completion[i]의 값이 다르다면 participant[i]는 완주하지 못한 선수다.</li>
  <li>completion의 마지막까지 찾아봐도 participant[i]가 없다면 participant[i]는 완주하지 못한 선수다.</li>
</ul>

<p>위 조건을 토대로 코드를 작성해보자.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
</pre></td><td class="rouge-code"><pre><span class="nc">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">participant</span><span class="o">);</span>
<span class="nc">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">completion</span><span class="o">);</span>
<span class="nc">String</span> <span class="n">answer</span> <span class="o">=</span> <span class="s">""</span><span class="o">;</span>
<span class="kt">int</span> <span class="n">idx</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">completion</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
    <span class="k">if</span><span class="o">(!</span><span class="n">participant</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">equals</span><span class="o">(</span><span class="n">completion</span><span class="o">[</span><span class="n">i</span><span class="o">]))</span> <span class="o">{</span>
        <span class="n">answer</span> <span class="o">=</span> <span class="n">participant</span><span class="o">[</span><span class="n">i</span><span class="o">];</span>
        <span class="k">break</span><span class="o">;</span>
    <span class="o">}</span>
    <span class="n">idx</span> <span class="o">=</span> <span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">;</span>
<span class="o">}</span>
<span class="n">answer</span> <span class="o">=</span> <span class="n">participant</span><span class="o">[</span><span class="n">idx</span><span class="o">];</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>completion 배열의 길이만큼 순회하며 같지 않을 때의 participant[i] 값을 반환할 answer에 담고 탈출하였다.</p>
<h5 id="같지-않을-때-바로-탈출한-이유는">같지 않을 때 바로 탈출한 이유는?</h5>
<p><strong>이미 완주하지 못한 선수는 1명이고 완주하지 못한 선수를 찾은 이상 나머지 반복문을 순회할 필요가 없기 때문이다.</strong></p>

<p>또한 completion의 마지막까지 돌아도 없는 값이 participant에 존재할 경우 해당 participant[i]는 완주하지 못한 선수다.
위 상황일 경우에도 인덱스를 담았다가 answer에 인덱스로 대입하여 반환하였다.</p>

<h4 id="해시를-활용한-방식">해시를 활용한 방식</h4>
<p>해시를 이용하면 훨씬 간단하게 풀 수 있다.</p>

<p>hashMap의 key와 value의 특성을 활용하여 participant 배열의 원소와 갯수를 세어 hashMap에 넣는다. <br />
그리고 completion 배열을 돌며 이전에 담았던 원소마다 갯수를 차감한다. <br />
그러면 자연스럽게 completion 배열에 없는 값과 중복된 값을 찾아낼 수 있다.</p>

<p>코드로 작성해보자.</p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
</pre></td><td class="rouge-code"><pre><span class="nc">String</span> <span class="n">answer</span> <span class="o">=</span> <span class="s">""</span><span class="o">;</span>
<span class="nc">HashMap</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">hm</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HashMap</span><span class="o">&lt;&gt;();</span>

<span class="k">for</span><span class="o">(</span><span class="nc">String</span> <span class="n">p</span> <span class="o">:</span> <span class="n">participant</span><span class="o">)</span> <span class="n">hm</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">p</span><span class="o">,</span> <span class="n">hm</span><span class="o">.</span><span class="na">getOrDefault</span><span class="o">(</span><span class="n">p</span><span class="o">,</span> <span class="mi">0</span><span class="o">)+</span><span class="mi">1</span><span class="o">);</span> <span class="c1">// 1</span>
<span class="k">for</span><span class="o">(</span><span class="nc">String</span> <span class="n">c</span> <span class="o">:</span> <span class="n">completion</span><span class="o">)</span> <span class="n">hm</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">c</span><span class="o">,</span> <span class="n">hm</span><span class="o">.</span><span class="na">getOrDefault</span><span class="o">(</span><span class="n">c</span><span class="o">,</span> <span class="mi">0</span><span class="o">)-</span><span class="mi">1</span><span class="o">);</span> <span class="c1">// 2</span>

<span class="k">for</span><span class="o">(</span><span class="nc">Map</span><span class="o">.</span><span class="na">Entry</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">entry</span> <span class="o">:</span> <span class="n">hm</span><span class="o">.</span><span class="na">entrySet</span><span class="o">())</span> <span class="o">{</span>
    <span class="k">if</span><span class="o">(</span><span class="n">entry</span><span class="o">.</span><span class="na">getValue</span><span class="o">()</span> <span class="o">==</span> <span class="mi">1</span><span class="o">)</span> <span class="n">answer</span> <span class="o">=</span> <span class="n">entry</span><span class="o">.</span><span class="na">getKey</span><span class="o">();</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>위 1번과 2번 과정을 통해 완주하지 못한 선수를 알 수 있다. <br />
예를 들어보자.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre>p = [B, C, A], c = [B, C] 라고 한다면
hm = [B:1, C:1, A:1] // 1
hm = [B:0, C:0, A:1] // 2
</pre></td></tr></tbody></table></code></pre></div></div>
<p>위 내용대로 A가 완주하지 못한 선수임을 알 수 있다. <br />
중복인 상황의 예도 확인해보자.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre>p = [B, C, A, B], c = [B, C, A] 라고 한다면
hm = [B:2, C:1, A:1] // 1
hm = [B:1, C:0, A:0] // 2
</pre></td></tr></tbody></table></code></pre></div></div>

<p>B가 중복일 경우에도 1,2번 과정을 통해 또 다른 B가 완주하지 못한 선수임을 알 수 있다.</p>

<p><br /></p>

<h4 id="실행-시간-비교">실행 시간 비교</h4>
<p><strong>정렬하여 반복문을 활용한 방식</strong></p>
<left><img src="/assets/images/programmers/20220831_03-2.png" width="300" /></left>

<p><br /></p>

<p><strong>해시를 활용한 방식</strong></p>
<left><img src="/assets/images/programmers/20220831_03-3.png" width="300" /></left>

<p><br />
확실히 해시를 이용했을 때 실행시간이 더욱 빠르다는 것을 알 수 있다.</p>

<p><br /></p>

<h3 id="작성-코드">작성 코드</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">Scanner</span> <span class="n">sc</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Scanner</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
        
        <span class="nc">String</span><span class="o">[]</span> <span class="n">participant</span> <span class="o">=</span> <span class="o">{</span><span class="s">"leo"</span><span class="o">,</span> <span class="s">"kiki"</span><span class="o">,</span> <span class="s">"eden"</span><span class="o">};</span>
        <span class="nc">String</span><span class="o">[]</span> <span class="n">completion</span> <span class="o">=</span> <span class="o">{</span><span class="s">"kiki"</span><span class="o">,</span> <span class="s">"eden"</span><span class="o">};</span>
        <span class="c1">// String[] participant = {"marina", "josipa", "nikola", "vinko", "filipa"};</span>
        <span class="c1">// String[] completion = {"josipa", "filipa", "marina", "nikola"};</span>
        <span class="c1">// String[] participant = {"B", "A", "B", "C"};</span>
        <span class="c1">// String[] completion = {"B", "A", "C"};</span>

        <span class="kt">long</span> <span class="n">start</span> <span class="o">=</span> <span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        <span class="n">solution2</span><span class="o">(</span><span class="n">participant</span><span class="o">,</span> <span class="n">completion</span><span class="o">);</span>
        <span class="kt">long</span> <span class="n">end</span> <span class="o">=</span> <span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"\n수행시간 = "</span> <span class="o">+</span> <span class="o">(</span><span class="n">end</span><span class="o">-</span><span class="n">start</span><span class="o">));</span>
    <span class="o">}</span>
    <span class="c1">// 배열을 오름차순 정렬하여 반복문을 활용한 방식</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="nc">String</span> <span class="nf">solution</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">participant</span><span class="o">,</span> <span class="nc">String</span><span class="o">[]</span> <span class="n">completion</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">participant</span><span class="o">);</span>
        <span class="nc">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">completion</span><span class="o">);</span>
        <span class="nc">String</span> <span class="n">answer</span> <span class="o">=</span> <span class="s">""</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">idx</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">completion</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">if</span><span class="o">(!</span><span class="n">participant</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">equals</span><span class="o">(</span><span class="n">completion</span><span class="o">[</span><span class="n">i</span><span class="o">]))</span> <span class="o">{</span>
                <span class="n">answer</span> <span class="o">=</span> <span class="n">participant</span><span class="o">[</span><span class="n">i</span><span class="o">];</span>
                <span class="k">break</span><span class="o">;</span>
            <span class="o">}</span>
            <span class="n">idx</span> <span class="o">=</span> <span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">;</span>
        <span class="o">}</span>
        
        <span class="n">answer</span> <span class="o">=</span> <span class="n">participant</span><span class="o">[</span><span class="n">idx</span><span class="o">];</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span> 
    
    <span class="c1">// 해시를 활용한 방식</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="nc">String</span> <span class="nf">solution2</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">participant</span><span class="o">,</span> <span class="nc">String</span><span class="o">[]</span> <span class="n">completion</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">String</span> <span class="n">answer</span> <span class="o">=</span> <span class="s">""</span><span class="o">;</span>
        <span class="nc">HashMap</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">hm</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HashMap</span><span class="o">&lt;&gt;();</span>
        
        <span class="k">for</span><span class="o">(</span><span class="nc">String</span> <span class="n">p</span> <span class="o">:</span> <span class="n">participant</span><span class="o">)</span> <span class="n">hm</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">p</span><span class="o">,</span> <span class="n">hm</span><span class="o">.</span><span class="na">getOrDefault</span><span class="o">(</span><span class="n">p</span><span class="o">,</span> <span class="mi">0</span><span class="o">)+</span><span class="mi">1</span><span class="o">);</span>
        <span class="k">for</span><span class="o">(</span><span class="nc">String</span> <span class="n">c</span> <span class="o">:</span> <span class="n">completion</span><span class="o">)</span> <span class="n">hm</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">c</span><span class="o">,</span> <span class="n">hm</span><span class="o">.</span><span class="na">getOrDefault</span><span class="o">(</span><span class="n">c</span><span class="o">,</span> <span class="mi">0</span><span class="o">)-</span><span class="mi">1</span><span class="o">);</span>
        
        <span class="k">for</span><span class="o">(</span><span class="nc">Map</span><span class="o">.</span><span class="na">Entry</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">entry</span> <span class="o">:</span> <span class="n">hm</span><span class="o">.</span><span class="na">entrySet</span><span class="o">())</span> <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="n">entry</span><span class="o">.</span><span class="na">getValue</span><span class="o">()</span> <span class="o">==</span> <span class="mi">1</span><span class="o">)</span> <span class="n">answer</span> <span class="o">=</span> <span class="n">entry</span><span class="o">.</span><span class="na">getKey</span><span class="o">();</span>
        <span class="o">}</span>
        
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="회고">회고</h3>
<ul>
  <li>이 문제의 효율성을 따졌을 때 두 배열을 정렬하여 반복문을 적게 사용하는 것이 시간복잡도를 줄이는데 중요하다고 느꼈다.</li>
  <li>Hash를 활용하며 찾는 키가 존재한다면 찾는 키의 값을 반환하고 없다면 기본 값을 반환하는 getOrDefault() 메서드를 알게되었다.</li>
</ul>]]></content><author><name>lango</name></author><category term="Java" /><category term="blog" /><category term="algorithm" /><category term="study" /><category term="java" /><category term="programmers" /><summary type="html"><![CDATA[level 1 - 완주하지 못한 선수]]></summary></entry><entry><title type="html">[알고리즘 스터디 - Java] 프로그래머스(level1) - 모의고사</title><link href="http://localhost:4000/java/38-post/" rel="alternate" type="text/html" title="[알고리즘 스터디 - Java] 프로그래머스(level1) - 모의고사" /><published>2022-08-31T00:00:00+09:00</published><updated>2022-08-31T00:00:00+09:00</updated><id>http://localhost:4000/java/38-post</id><content type="html" xml:base="http://localhost:4000/java/38-post/"><![CDATA[<p><br /></p>

<center><img src="/assets/images/programmers/20220831_01.png" width="700" /></center>

<p><strong>입출력 예시</strong></p>
<blockquote>
  <p>Input-1 <br />
<strong>[1,2,3,4,5]</strong> <br />
Output-1 <br />
<strong>[1]</strong></p>
</blockquote>

<blockquote>
  <p>Input-2 <br />
<strong>[1,3,2,4,2]</strong> <br />
Output-2 <br />
<strong>[1,2,3]</strong></p>
</blockquote>

<p><br /></p>

<h3 id="문제-풀이">문제 풀이</h3>
<p>해당 문제는 완전 탐색 알고리즘으로 접근해야 한다. <br />
먼저 완전 탐색 알고리즘이 뭔지 알아보자.</p>

<h4 id="완전탐색브루트포스이란">완전탐색(브루트포스)이란?</h4>
<blockquote>
  <p>간단히 가능한 모든 경우의 수를 다 체크해서 정답을 찾는 방법이다. <br /> 
무식하게 가능한 거 다 해보겠다는 방법을 의미하며 브루트포스(Brute Force)라고도 부른다. <br />
이 방법은 직관적이어서 이해하기 쉽고 문제의 정확한 결과값을 얻어낼 수 있는 가장 확실하며 기초적인 방법이다.</p>
</blockquote>

<h4 id="완전탐색의-활용법은">완전탐색의 활용법은?</h4>
<blockquote>
  <ol>
    <li>해결하고자 하는 문제의 가능한 경우의 수를 대략적으로 계산한다.</li>
    <li>가능한 모든 방법을 다 고려한다.</li>
    <li>실제 답을 구할 수 있는지 적용한다.</li>
  </ol>
</blockquote>

<p>하지만, 반대로 모든 수를 다 확인하는 만큼 팩토리얼이나 제곱단위로도 시간복잡도가 커질 수 있다. <br />
해당문제가 경우의 수를 모두 따졌을 때 일정시간 이상 소요될 경우 시간초과가 될 수 있기 때문에 유의해서 사용해야 한다.</p>

<p>이 문제에선 <strong>완전탐색 기법을 활용해 반복/조건문을 통해 가능한 모든 경우의 수</strong>를 찾아보려 한다.</p>

<p>먼저 수포자 3명의 찍는 방식 배열의 길이가 모두 다르기에 주어진 정답배열의 길이만큼 늘렸다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre><span class="nc">String</span><span class="o">[]</span> <span class="n">arr1</span> <span class="o">=</span> <span class="o">{</span><span class="s">"1"</span><span class="o">,</span><span class="s">"2"</span><span class="o">,</span><span class="s">"3"</span><span class="o">,</span><span class="s">"4"</span><span class="o">,</span><span class="s">"5"</span><span class="o">};</span> <span class="c1">// length:5</span>
<span class="nc">String</span><span class="o">[]</span> <span class="n">arr2</span> <span class="o">=</span> <span class="o">{</span><span class="s">"2"</span><span class="o">,</span><span class="s">"1"</span><span class="o">,</span><span class="s">"2"</span><span class="o">,</span><span class="s">"3"</span><span class="o">,</span><span class="s">"2"</span><span class="o">,</span><span class="s">"4"</span><span class="o">,</span><span class="s">"2"</span><span class="o">,</span><span class="s">"5"</span><span class="o">};</span> <span class="c1">// length:8 </span>
<span class="nc">String</span><span class="o">[]</span> <span class="n">arr3</span> <span class="o">=</span> <span class="o">{</span><span class="s">"3"</span><span class="o">,</span><span class="s">"3"</span><span class="o">,</span><span class="s">"1"</span><span class="o">,</span><span class="s">"1"</span><span class="o">,</span><span class="s">"2"</span><span class="o">,</span><span class="s">"2"</span><span class="o">,</span><span class="s">"4"</span><span class="o">,</span><span class="s">"4"</span><span class="o">,</span><span class="s">"5"</span><span class="o">,</span><span class="s">"5"</span><span class="o">};</span> <span class="c1">// length:10  </span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>수포자 배열들을 그대로 사용하자니 배열의 길이를 가변적으로 조정하기 어려워 별도의 list로 옮겼다.
그리고 주어진 정답 배열의 길이만큼 순회하며 인덱스 범위를 넘어갈 경우 첫 인덱스부터 다시 반복하여 채워서 늘렸다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
</pre></td><td class="rouge-code"><pre><span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">list1</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;(</span><span class="nc">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="n">arr1</span><span class="o">));</span>
<span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">list2</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;(</span><span class="nc">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="n">arr2</span><span class="o">));</span>
<span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">list3</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;(</span><span class="nc">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="n">arr3</span><span class="o">));</span>

<span class="kt">int</span> <span class="n">size1</span> <span class="o">=</span> <span class="n">list1</span><span class="o">.</span><span class="na">size</span><span class="o">();</span>
<span class="kt">int</span> <span class="n">size2</span> <span class="o">=</span> <span class="n">list2</span><span class="o">.</span><span class="na">size</span><span class="o">();</span>
<span class="kt">int</span> <span class="n">size3</span> <span class="o">=</span> <span class="n">list3</span><span class="o">.</span><span class="na">size</span><span class="o">();</span>

<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;=</span><span class="n">answers</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
    <span class="k">if</span><span class="o">(</span><span class="n">i</span><span class="o">&gt;</span><span class="n">size1</span><span class="o">)</span> <span class="n">list1</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">list1</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">-</span><span class="n">size1</span><span class="o">-</span><span class="mi">1</span><span class="o">));</span>
    <span class="k">if</span><span class="o">(</span><span class="n">i</span><span class="o">&gt;</span><span class="n">size2</span><span class="o">)</span> <span class="n">list2</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">list2</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">-</span><span class="n">size2</span><span class="o">-</span><span class="mi">1</span><span class="o">));</span>
    <span class="k">if</span><span class="o">(</span><span class="n">i</span><span class="o">&gt;</span><span class="n">size3</span><span class="o">)</span> <span class="n">list3</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">list3</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">-</span><span class="n">size3</span><span class="o">-</span><span class="mi">1</span><span class="o">));</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>위 코드의 반복문 내용을 보면 주어진 정답배열의 길이가 12이고 3개의 수포자 배열 모두 그에 맞춰 자기 인덱스에 맞춰 늘릴 수 있다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="rouge-code"><pre>answers = [1,1,1,1,1,1,1,1,1,1,1,1]
list1 = [1,2,3,4,5,1,2,3,4,5,1,2] // 1,2,3,4,5
list2 = [2,1,2,3,2,4,2,5,2,1,2,3] // 2,1,2,3,2,4,2,5
list3 = [3,3,1,1,2,2,4,4,5,5,3,3] // 3,3,1,1,2,2,4,4,5,5
</pre></td></tr></tbody></table></code></pre></div></div>

<p>이제 정답배열만큼 각 수포자 list 원소가 준비되었으니 정답 여부를 검증할 차례이다.
먼저 각 수포자 배열의 정답 카운트를 셀 변수를 선언하고 초기화하자.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
</pre></td><td class="rouge-code"><pre><span class="kt">int</span> <span class="n">cnt1</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
<span class="kt">int</span> <span class="n">cnt2</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
<span class="kt">int</span> <span class="n">cnt3</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>

<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">answers</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
    <span class="k">if</span><span class="o">(</span><span class="n">answers</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">==</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">list1</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">)))</span> <span class="n">cnt1</span><span class="o">++;</span>
    <span class="k">if</span><span class="o">(</span><span class="n">answers</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">==</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">list2</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">)))</span> <span class="n">cnt2</span><span class="o">++;</span> 
    <span class="k">if</span><span class="o">(</span><span class="n">answers</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">==</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">list3</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">)))</span> <span class="n">cnt3</span><span class="o">++;</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>그리고 위 코드와 같이 다시 정답배열을 순회하며 각 수포자 배열의 원소마다 정답여부를 확인하여 정답카운트 변수에 담았다.</p>

<p>여기서 놓치지 말아야 할 점은 <strong>가장 높은 점수를 받은 수포자만 반환</strong>해야 하는 것과 <br />
<strong>가장 높은 점수를 받은 수포자가 2명 이상일 경우 오름차순으로 배열에 넣어 반환</strong>해야 한다는 것이다.</p>

<p>나는 가장 높은 점수를 받은 수포자를 찾아 반환할 list에 넣었다.
또한 가장 높은 점수를 받은 수포자가 여럿이면 list에 오름차순으로 넣도록 작성하였다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
</pre></td><td class="rouge-code"><pre><span class="kt">int</span> <span class="n">max</span> <span class="o">=</span> <span class="nc">Math</span><span class="o">.</span><span class="na">max</span><span class="o">(</span><span class="nc">Math</span><span class="o">.</span><span class="na">max</span><span class="o">(</span><span class="n">cnt1</span><span class="o">,</span><span class="n">cnt2</span><span class="o">),</span><span class="n">cnt3</span><span class="o">);</span>
<span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">list</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>
<span class="k">if</span><span class="o">(</span><span class="n">cnt1</span> <span class="o">==</span> <span class="n">max</span><span class="o">)</span> <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="mi">1</span><span class="o">);</span>
<span class="k">if</span><span class="o">(</span><span class="n">cnt2</span> <span class="o">==</span> <span class="n">max</span><span class="o">)</span> <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="mi">2</span><span class="o">);</span>
<span class="k">if</span><span class="o">(</span><span class="n">cnt3</span> <span class="o">==</span> <span class="n">max</span><span class="o">)</span> <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="mi">3</span><span class="o">);</span>

<span class="kt">int</span><span class="o">[]</span> <span class="n">answer</span> <span class="o">=</span> <span class="n">list</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">mapToInt</span><span class="o">(</span><span class="n">i</span><span class="o">-&gt;</span><span class="n">i</span><span class="o">).</span><span class="na">toArray</span><span class="o">();</span>        
<span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>마지막으로 해당 list를 Array로 변환하여 answer에 담아 반환하였다.</p>

<p><br /></p>

<h3 id="작성-코드">작성 코드</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">Scanner</span> <span class="n">sc</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Scanner</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
        <span class="c1">// int[] arr = {1,3,2,4,2};</span>
        <span class="kt">int</span><span class="o">[]</span> <span class="n">arr</span> <span class="o">=</span> <span class="o">{</span><span class="mi">1</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="mi">3</span><span class="o">,</span><span class="mi">4</span><span class="o">,</span><span class="mi">5</span><span class="o">};</span>
        <span class="kt">long</span> <span class="n">start</span> <span class="o">=</span> <span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        <span class="n">solution</span><span class="o">(</span><span class="n">arr</span><span class="o">);</span>
        <span class="kt">long</span> <span class="n">end</span> <span class="o">=</span> <span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"\n수행시간 = "</span> <span class="o">+</span> <span class="o">(</span><span class="n">end</span><span class="o">-</span><span class="n">start</span><span class="o">));</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span><span class="o">[]</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">answers</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">String</span><span class="o">[]</span> <span class="n">arr1</span> <span class="o">=</span> <span class="o">{</span><span class="s">"1"</span><span class="o">,</span><span class="s">"2"</span><span class="o">,</span><span class="s">"3"</span><span class="o">,</span><span class="s">"4"</span><span class="o">,</span><span class="s">"5"</span><span class="o">};</span>
        <span class="nc">String</span><span class="o">[]</span> <span class="n">arr2</span> <span class="o">=</span> <span class="o">{</span><span class="s">"2"</span><span class="o">,</span><span class="s">"1"</span><span class="o">,</span><span class="s">"2"</span><span class="o">,</span><span class="s">"3"</span><span class="o">,</span><span class="s">"2"</span><span class="o">,</span><span class="s">"4"</span><span class="o">,</span><span class="s">"2"</span><span class="o">,</span><span class="s">"5"</span><span class="o">};</span> 
        <span class="nc">String</span><span class="o">[]</span> <span class="n">arr3</span> <span class="o">=</span> <span class="o">{</span><span class="s">"3"</span><span class="o">,</span><span class="s">"3"</span><span class="o">,</span><span class="s">"1"</span><span class="o">,</span><span class="s">"1"</span><span class="o">,</span><span class="s">"2"</span><span class="o">,</span><span class="s">"2"</span><span class="o">,</span><span class="s">"4"</span><span class="o">,</span><span class="s">"4"</span><span class="o">,</span><span class="s">"5"</span><span class="o">,</span><span class="s">"5"</span><span class="o">};</span>      
        
        <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">list1</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;(</span><span class="nc">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="n">arr1</span><span class="o">));</span>
        <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">list2</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;(</span><span class="nc">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="n">arr2</span><span class="o">));</span>
        <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">list3</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;(</span><span class="nc">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="n">arr3</span><span class="o">));</span>
        
        <span class="kt">int</span> <span class="n">size1</span> <span class="o">=</span> <span class="n">list1</span><span class="o">.</span><span class="na">size</span><span class="o">();</span>
        <span class="kt">int</span> <span class="n">size2</span> <span class="o">=</span> <span class="n">list2</span><span class="o">.</span><span class="na">size</span><span class="o">();</span>
        <span class="kt">int</span> <span class="n">size3</span> <span class="o">=</span> <span class="n">list3</span><span class="o">.</span><span class="na">size</span><span class="o">();</span>
        
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;=</span><span class="n">answers</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="n">i</span><span class="o">&gt;</span><span class="n">size1</span><span class="o">)</span> <span class="n">list1</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">list1</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">-</span><span class="n">size1</span><span class="o">-</span><span class="mi">1</span><span class="o">));</span>
            <span class="k">if</span><span class="o">(</span><span class="n">i</span><span class="o">&gt;</span><span class="n">size2</span><span class="o">)</span> <span class="n">list2</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">list2</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">-</span><span class="n">size2</span><span class="o">-</span><span class="mi">1</span><span class="o">));</span>
            <span class="k">if</span><span class="o">(</span><span class="n">i</span><span class="o">&gt;</span><span class="n">size3</span><span class="o">)</span> <span class="n">list3</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">list3</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">-</span><span class="n">size3</span><span class="o">-</span><span class="mi">1</span><span class="o">));</span>
        <span class="o">}</span>
        
        <span class="kt">int</span> <span class="n">cnt1</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">cnt2</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">cnt3</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">answers</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="n">answers</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">==</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">list1</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">)))</span> <span class="n">cnt1</span><span class="o">++;</span>
            <span class="k">if</span><span class="o">(</span><span class="n">answers</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">==</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">list2</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">)))</span> <span class="n">cnt2</span><span class="o">++;</span> 
            <span class="k">if</span><span class="o">(</span><span class="n">answers</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">==</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">list3</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">)))</span> <span class="n">cnt3</span><span class="o">++;</span>
        <span class="o">}</span>
        
        <span class="kt">int</span> <span class="n">max</span> <span class="o">=</span> <span class="nc">Math</span><span class="o">.</span><span class="na">max</span><span class="o">(</span><span class="nc">Math</span><span class="o">.</span><span class="na">max</span><span class="o">(</span><span class="n">cnt1</span><span class="o">,</span><span class="n">cnt2</span><span class="o">),</span><span class="n">cnt3</span><span class="o">);</span>
        <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">list</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>
        <span class="k">if</span><span class="o">(</span><span class="n">cnt1</span> <span class="o">==</span> <span class="n">max</span><span class="o">)</span> <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="mi">1</span><span class="o">);</span>
        <span class="k">if</span><span class="o">(</span><span class="n">cnt2</span> <span class="o">==</span> <span class="n">max</span><span class="o">)</span> <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="mi">2</span><span class="o">);</span>
        <span class="k">if</span><span class="o">(</span><span class="n">cnt3</span> <span class="o">==</span> <span class="n">max</span><span class="o">)</span> <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="mi">3</span><span class="o">);</span>
        
        <span class="kt">int</span><span class="o">[]</span> <span class="n">answer</span> <span class="o">=</span> <span class="n">list</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">mapToInt</span><span class="o">(</span><span class="n">i</span><span class="o">-&gt;</span><span class="n">i</span><span class="o">).</span><span class="na">toArray</span><span class="o">();</span>        
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="회고">회고</h3>
<ul>
  <li>평소에 반복문을 통해 문제를 많이 푸는데 완전 탐색 알고리즘과 관련지어 생각해볼 수 있었고, 완전탐색 기법을 어떻게 활용해야 효율적일지 공부할 수 있었다.</li>
</ul>]]></content><author><name>lango</name></author><category term="Java" /><category term="blog" /><category term="algorithm" /><category term="study" /><category term="java" /><category term="programmers" /><summary type="html"><![CDATA[level 1 - 모의고사]]></summary></entry><entry><title type="html">[알고리즘 스터디 - Java] 프로그래머스(level1) - K번째수</title><link href="http://localhost:4000/java/39-post/" rel="alternate" type="text/html" title="[알고리즘 스터디 - Java] 프로그래머스(level1) - K번째수" /><published>2022-08-31T00:00:00+09:00</published><updated>2022-08-31T00:00:00+09:00</updated><id>http://localhost:4000/java/39-post</id><content type="html" xml:base="http://localhost:4000/java/39-post/"><![CDATA[<p><br /></p>

<center><img src="/assets/images/programmers/20220831_02.png" width="700" /></center>

<p><strong>입출력 예시</strong></p>
<blockquote>
  <p>Input <br />
<strong>array = [1, 5, 2, 6, 3, 7, 4]</strong> <br />
<strong>commands = [[2, 5, 3], [4, 4, 1], [1, 7, 3]]</strong> <br />
Output <br />
<strong>[5, 6, 3]</strong></p>
</blockquote>

<p><br /></p>

<h3 id="문제-풀이">문제 풀이</h3>
<p>주어진 array 배열을 commands 2차원 배열의 각 [i,j,k] 별로 정해진 연산을 행해야 한다.</p>

<p>나름대로 접근방식을 정해보았다.</p>
<ul>
  <li>commands 배열의 각 [i,j,k]별로 i부터 j까지 array 배열을 자른다.</li>
  <li>자른 array 배열을 오름차순 정렬한다.</li>
  <li>정렬된 array 배열의 k번째 수를 반환할 answer 배열에 담는다.</li>
</ul>

<p>먼저 commands 2차원 배열의 껍데기를 벗기고 안쪽 [i,j,j] 배열에 접근하자. <br />
그리고 안쪽 반복문의 인덱스가 0이면 i, 1이면 j, 2이면 k이다.</p>

<p>안쪽 반복문의 인덱스가 0과 1일때는 array 배열을 i부터 j까지 잘라야한다. <br />
조건문으로 자르기 시작할 위치 start와 끝낼 위치 end 변수를 저장한다.</p>

<h4 id="배열을-어떻게-자를까">배열을 어떻게 자를까?</h4>
<p><strong>Arrays.copyOfRange()</strong> 메서드를 통해 원본배열과 시작인덱스와 종료인덱스를 넘겨주면 원하는대로 배열을 자를 수 있다.</p>

<p>다음으로 안쪽 반복문의 인덱스가 2일 때는 i와 j대로 자른 array 배열(이하 split 배열)을 정렬하고 k번째 수를 알아내야 한다. <br />
안쪽 반복분 인덱스가 2일 때 commands[i][j]의 수는 k이다. <br />
오름차순으로 정렬된 split배열에서 commands[i][j]를 인덱스로 대입하여 k번째 수를 찾을 수 있다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="rouge-code"><pre><span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">commands</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
    <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">j</span><span class="o">&lt;</span><span class="n">commands</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">length</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
        <span class="k">if</span><span class="o">(</span><span class="n">j</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="n">start</span> <span class="o">=</span> <span class="n">commands</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]-</span><span class="mi">1</span><span class="o">;</span>
        <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">j</span> <span class="o">==</span> <span class="mi">1</span><span class="o">)</span> <span class="n">end</span> <span class="o">=</span> <span class="n">commands</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">];</span>
        <span class="k">else</span> <span class="o">{</span>
            <span class="kt">int</span><span class="o">[]</span> <span class="n">split</span> <span class="o">=</span> <span class="nc">Arrays</span><span class="o">.</span><span class="na">copyOfRange</span><span class="o">(</span><span class="n">array</span><span class="o">,</span> <span class="n">start</span><span class="o">,</span> <span class="n">end</span><span class="o">);</span>
            <span class="nc">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">split</span><span class="o">);</span>
            <span class="n">answer</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="n">split</span><span class="o">[</span><span class="n">commands</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]-</span><span class="mi">1</span><span class="o">];</span>
        <span class="o">}</span>   
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><br /></p>

<h3 id="작성-코드">작성 코드</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        
        <span class="kt">int</span><span class="o">[]</span> <span class="n">array</span> <span class="o">=</span> <span class="o">{</span><span class="mi">1</span><span class="o">,</span><span class="mi">5</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="mi">6</span><span class="o">,</span><span class="mi">3</span><span class="o">,</span><span class="mi">7</span><span class="o">,</span><span class="mi">4</span><span class="o">};</span>
        <span class="kt">int</span><span class="o">[][]</span> <span class="n">commands</span> <span class="o">=</span> <span class="o">{{</span><span class="mi">2</span><span class="o">,</span><span class="mi">5</span><span class="o">,</span><span class="mi">3</span><span class="o">},{</span><span class="mi">4</span><span class="o">,</span><span class="mi">4</span><span class="o">,</span><span class="mi">1</span><span class="o">},{</span><span class="mi">1</span><span class="o">,</span><span class="mi">7</span><span class="o">,</span><span class="mi">3</span><span class="o">}};</span>
        
        <span class="kt">long</span> <span class="n">start</span> <span class="o">=</span> <span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        <span class="n">solution</span><span class="o">(</span><span class="n">array</span><span class="o">,</span> <span class="n">commands</span><span class="o">);</span>
        <span class="kt">long</span> <span class="n">end</span> <span class="o">=</span> <span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"\n수행시간 = "</span> <span class="o">+</span> <span class="o">(</span><span class="n">end</span><span class="o">-</span><span class="n">start</span><span class="o">));</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span><span class="o">[]</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">array</span><span class="o">,</span> <span class="kt">int</span><span class="o">[][]</span> <span class="n">commands</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span><span class="o">[]</span> <span class="n">answer</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">commands</span><span class="o">.</span><span class="na">length</span><span class="o">];</span>
        
        <span class="kt">int</span> <span class="n">start</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">end</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>

        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">commands</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">j</span><span class="o">&lt;</span><span class="n">commands</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">length</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
                <span class="k">if</span><span class="o">(</span><span class="n">j</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="n">start</span> <span class="o">=</span> <span class="n">commands</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]-</span><span class="mi">1</span><span class="o">;</span>
                <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">j</span> <span class="o">==</span> <span class="mi">1</span><span class="o">)</span> <span class="n">end</span> <span class="o">=</span> <span class="n">commands</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">];</span>
                <span class="k">else</span> <span class="o">{</span>
                    <span class="kt">int</span><span class="o">[]</span> <span class="n">split</span> <span class="o">=</span> <span class="nc">Arrays</span><span class="o">.</span><span class="na">copyOfRange</span><span class="o">(</span><span class="n">array</span><span class="o">,</span> <span class="n">start</span><span class="o">,</span> <span class="n">end</span><span class="o">);</span>
                    <span class="nc">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">split</span><span class="o">);</span>
                    <span class="n">answer</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="n">split</span><span class="o">[</span><span class="n">commands</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]-</span><span class="mi">1</span><span class="o">];</span>
                <span class="o">}</span>   
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="회고">회고</h3>
<ul>
  <li>copyOfRange() 메서드를 통해 배열을 원하는대로 자를 수 있음을 알게되었다.</li>
</ul>]]></content><author><name>lango</name></author><category term="Java" /><category term="blog" /><category term="algorithm" /><category term="study" /><category term="java" /><category term="programmers" /><summary type="html"><![CDATA[level 1 - K번째수]]></summary></entry><entry><title type="html">[알고리즘 스터디 - Java] 프로그래머스(level1) - 체육복</title><link href="http://localhost:4000/java/37-post/" rel="alternate" type="text/html" title="[알고리즘 스터디 - Java] 프로그래머스(level1) - 체육복" /><published>2022-08-30T00:00:00+09:00</published><updated>2022-08-30T00:00:00+09:00</updated><id>http://localhost:4000/java/37-post</id><content type="html" xml:base="http://localhost:4000/java/37-post/"><![CDATA[<p><br /></p>

<center><img src="/assets/images/programmers/20220830_01.png" width="700" /></center>

<blockquote>
  <p>Input-1 <br />
<strong>n=5, lost=[2,4], reserve=[1,3,5]</strong> <br />
Output-1 <br />
<strong>5</strong></p>
</blockquote>

<blockquote>
  <p>Input-2 <br />
<strong>n=5, lost=[2,4], reserve=[3]</strong> <br />
Output-2 <br />
<strong>4</strong></p>
</blockquote>

<h3 id="문제-풀이">문제 풀이</h3>
<p>이 문제의 경우 그리디 알고리즘을 활용하여 접근하였다.</p>

<blockquote>
  <p><strong>그리디 알고리즘이란</strong>? <br />
가장 직관적인 알고리즘 설계 패러타임 중 하나이며, 매번 단계에서 <strong>선택할 때마다 가장 좋은 답을 선택</strong>하는 기법이다. <br />
지금 선택한 것을 앞으로의 남은 선택에 영향을 끼칠지 고려하지 않는다는 전제이며, 전반적으로 적절한 결과를 도출하자는 알고리즘 기법이다. <br />
항상 최적의 답을 구하는 것은 아니지만 어느정도 최적의 답에 근사한 결과를 빠르게 구할 수 있다는 장점이 있다. <br />
특정 상황에서는 그리디 알고리즘이 최적의 답을 보장할 수도 있다.</p>
</blockquote>

<p>그렇다면 그리디 알고리즘처럼 최적의 답만 찾는 방식으로 문제에 접근해보자.</p>

<ol>
  <li>lost와 reserve 배열의 원소는 오름차순이어야 한다.</li>
  <li>기본적으로 여벌 체육복을 가진 학생들은 수업에 참여할 수 있기에 answer에 n(전체 학생수) - lost.length(도난당한 학생수)를 저장한다.</li>
  <li>여벌 체육복을 가져왔는데 도난당할 수 있기 때문에 lost와 reserve 배열에서 중복이 발생할 경우를 고려해야 한다.</li>
  <li>도난 당한 학생에게 체육복을 빌려주는 경우는 lost의 원소에서 +- 1씩 증가시킨 수가 reserve 배열에 존재하는지 검증한다.</li>
  <li>도난당한 학생에게 체육복을 빌려줄 때마다 answer를 증가시키면 된다.</li>
</ol>

<p>위 풀이과정대로 코드를 작성해보자.</p>

<p>먼저 answer를 선언하고 lost와 reserve 배열을 오름차순으로 정렬하자.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre><span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="n">n</span> <span class="o">-</span> <span class="n">lost</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="c1">// 기본 값 : 도난 당하지 않고 여벌이 있는 학생 수</span>
<span class="nc">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">lost</span><span class="o">);</span>
<span class="nc">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">reserve</span><span class="o">);</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><br /></p>

<p>다음으로 3-5번까지의 내용을 중첩 반복문과, Set을 활용한 2가지 방식으로 풀어보았다.</p>

<h4 id="중첩-반복문-풀이">중첩 반복문 풀이</h4>

<p>먼저 여벌 체육복을 가져왔는데 도난당한 학생의 경우 다른 도난당한 학생에게 빌려줄 수 없기 때문에 별도로 해당 원소를 마킹해두어야 한다. <br />
중첩 반복문을 돌며 lost[i]와 reserve[j]가 중복일 때 해당 원소를 -1로 변경하고 answer를 1 증가시켰다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="rouge-code"><pre><span class="c1">// 여벌 체육복을 가져왔는데 도난당한 경우</span>
<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">lost</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
    <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">j</span><span class="o">&lt;</span><span class="n">reserve</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
        <span class="k">if</span><span class="o">(</span><span class="n">lost</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">==</span> <span class="n">reserve</span><span class="o">[</span><span class="n">j</span><span class="o">])</span> <span class="o">{</span>
            <span class="n">answer</span><span class="o">++;</span>
            <span class="n">lost</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="o">;</span>
            <span class="n">reserve</span><span class="o">[</span><span class="n">j</span><span class="o">]</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="o">;</span>
            <span class="k">break</span><span class="o">;</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="-1로-변경한-이유는">-1로 변경한 이유는?</h4>
<p>0으로 변경하게 되면 이후 도난당한 학생에게 빌려줄 때 0+1 로직을 통해 1이 되어 조건문을 탈 수 있으므로 0이 되도록 -1로 두었다.</p>

<h4 id="answer를-증가시킨-이유는">answer를 증가시킨 이유는?</h4>
<p>여벌 체육복을 가져왔는데 도난당한 학생의 경우도 어쨋든 수업을 참여할 수 있기 때문에 answer를 증가시키는게 맞다.</p>

<p>다음으로 lost와 reserve의 중복도 처리하였으니 체육복을 빌려주는 로직을 짜면 된다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
</pre></td><td class="rouge-code"><pre><span class="c1">// 도난당한 학생에게 빌려주는 경우</span>
<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">lost</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
    <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">j</span><span class="o">&lt;</span><span class="n">reserve</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
        <span class="k">if</span><span class="o">((</span><span class="n">lost</span><span class="o">[</span><span class="n">i</span><span class="o">]+</span><span class="mi">1</span> <span class="o">==</span> <span class="n">reserve</span><span class="o">[</span><span class="n">j</span><span class="o">])</span> <span class="o">||</span> <span class="o">(</span><span class="n">lost</span><span class="o">[</span><span class="n">i</span><span class="o">]-</span><span class="mi">1</span> <span class="o">==</span> <span class="n">reserve</span><span class="o">[</span><span class="n">j</span><span class="o">]))</span> <span class="o">{</span>    
            <span class="n">answer</span><span class="o">++;</span>
            <span class="n">reserve</span><span class="o">[</span><span class="n">j</span><span class="o">]</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="o">;</span>
            <span class="k">break</span><span class="o">;</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>위와 같이 lost[i]+1 이나 lost[i]-1이 reserve[j]와 같으면 인접한 수로 보고 answer를 증가시킨다. <br />
<strong>answer를 증가시켰다면 다음 인접수는 고려하지 않아도 되기에 reverve[j]를 -1로 변경하여 검증에서 제외하도록 한다</strong>(이것이 그리디 알고리즘 의도라고 생각이 들었다.)</p>

<h4 id="hastset-풀이">HastSet 풀이</h4>
<p>HashSet을 활용하면 복잡한 중첩반복문 작성할 필요없이 간단하다.<br /></p>

<p>먼저 reserveSet이란 이름으로 HashSet을 하나 생성하고 reserve의 값을 저장한다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="nc">HashSet</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">reserveSet</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HashSet</span><span class="o">&lt;&gt;();</span> 
<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">:</span> <span class="n">reserve</span><span class="o">)</span> <span class="n">reserveSet</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>    
</pre></td></tr></tbody></table></code></pre></div></div>

<p>중첩반복문 풀이와 동일하게 HashSet에 중복 여부를 따져 처리하자.</p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
</pre></td><td class="rouge-code"><pre><span class="c1">// 여벌 체육복을 가져왔는데 도난당한 경우 </span>
<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">lost</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
    <span class="k">if</span><span class="o">(</span><span class="n">reserveSet</span><span class="o">.</span><span class="na">contains</span><span class="o">(</span><span class="n">lost</span><span class="o">[</span><span class="n">i</span><span class="o">]))</span> <span class="o">{</span>
        <span class="n">answer</span><span class="o">++;</span>
        <span class="n">reserveSet</span><span class="o">.</span><span class="na">remove</span><span class="o">(</span><span class="n">lost</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
        <span class="n">lost</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>그리고 아래와 같이 HashSet에서 인접 원소 수를 확인하여 answer를 증가시키면 된다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="rouge-code"><pre><span class="c1">// 도난당한 학생에게 빌려주는 경우</span>
<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">lost</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
    <span class="k">if</span><span class="o">(</span><span class="n">reserveSet</span><span class="o">.</span><span class="na">contains</span><span class="o">(</span><span class="n">lost</span><span class="o">[</span><span class="n">i</span><span class="o">]-</span><span class="mi">1</span><span class="o">))</span> <span class="o">{</span>
        <span class="n">answer</span><span class="o">++;</span>
        <span class="n">reserveSet</span><span class="o">.</span><span class="na">remove</span><span class="o">(</span><span class="n">lost</span><span class="o">[</span><span class="n">i</span><span class="o">]-</span><span class="mi">1</span><span class="o">);</span> 
    <span class="o">}</span>
    <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">reserveSet</span><span class="o">.</span><span class="na">contains</span><span class="o">(</span><span class="n">lost</span><span class="o">[</span><span class="n">i</span><span class="o">]+</span><span class="mi">1</span><span class="o">))</span> <span class="o">{</span>
        <span class="n">answer</span><span class="o">++;</span>
        <span class="n">reserveSet</span><span class="o">.</span><span class="na">remove</span><span class="o">(</span><span class="n">lost</span><span class="o">[</span><span class="n">i</span><span class="o">]+</span><span class="mi">1</span><span class="o">);</span>  
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><br /></p>

<h3 id="작성-코드">작성 코드</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">Scanner</span> <span class="n">sc</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Scanner</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
        <span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
        <span class="kt">int</span><span class="o">[]</span> <span class="n">lost</span> <span class="o">=</span> <span class="o">{</span><span class="mi">2</span><span class="o">,</span><span class="mi">4</span><span class="o">};</span>
        <span class="kt">int</span><span class="o">[]</span> <span class="n">reserve</span> <span class="o">=</span> <span class="o">{</span><span class="mi">1</span><span class="o">,</span><span class="mi">3</span><span class="o">,</span><span class="mi">5</span><span class="o">};</span>
        <span class="kt">long</span> <span class="n">start</span> <span class="o">=</span> <span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        <span class="n">solution</span><span class="o">(</span><span class="n">n</span><span class="o">,</span><span class="n">lost</span><span class="o">,</span><span class="n">reserve</span><span class="o">);</span>
        <span class="kt">long</span> <span class="n">end</span> <span class="o">=</span> <span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"\n수행시간 = "</span> <span class="o">+</span> <span class="o">(</span><span class="n">end</span><span class="o">-</span><span class="n">start</span><span class="o">));</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span> <span class="n">n</span><span class="o">,</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">lost</span><span class="o">,</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">reserve</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="n">n</span> <span class="o">-</span> <span class="n">lost</span><span class="o">.</span><span class="na">length</span><span class="o">;</span>
        <span class="nc">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">lost</span><span class="o">);</span>
        <span class="nc">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">reserve</span><span class="o">);</span>
        <span class="c1">// 여벌 체육복을 가져왔는데 도난당한 경우</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">lost</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">j</span><span class="o">&lt;</span><span class="n">reserve</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
                <span class="k">if</span><span class="o">(</span><span class="n">lost</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">==</span> <span class="n">reserve</span><span class="o">[</span><span class="n">j</span><span class="o">])</span> <span class="o">{</span>
                    <span class="n">answer</span><span class="o">++;</span>
                    <span class="n">lost</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="o">;</span>
                    <span class="n">reserve</span><span class="o">[</span><span class="n">j</span><span class="o">]</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="o">;</span>
                    <span class="k">break</span><span class="o">;</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="c1">// 도난당한 학생에게 빌려주는 경우</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">lost</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">j</span><span class="o">&lt;</span><span class="n">reserve</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
                <span class="k">if</span><span class="o">((</span><span class="n">lost</span><span class="o">[</span><span class="n">i</span><span class="o">]+</span><span class="mi">1</span> <span class="o">==</span> <span class="n">reserve</span><span class="o">[</span><span class="n">j</span><span class="o">])</span> <span class="o">||</span> <span class="o">(</span><span class="n">lost</span><span class="o">[</span><span class="n">i</span><span class="o">]-</span><span class="mi">1</span> <span class="o">==</span> <span class="n">reserve</span><span class="o">[</span><span class="n">j</span><span class="o">]))</span> <span class="o">{</span>    
                    <span class="n">answer</span><span class="o">++;</span>
                    <span class="n">reserve</span><span class="o">[</span><span class="n">j</span><span class="o">]</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="o">;</span>
                    <span class="k">break</span><span class="o">;</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">solution2</span><span class="o">(</span><span class="kt">int</span> <span class="n">n</span><span class="o">,</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">lost</span><span class="o">,</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">reserve</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="n">n</span> <span class="o">-</span> <span class="n">lost</span><span class="o">.</span><span class="na">length</span><span class="o">;</span>
        <span class="nc">HashSet</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">reserveSet</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HashSet</span><span class="o">&lt;&gt;();</span> 
        <span class="nc">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">lost</span><span class="o">);</span>
        <span class="nc">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">reserve</span><span class="o">);</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">:</span> <span class="n">reserve</span><span class="o">)</span> <span class="n">reserveSet</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>        
        <span class="c1">// 여벌 체육복을 가져왔는데 도난당한 경우 </span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">lost</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="n">reserveSet</span><span class="o">.</span><span class="na">contains</span><span class="o">(</span><span class="n">lost</span><span class="o">[</span><span class="n">i</span><span class="o">]))</span> <span class="o">{</span>
                <span class="n">answer</span><span class="o">++;</span>
                <span class="n">reserveSet</span><span class="o">.</span><span class="na">remove</span><span class="o">(</span><span class="n">lost</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
                <span class="n">lost</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="o">;</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="c1">// 도난당한 학생에게 빌려주는 경우</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">lost</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="n">reserveSet</span><span class="o">.</span><span class="na">contains</span><span class="o">(</span><span class="n">lost</span><span class="o">[</span><span class="n">i</span><span class="o">]-</span><span class="mi">1</span><span class="o">))</span> <span class="o">{</span>
                <span class="n">answer</span><span class="o">++;</span>
                <span class="n">reserveSet</span><span class="o">.</span><span class="na">remove</span><span class="o">(</span><span class="n">lost</span><span class="o">[</span><span class="n">i</span><span class="o">]-</span><span class="mi">1</span><span class="o">);</span> 
            <span class="o">}</span>
            <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">reserveSet</span><span class="o">.</span><span class="na">contains</span><span class="o">(</span><span class="n">lost</span><span class="o">[</span><span class="n">i</span><span class="o">]+</span><span class="mi">1</span><span class="o">))</span> <span class="o">{</span>
                <span class="n">answer</span><span class="o">++;</span>
                <span class="n">reserveSet</span><span class="o">.</span><span class="na">remove</span><span class="o">(</span><span class="n">lost</span><span class="o">[</span><span class="n">i</span><span class="o">]+</span><span class="mi">1</span><span class="o">);</span>  
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="회고">회고</h3>
<ul>
  <li>그리디 알고리즘에 대해서 알아보고, 어떤 방식으로 문제에 접근해야 할지 공부할 수 있었다.</li>
  <li>HashSet의 contains() 메서드를 통해 원소 존재여부를 검증하는 과정이 가독성이 좋다고 느껴졌다.</li>
</ul>]]></content><author><name>lango</name></author><category term="Java" /><category term="blog" /><category term="algorithm" /><category term="study" /><category term="java" /><category term="programmers" /><summary type="html"><![CDATA[level 1 - 체육복]]></summary></entry><entry><title type="html">[알고리즘 스터디 - Java] 프로그래머스(level1) - 다트 게임</title><link href="http://localhost:4000/java/35-post/" rel="alternate" type="text/html" title="[알고리즘 스터디 - Java] 프로그래머스(level1) - 다트 게임" /><published>2022-08-25T00:00:00+09:00</published><updated>2022-08-25T00:00:00+09:00</updated><id>http://localhost:4000/java/35-post</id><content type="html" xml:base="http://localhost:4000/java/35-post/"><![CDATA[<p><br /></p>

<center><img src="/assets/images/programmers/20220825_02.png" width="700" /></center>

<blockquote>
  <p>문제 요구사항 <br /></p>
  <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
</pre></td><td class="rouge-code"><pre>1. 다트 게임은 총 3번의 기회로 구성된다.
2. 각 기회마다 얻을 수 있는 점수는 0점에서 10점까지이다.
3. 점수와 함께 Single(S), Double(D), Triple(T) 영역이 존재하고 각 영역 당첨 시 점수에서 1제곱, 2제곱, 3제곱 (점수1 , 점수2 , 점수3 )으로 계산된다.
4. 옵션으로 스타상(*) , 아차상(#)이 존재하며 스타상(*) 당첨 시 해당 점수와 바로 전에 얻은 점수를 각 2배로 만든다. 아차상(#) 당첨 시 해당 점수는 마이너스된다.
5. 스타상(*)은 첫 번째 기회에서도 나올 수 있다. 이 경우 첫 번째 스타상(*)의 점수만 2배가 된다. (예제 4번 참고)
6. 스타상(*)의 효과는 다른 스타상(*)의 효과와 중첩될 수 있다. 이 경우 중첩된 스타상(*) 점수는 4배가 된다. (예제 4번 참고)
7. 스타상(*)의 효과는 아차상(#)의 효과와 중첩될 수 있다. 이 경우 중첩된 아차상(#)의 점수는 -2배가 된다. (예제 5번 참고)
8. Single(S), Double(D), Triple(T)은 점수마다 하나씩 존재한다.
9. 스타상(*), 아차상(#)은 점수마다 둘 중 하나만 존재할 수 있으며, 존재하지 않을 수도 있다.
10. 0~10의 정수와 문자 S, D, T, *, #로 구성된 문자열이 입력될 시 총점수를 반환하는 함수를 작성하라.
</pre></td></tr></tbody></table></code></pre></div>  </div>
</blockquote>

<blockquote>
  <p>Input-1 <br />
<strong>1S2D*3T</strong> <br />
Output-1 <br />
<strong>37</strong></p>
</blockquote>

<blockquote>
  <p>Input-2 <br />
<strong>1D2S#10S</strong> <br />
Output-2 <br />
<strong>9</strong></p>
</blockquote>

<blockquote>
  <p>Input-3 <br />
<strong>1S<em>2T</em>3S</strong> <br />
Output-3 <br />
<strong>23</strong>
<br /></p>
</blockquote>

<h3 id="문제-풀이">문제 풀이</h3>
<p>주어진 문자열을 통해 먼저 점수와 보너스, 옵션들을 어떻게 구분할까?</p>
<ul>
  <li>문자열을 순회하며 보너스 문자열을 만나면 이전 문자열이 점수임을 알 수 있다.</li>
  <li>문자열을 순회하며 스타상(*)과 아차상(#)의 인덱스를 통해 첫번째,두번째,세번째 기회마다 옵션을 알 수 있다.</li>
</ul>

<p>점수는 0~10까지의 범위기에 두자리수인 10도 문자열에 포함될 수 있다. <br />
두자리 수이기에 인덱스로 접근하기 위해 한자리 문자열(본인의 경우는 ^)로 <strong>치환</strong>하여 사용했다. <br />
문자열 처리 전에 치환해놓고 처리할 반복문을 동작하게끔 작성했다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="n">dartResult</span> <span class="o">=</span> <span class="n">dartResult</span><span class="o">.</span><span class="na">replace</span><span class="o">(</span><span class="s">"10"</span><span class="o">,</span> <span class="s">"^"</span><span class="o">);</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>거의 40줄 가량을 첫번째, 두번째, 세번째 기회마다 보너스별로 점수를 계산하는 로직을 작성했다. <br />
S, D, T같은 보너스 문자열을 만났을 때 점수(이전 문자열)를 계산하는데 10점일때의 조건을 별도로 추가하였다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
</pre></td><td class="rouge-code"><pre><span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">dartResult</span><span class="o">.</span><span class="na">length</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
    <span class="k">if</span><span class="o">(</span><span class="n">dartResult</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">)</span> <span class="o">==</span> <span class="sc">'S'</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">if</span><span class="o">(</span><span class="n">dartResult</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">)</span> <span class="o">==</span> <span class="sc">'^'</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="n">i</span><span class="o">==</span><span class="mi">1</span><span class="o">)</span> <span class="n">first</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="nc">Math</span><span class="o">.</span><span class="na">pow</span><span class="o">(</span><span class="mi">10</span><span class="o">,</span> <span class="mi">1</span><span class="o">);</span>
            <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">i</span><span class="o">==</span><span class="mi">3</span> <span class="o">||</span> <span class="n">i</span><span class="o">==</span><span class="mi">4</span><span class="o">)</span> <span class="n">second</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="nc">Math</span><span class="o">.</span><span class="na">pow</span><span class="o">(</span><span class="mi">10</span><span class="o">,</span> <span class="mi">1</span><span class="o">);</span>
            <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">i</span><span class="o">==</span><span class="mi">5</span> <span class="o">||</span> <span class="n">i</span><span class="o">==</span><span class="mi">6</span> <span class="o">||</span> <span class="n">i</span><span class="o">==</span><span class="mi">7</span><span class="o">)</span> <span class="n">third</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="nc">Math</span><span class="o">.</span><span class="na">pow</span><span class="o">(</span><span class="mi">10</span><span class="o">,</span> <span class="mi">1</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="k">else</span><span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="n">i</span><span class="o">==</span><span class="mi">1</span><span class="o">)</span> <span class="n">first</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="nc">Math</span><span class="o">.</span><span class="na">pow</span><span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">dartResult</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">,</span> <span class="n">i</span><span class="o">)),</span> <span class="mi">1</span><span class="o">);</span>
            <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">i</span><span class="o">==</span><span class="mi">3</span> <span class="o">||</span> <span class="n">i</span><span class="o">==</span><span class="mi">4</span><span class="o">)</span> <span class="n">second</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="nc">Math</span><span class="o">.</span><span class="na">pow</span><span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">dartResult</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">,</span> <span class="n">i</span><span class="o">)),</span> <span class="mi">1</span><span class="o">);</span>
            <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">i</span><span class="o">==</span><span class="mi">5</span> <span class="o">||</span> <span class="n">i</span><span class="o">==</span><span class="mi">6</span> <span class="o">||</span> <span class="n">i</span><span class="o">==</span><span class="mi">7</span><span class="o">)</span> <span class="n">third</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="nc">Math</span><span class="o">.</span><span class="na">pow</span><span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">dartResult</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">,</span> <span class="n">i</span><span class="o">)),</span> <span class="mi">1</span><span class="o">);</span>
        <span class="o">}</span>
    <span class="o">}</span>
    <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">dartResult</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">)</span> <span class="o">==</span> <span class="sc">'D'</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">if</span><span class="o">(</span><span class="n">dartResult</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">)</span> <span class="o">==</span> <span class="sc">'^'</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="n">i</span><span class="o">==</span><span class="mi">1</span><span class="o">)</span> <span class="n">first</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="nc">Math</span><span class="o">.</span><span class="na">pow</span><span class="o">(</span><span class="mi">10</span><span class="o">,</span> <span class="mi">2</span><span class="o">);</span>
            <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">i</span><span class="o">==</span><span class="mi">3</span> <span class="o">||</span> <span class="n">i</span><span class="o">==</span><span class="mi">4</span><span class="o">)</span> <span class="n">second</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="nc">Math</span><span class="o">.</span><span class="na">pow</span><span class="o">(</span><span class="mi">10</span><span class="o">,</span> <span class="mi">2</span><span class="o">);</span>
            <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">i</span><span class="o">==</span><span class="mi">5</span> <span class="o">||</span> <span class="n">i</span><span class="o">==</span><span class="mi">6</span> <span class="o">||</span> <span class="n">i</span><span class="o">==</span><span class="mi">7</span><span class="o">)</span> <span class="n">third</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="nc">Math</span><span class="o">.</span><span class="na">pow</span><span class="o">(</span><span class="mi">10</span><span class="o">,</span> <span class="mi">2</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="k">else</span> <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="n">i</span><span class="o">==</span><span class="mi">1</span><span class="o">)</span> <span class="n">first</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="nc">Math</span><span class="o">.</span><span class="na">pow</span><span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">dartResult</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">,</span> <span class="n">i</span><span class="o">)),</span> <span class="mi">2</span><span class="o">);</span>
            <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">i</span><span class="o">==</span><span class="mi">3</span> <span class="o">||</span> <span class="n">i</span><span class="o">==</span><span class="mi">4</span><span class="o">)</span> <span class="n">second</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="nc">Math</span><span class="o">.</span><span class="na">pow</span><span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">dartResult</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">,</span> <span class="n">i</span><span class="o">)),</span> <span class="mi">2</span><span class="o">);</span>
            <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">i</span><span class="o">==</span><span class="mi">5</span> <span class="o">||</span> <span class="n">i</span><span class="o">==</span><span class="mi">6</span> <span class="o">||</span> <span class="n">i</span><span class="o">==</span><span class="mi">7</span><span class="o">)</span> <span class="n">third</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="nc">Math</span><span class="o">.</span><span class="na">pow</span><span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">dartResult</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">,</span> <span class="n">i</span><span class="o">)),</span> <span class="mi">2</span><span class="o">);</span>
        <span class="o">}</span>
    <span class="o">}</span>
    <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">dartResult</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">)</span> <span class="o">==</span> <span class="sc">'T'</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">if</span><span class="o">(</span><span class="n">dartResult</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">)</span> <span class="o">==</span> <span class="sc">'^'</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="n">i</span><span class="o">==</span><span class="mi">1</span><span class="o">)</span> <span class="n">first</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="nc">Math</span><span class="o">.</span><span class="na">pow</span><span class="o">(</span><span class="mi">10</span><span class="o">,</span> <span class="mi">3</span><span class="o">);</span>
            <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">i</span><span class="o">==</span><span class="mi">3</span> <span class="o">||</span> <span class="n">i</span><span class="o">==</span><span class="mi">4</span><span class="o">)</span> <span class="n">second</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="nc">Math</span><span class="o">.</span><span class="na">pow</span><span class="o">(</span><span class="mi">10</span><span class="o">,</span> <span class="mi">3</span><span class="o">);</span>
            <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">i</span><span class="o">==</span><span class="mi">5</span> <span class="o">||</span> <span class="n">i</span><span class="o">==</span><span class="mi">6</span> <span class="o">||</span> <span class="n">i</span><span class="o">==</span><span class="mi">7</span><span class="o">)</span> <span class="n">third</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="nc">Math</span><span class="o">.</span><span class="na">pow</span><span class="o">(</span><span class="mi">10</span><span class="o">,</span> <span class="mi">3</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="k">else</span> <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="n">i</span><span class="o">==</span><span class="mi">1</span><span class="o">)</span> <span class="n">first</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="nc">Math</span><span class="o">.</span><span class="na">pow</span><span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">dartResult</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">,</span> <span class="n">i</span><span class="o">)),</span> <span class="mi">3</span><span class="o">);</span>
            <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">i</span><span class="o">==</span><span class="mi">3</span> <span class="o">||</span> <span class="n">i</span><span class="o">==</span><span class="mi">4</span><span class="o">)</span> <span class="n">second</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="nc">Math</span><span class="o">.</span><span class="na">pow</span><span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">dartResult</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">,</span> <span class="n">i</span><span class="o">)),</span> <span class="mi">3</span><span class="o">);</span>
            <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">i</span><span class="o">==</span><span class="mi">5</span> <span class="o">||</span> <span class="n">i</span><span class="o">==</span><span class="mi">6</span> <span class="o">||</span> <span class="n">i</span><span class="o">==</span><span class="mi">7</span><span class="o">)</span> <span class="n">third</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="nc">Math</span><span class="o">.</span><span class="na">pow</span><span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">dartResult</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">,</span> <span class="n">i</span><span class="o">)),</span> <span class="mi">3</span><span class="o">);</span>
        <span class="o">}</span>
    <span class="o">}</span>
    <span class="c1">// 생략</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>스타상의 경우 첫번째, 두번째, 세번째 기회마다 적용되어야할 점수 계산이 다르다.</p>
<ul>
  <li>첫번째 기회일 경우 현재 점수 2배</li>
  <li>두번째, 세번째 기회일 경우 이전 점수와 현재 점수 2배</li>
</ul>

<p>스타상은 기회별로 2배씩 곱할 수 있도록, 아차상은 기회별로 -1를 곱하여 뺼 수 있도록 작성했다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
</pre></td><td class="rouge-code"><pre><span class="k">if</span><span class="o">(</span><span class="n">dartResult</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">)</span> <span class="o">==</span> <span class="sc">'*'</span><span class="o">)</span> <span class="o">{</span>
    <span class="k">if</span><span class="o">(</span><span class="n">i</span> <span class="o">==</span> <span class="mi">2</span><span class="o">)</span> <span class="n">first</span> <span class="o">*=</span> <span class="mi">2</span><span class="o">;</span>
    <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">i</span> <span class="o">==</span> <span class="mi">4</span> <span class="o">||</span> <span class="n">i</span> <span class="o">==</span> <span class="mi">5</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">first</span> <span class="o">*=</span> <span class="mi">2</span><span class="o">;</span>
        <span class="n">second</span> <span class="o">*=</span> <span class="mi">2</span><span class="o">;</span>
    <span class="o">}</span>
    <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">i</span><span class="o">==</span><span class="mi">6</span> <span class="o">||</span> <span class="n">i</span> <span class="o">==</span> <span class="mi">7</span> <span class="o">||</span> <span class="n">i</span> <span class="o">==</span> <span class="mi">8</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">second</span> <span class="o">*=</span> <span class="mi">2</span><span class="o">;</span>
        <span class="n">third</span> <span class="o">*=</span> <span class="mi">2</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
<span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">dartResult</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">)</span> <span class="o">==</span> <span class="sc">'#'</span><span class="o">)</span> <span class="o">{</span>
    <span class="k">if</span><span class="o">(</span><span class="n">i</span> <span class="o">==</span> <span class="mi">2</span><span class="o">)</span> <span class="n">first</span> <span class="o">*=</span> <span class="o">-</span><span class="mi">1</span><span class="o">;</span>
    <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">i</span> <span class="o">==</span> <span class="mi">4</span> <span class="o">||</span> <span class="n">i</span> <span class="o">==</span> <span class="mi">5</span><span class="o">)</span> <span class="n">second</span> <span class="o">*=</span> <span class="o">-</span><span class="mi">1</span><span class="o">;</span>
    <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">i</span><span class="o">==</span><span class="mi">6</span> <span class="o">||</span> <span class="n">i</span> <span class="o">==</span> <span class="mi">7</span> <span class="o">||</span> <span class="n">i</span> <span class="o">==</span> <span class="mi">8</span><span class="o">)</span> <span class="n">third</span> <span class="o">*=</span> <span class="o">-</span><span class="mi">1</span><span class="o">;</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><br /></p>

<h3 id="작성-코드">작성 코드</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
</pre></td><td class="rouge-code"><pre><span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">solution</span><span class="o">(</span><span class="nc">String</span> <span class="n">dartResult</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">first</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">second</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">third</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="n">dartResult</span> <span class="o">=</span> <span class="n">dartResult</span><span class="o">.</span><span class="na">replace</span><span class="o">(</span><span class="s">"10"</span><span class="o">,</span> <span class="s">"^"</span><span class="o">);</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">dartResult</span><span class="o">.</span><span class="na">length</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="n">dartResult</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">)</span> <span class="o">==</span> <span class="sc">'S'</span><span class="o">)</span> <span class="o">{</span>
                <span class="k">if</span><span class="o">(</span><span class="n">dartResult</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">)</span> <span class="o">==</span> <span class="sc">'^'</span><span class="o">)</span> <span class="o">{</span>
                    <span class="k">if</span><span class="o">(</span><span class="n">i</span><span class="o">==</span><span class="mi">1</span><span class="o">)</span> <span class="n">first</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="nc">Math</span><span class="o">.</span><span class="na">pow</span><span class="o">(</span><span class="mi">10</span><span class="o">,</span> <span class="mi">1</span><span class="o">);</span>
                    <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">i</span><span class="o">==</span><span class="mi">3</span> <span class="o">||</span> <span class="n">i</span><span class="o">==</span><span class="mi">4</span><span class="o">)</span> <span class="n">second</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="nc">Math</span><span class="o">.</span><span class="na">pow</span><span class="o">(</span><span class="mi">10</span><span class="o">,</span> <span class="mi">1</span><span class="o">);</span>
                    <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">i</span><span class="o">==</span><span class="mi">5</span> <span class="o">||</span> <span class="n">i</span><span class="o">==</span><span class="mi">6</span> <span class="o">||</span> <span class="n">i</span><span class="o">==</span><span class="mi">7</span><span class="o">)</span> <span class="n">third</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="nc">Math</span><span class="o">.</span><span class="na">pow</span><span class="o">(</span><span class="mi">10</span><span class="o">,</span> <span class="mi">1</span><span class="o">);</span>
                <span class="o">}</span>
                <span class="k">else</span><span class="o">{</span>
                    <span class="k">if</span><span class="o">(</span><span class="n">i</span><span class="o">==</span><span class="mi">1</span><span class="o">)</span> <span class="n">first</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="nc">Math</span><span class="o">.</span><span class="na">pow</span><span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">dartResult</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">,</span> <span class="n">i</span><span class="o">)),</span> <span class="mi">1</span><span class="o">);</span>
                    <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">i</span><span class="o">==</span><span class="mi">3</span> <span class="o">||</span> <span class="n">i</span><span class="o">==</span><span class="mi">4</span><span class="o">)</span> <span class="n">second</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="nc">Math</span><span class="o">.</span><span class="na">pow</span><span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">dartResult</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">,</span> <span class="n">i</span><span class="o">)),</span> <span class="mi">1</span><span class="o">);</span>
                    <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">i</span><span class="o">==</span><span class="mi">5</span> <span class="o">||</span> <span class="n">i</span><span class="o">==</span><span class="mi">6</span> <span class="o">||</span> <span class="n">i</span><span class="o">==</span><span class="mi">7</span><span class="o">)</span> <span class="n">third</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="nc">Math</span><span class="o">.</span><span class="na">pow</span><span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">dartResult</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">,</span> <span class="n">i</span><span class="o">)),</span> <span class="mi">1</span><span class="o">);</span>
                <span class="o">}</span>
            <span class="o">}</span>
            <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">dartResult</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">)</span> <span class="o">==</span> <span class="sc">'D'</span><span class="o">)</span> <span class="o">{</span>
                <span class="k">if</span><span class="o">(</span><span class="n">dartResult</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">)</span> <span class="o">==</span> <span class="sc">'^'</span><span class="o">)</span> <span class="o">{</span>
                    <span class="k">if</span><span class="o">(</span><span class="n">i</span><span class="o">==</span><span class="mi">1</span><span class="o">)</span> <span class="n">first</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="nc">Math</span><span class="o">.</span><span class="na">pow</span><span class="o">(</span><span class="mi">10</span><span class="o">,</span> <span class="mi">2</span><span class="o">);</span>
                    <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">i</span><span class="o">==</span><span class="mi">3</span> <span class="o">||</span> <span class="n">i</span><span class="o">==</span><span class="mi">4</span><span class="o">)</span> <span class="n">second</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="nc">Math</span><span class="o">.</span><span class="na">pow</span><span class="o">(</span><span class="mi">10</span><span class="o">,</span> <span class="mi">2</span><span class="o">);</span>
                    <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">i</span><span class="o">==</span><span class="mi">5</span> <span class="o">||</span> <span class="n">i</span><span class="o">==</span><span class="mi">6</span> <span class="o">||</span> <span class="n">i</span><span class="o">==</span><span class="mi">7</span><span class="o">)</span> <span class="n">third</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="nc">Math</span><span class="o">.</span><span class="na">pow</span><span class="o">(</span><span class="mi">10</span><span class="o">,</span> <span class="mi">2</span><span class="o">);</span>
                <span class="o">}</span>
                <span class="k">else</span> <span class="o">{</span>
                    <span class="k">if</span><span class="o">(</span><span class="n">i</span><span class="o">==</span><span class="mi">1</span><span class="o">)</span> <span class="n">first</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="nc">Math</span><span class="o">.</span><span class="na">pow</span><span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">dartResult</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">,</span> <span class="n">i</span><span class="o">)),</span> <span class="mi">2</span><span class="o">);</span>
                    <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">i</span><span class="o">==</span><span class="mi">3</span> <span class="o">||</span> <span class="n">i</span><span class="o">==</span><span class="mi">4</span><span class="o">)</span> <span class="n">second</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="nc">Math</span><span class="o">.</span><span class="na">pow</span><span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">dartResult</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">,</span> <span class="n">i</span><span class="o">)),</span> <span class="mi">2</span><span class="o">);</span>
                    <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">i</span><span class="o">==</span><span class="mi">5</span> <span class="o">||</span> <span class="n">i</span><span class="o">==</span><span class="mi">6</span> <span class="o">||</span> <span class="n">i</span><span class="o">==</span><span class="mi">7</span><span class="o">)</span> <span class="n">third</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="nc">Math</span><span class="o">.</span><span class="na">pow</span><span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">dartResult</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">,</span> <span class="n">i</span><span class="o">)),</span> <span class="mi">2</span><span class="o">);</span>
                <span class="o">}</span>
            <span class="o">}</span>
            <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">dartResult</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">)</span> <span class="o">==</span> <span class="sc">'T'</span><span class="o">)</span> <span class="o">{</span>
                <span class="k">if</span><span class="o">(</span><span class="n">dartResult</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">)</span> <span class="o">==</span> <span class="sc">'^'</span><span class="o">)</span> <span class="o">{</span>
                    <span class="k">if</span><span class="o">(</span><span class="n">i</span><span class="o">==</span><span class="mi">1</span><span class="o">)</span> <span class="n">first</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="nc">Math</span><span class="o">.</span><span class="na">pow</span><span class="o">(</span><span class="mi">10</span><span class="o">,</span> <span class="mi">3</span><span class="o">);</span>
                    <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">i</span><span class="o">==</span><span class="mi">3</span> <span class="o">||</span> <span class="n">i</span><span class="o">==</span><span class="mi">4</span><span class="o">)</span> <span class="n">second</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="nc">Math</span><span class="o">.</span><span class="na">pow</span><span class="o">(</span><span class="mi">10</span><span class="o">,</span> <span class="mi">3</span><span class="o">);</span>
                    <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">i</span><span class="o">==</span><span class="mi">5</span> <span class="o">||</span> <span class="n">i</span><span class="o">==</span><span class="mi">6</span> <span class="o">||</span> <span class="n">i</span><span class="o">==</span><span class="mi">7</span><span class="o">)</span> <span class="n">third</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="nc">Math</span><span class="o">.</span><span class="na">pow</span><span class="o">(</span><span class="mi">10</span><span class="o">,</span> <span class="mi">3</span><span class="o">);</span>
                <span class="o">}</span>
                <span class="k">else</span> <span class="o">{</span>
                    <span class="k">if</span><span class="o">(</span><span class="n">i</span><span class="o">==</span><span class="mi">1</span><span class="o">)</span> <span class="n">first</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="nc">Math</span><span class="o">.</span><span class="na">pow</span><span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">dartResult</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">,</span> <span class="n">i</span><span class="o">)),</span> <span class="mi">3</span><span class="o">);</span>
                    <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">i</span><span class="o">==</span><span class="mi">3</span> <span class="o">||</span> <span class="n">i</span><span class="o">==</span><span class="mi">4</span><span class="o">)</span> <span class="n">second</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="nc">Math</span><span class="o">.</span><span class="na">pow</span><span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">dartResult</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">,</span> <span class="n">i</span><span class="o">)),</span> <span class="mi">3</span><span class="o">);</span>
                    <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">i</span><span class="o">==</span><span class="mi">5</span> <span class="o">||</span> <span class="n">i</span><span class="o">==</span><span class="mi">6</span> <span class="o">||</span> <span class="n">i</span><span class="o">==</span><span class="mi">7</span><span class="o">)</span> <span class="n">third</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="nc">Math</span><span class="o">.</span><span class="na">pow</span><span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">dartResult</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">,</span> <span class="n">i</span><span class="o">)),</span> <span class="mi">3</span><span class="o">);</span>
                <span class="o">}</span>
            <span class="o">}</span>
            <span class="k">if</span><span class="o">(</span><span class="n">dartResult</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">)</span> <span class="o">==</span> <span class="sc">'*'</span><span class="o">)</span> <span class="o">{</span>
                <span class="k">if</span><span class="o">(</span><span class="n">i</span> <span class="o">==</span> <span class="mi">2</span><span class="o">)</span> <span class="n">first</span> <span class="o">*=</span> <span class="mi">2</span><span class="o">;</span>
                <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">i</span> <span class="o">==</span> <span class="mi">4</span> <span class="o">||</span> <span class="n">i</span> <span class="o">==</span> <span class="mi">5</span><span class="o">)</span> <span class="o">{</span>
                    <span class="n">first</span> <span class="o">*=</span> <span class="mi">2</span><span class="o">;</span>
                    <span class="n">second</span> <span class="o">*=</span> <span class="mi">2</span><span class="o">;</span>
                <span class="o">}</span>
                <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">i</span><span class="o">==</span><span class="mi">6</span> <span class="o">||</span> <span class="n">i</span> <span class="o">==</span> <span class="mi">7</span> <span class="o">||</span> <span class="n">i</span> <span class="o">==</span> <span class="mi">8</span><span class="o">)</span> <span class="o">{</span>
                    <span class="n">second</span> <span class="o">*=</span> <span class="mi">2</span><span class="o">;</span>
                    <span class="n">third</span> <span class="o">*=</span> <span class="mi">2</span><span class="o">;</span>
                <span class="o">}</span>
            <span class="o">}</span>
            <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">dartResult</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">)</span> <span class="o">==</span> <span class="sc">'#'</span><span class="o">)</span> <span class="o">{</span>
                <span class="k">if</span><span class="o">(</span><span class="n">i</span> <span class="o">==</span> <span class="mi">2</span><span class="o">)</span> <span class="n">first</span> <span class="o">*=</span> <span class="o">-</span><span class="mi">1</span><span class="o">;</span>
                <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">i</span> <span class="o">==</span> <span class="mi">4</span> <span class="o">||</span> <span class="n">i</span> <span class="o">==</span> <span class="mi">5</span><span class="o">)</span> <span class="n">second</span> <span class="o">*=</span> <span class="o">-</span><span class="mi">1</span><span class="o">;</span>
                <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">i</span><span class="o">==</span><span class="mi">6</span> <span class="o">||</span> <span class="n">i</span> <span class="o">==</span> <span class="mi">7</span> <span class="o">||</span> <span class="n">i</span> <span class="o">==</span> <span class="mi">8</span><span class="o">)</span> <span class="n">third</span> <span class="o">*=</span> <span class="o">-</span><span class="mi">1</span><span class="o">;</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="n">answer</span> <span class="o">=</span> <span class="n">first</span> <span class="o">+</span> <span class="n">second</span> <span class="o">+</span> <span class="n">third</span><span class="o">;</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="회고">회고</h3>
<ul>
  <li>조건들을 그룹화하여 같은 코드를 줄일 수 있는 능력이 정말 중요하다고 느낀 문제였다. 거진 60줄의 반복문 코드를 작성했는데 더 간결하고 중복코드 없이 작성할 수 있도록 노력해야겠다고 느꼈다.</li>
</ul>]]></content><author><name>lango</name></author><category term="Java" /><category term="blog" /><category term="algorithm" /><category term="study" /><category term="java" /><category term="programmers" /><summary type="html"><![CDATA[level 1 - 다트 게임]]></summary></entry><entry><title type="html">[알고리즘 스터디 - Java] 프로그래머스(level1) - 예산</title><link href="http://localhost:4000/java/34-post/" rel="alternate" type="text/html" title="[알고리즘 스터디 - Java] 프로그래머스(level1) - 예산" /><published>2022-08-25T00:00:00+09:00</published><updated>2022-08-25T00:00:00+09:00</updated><id>http://localhost:4000/java/34-post</id><content type="html" xml:base="http://localhost:4000/java/34-post/"><![CDATA[<p><br /></p>

<center><img src="/assets/images/programmers/20220825_01.png" width="600" /></center>

<blockquote>
  <p>Input-1 <br />
<strong>d = [1, 3, 2, 5, 4]</strong> <br />
<strong>budget = 9</strong> <br />
Output-1 <br />
<strong>3</strong></p>
</blockquote>

<blockquote>
  <p>Input-2 <br />
<strong>d = [2, 2, 3, 3]</strong> <br />
<strong>budget = 10</strong> <br />
Output-2 <br />
<strong>4</strong></p>
</blockquote>

<p><br /></p>

<h3 id="문제-풀이">문제 풀이</h3>
<p>부서별 신청금액 배열(d)의 원소별로 예산(budget)을 어떻게 나눠줄 수 있을까?</p>
<ul>
  <li><strong>budget에서 d의 원소별로 뺼셈</strong>하여 양수인지 음수인지를 검증하면 된다.</li>
</ul>

<p>먼저 budget에서 d 중의 작은 수부터 뺼셈할 수 있도록 d를 오름차순으로 정렬하자.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="nc">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">d</span><span class="o">);</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>그리고 d의 원소별로 순회하며 budget에 뺄셈을 해준다. <br />
순회하며 <strong>음수가 된다면 예산을 다 쓴것이라 판단</strong>하고 break문으로 탈출하도록 작성하였다. <br />
예산이 0보다 크거나 같으면 모든 부서에 예산을 지원해줄 수 있다고 생각하면 된다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
</pre></td><td class="rouge-code"><pre><span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">d</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
    <span class="n">budget</span> <span class="o">-=</span> <span class="n">d</span><span class="o">[</span><span class="n">i</span><span class="o">];</span>
    <span class="k">if</span><span class="o">(</span><span class="n">budget</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">answer</span> <span class="o">=</span> <span class="n">i</span><span class="o">;</span> 
        <span class="k">break</span><span class="o">;</span>
    <span class="o">}</span>
    <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">budget</span> <span class="o">&gt;=</span> <span class="mi">0</span><span class="o">)</span> <span class="n">answer</span> <span class="o">=</span> <span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">;</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>한 번 예시를 들어보자.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="rouge-code"><pre>d = [1, 3, 2, 5, 4], budget = 9 라고 하자.
i=0, budget = 9-1 = 8
i=1, budget = 8-2 = 6
i=2, budget = 6-3 = 3
i=3, budget = 3-4 = -1 

d = [2, 2, 3, 3], budget = 10 라고 하자.
i=0, budget = 10-2 = 8
i=1, budget = 8-2 = 6
i=2, budget = 6-3 = 3
i=3, budget = 3-3 = 0
</pre></td></tr></tbody></table></code></pre></div></div>

<p>위와 같이 음수라면 음수까지의 i만큼의 부서개수만큼 예산을 지원할 수 있고 <br />
반복문을 모두 순회하여 0보다 크거나 같은 budget이 된다면 모든 부서를 지원할 수 있다고 보면 된다.</p>

<p><br /></p>

<h3 id="작성-코드">작성 코드</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">Scanner</span> <span class="n">sc</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Scanner</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
        <span class="kt">int</span><span class="o">[]</span> <span class="n">d</span> <span class="o">=</span> <span class="o">{</span><span class="mi">1</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">5</span><span class="o">,</span> <span class="mi">4</span><span class="o">};</span>
        <span class="c1">// int[] d = {2, 2, 3, 3};</span>
        <span class="kt">int</span> <span class="n">budget</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
        <span class="n">solution</span><span class="o">(</span><span class="n">d</span><span class="o">,</span> <span class="n">budget</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">d</span><span class="o">,</span> <span class="kt">int</span> <span class="n">budget</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="nc">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">d</span><span class="o">);</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">d</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="n">budget</span> <span class="o">-=</span> <span class="n">d</span><span class="o">[</span><span class="n">i</span><span class="o">];</span>
            <span class="k">if</span><span class="o">(</span><span class="n">budget</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">answer</span> <span class="o">=</span> <span class="n">i</span><span class="o">;</span> 
                <span class="k">break</span><span class="o">;</span>
            <span class="o">}</span>
            <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">budget</span> <span class="o">&gt;=</span> <span class="mi">0</span><span class="o">)</span> <span class="n">answer</span> <span class="o">=</span> <span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="회고">회고</h3>
<ul>
  <li>반복문 내에서 어떤 로직이 일이날지 생각하고 노트에 그린 내용르 통해 코드를 작성하니 훨씬 간결하고 빠르게 풀 수 있었다.</li>
</ul>]]></content><author><name>lango</name></author><category term="Java" /><category term="blog" /><category term="algorithm" /><category term="study" /><category term="java" /><category term="programmers" /><summary type="html"><![CDATA[level 1 - 예산]]></summary></entry><entry><title type="html">[알고리즘 스터디 - Java] 프로그래머스(level1) - 비밀 지도</title><link href="http://localhost:4000/java/36-post/" rel="alternate" type="text/html" title="[알고리즘 스터디 - Java] 프로그래머스(level1) - 비밀 지도" /><published>2022-08-25T00:00:00+09:00</published><updated>2022-08-25T00:00:00+09:00</updated><id>http://localhost:4000/java/36-post</id><content type="html" xml:base="http://localhost:4000/java/36-post/"><![CDATA[<p><br /></p>

<center><img src="/assets/images/programmers/20220825_03-1.png" width="700" /></center>
<p><br /></p>
<center><img src="/assets/images/programmers/20220825_03-2.png" width="300" /></center>

<blockquote>
  <p>입출력 예제</p>
</blockquote>
<left><img src="/assets/images/programmers/20220825_03-3.png" width="400" /></left>

<h3 id="문제-풀이">문제 풀이</h3>
<p>두개의 배열은 모두 주어진 n만큼의 길이를 가지고 있다. <br /> 
두개의 배열을 순회하며 arr1, arr2의 원소마다 2진수로 변환하면 되는데 <strong>2진수로 변환하고 다시 10진수로 변환하는 과정을 잘 고려</strong>하며 접근해야 한다.</p>

<p>먼저 반복문에서 두 배열의 원소를 2진수로 변환하여 합쳐보자.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="rouge-code"><pre><span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
    <span class="nc">String</span> <span class="n">num1</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">toBinaryString</span><span class="o">(</span><span class="n">arr1</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
    <span class="nc">String</span> <span class="n">num2</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">toBinaryString</span><span class="o">(</span><span class="n">arr2</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
    <span class="nc">String</span> <span class="n">sum</span> <span class="o">=</span> <span class="nc">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">"%0"</span><span class="o">+</span><span class="n">n</span><span class="o">+</span><span class="s">"d"</span><span class="o">,</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">num1</span><span class="o">)+</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">num2</span><span class="o">));</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Integer.toBinaryString() 메서드로 10진수를 2진수로 변환할 수 있다. <br />
(참고로 Integer.toString() 메서드로도 2진수 변환이 가능하다.)</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
</pre></td><td class="rouge-code"><pre><span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
    <span class="c1">// 생략</span>
    <span class="n">row_res</span> <span class="o">=</span> <span class="s">""</span><span class="o">;</span>
    <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">j</span><span class="o">&lt;</span><span class="n">sum</span><span class="o">.</span><span class="na">length</span><span class="o">();</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
        <span class="k">if</span><span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">sum</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="n">j</span><span class="o">,</span> <span class="n">j</span><span class="o">+</span><span class="mi">1</span><span class="o">))</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="o">)</span> <span class="n">row_res</span> <span class="o">+=</span> <span class="s">"#"</span><span class="o">;</span>
        <span class="k">else</span> <span class="n">row_res</span> <span class="o">+=</span> <span class="s">" "</span><span class="o">;</span>
    <span class="o">}</span>
    <span class="n">answer</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="n">row_res</span><span class="o">;</span>   
<span class="o">}</span>
<span class="n">answer</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="n">row_res</span><span class="o">;</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>그리고 합친 원소별로 중첩하여 순회하면서 각 자리가 0이면 공백값을 0보다 크면 #을 넣은 문자열을 배열에 추가하였다.</p>

<p>두 배열의 원소별로 num1과 num2로 저정하고 sum으로 합치는 과정에서 int형으로 변환하였는데 <strong>테스트케이스 2, 6에서 런타임에러가 발생</strong>하였다. <br />
int형의 범위를 벗어나는 것이라 생각했고, <strong>long형으로 변환</strong>하도록 작성하니 테스트케이스 2, 6 모두 정상적으로 통과하였다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="c1">// num1 + num2의 값을 long으로 변환</span>
<span class="nc">String</span> <span class="n">sum</span> <span class="o">=</span> <span class="nc">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">"%0"</span><span class="o">+</span><span class="n">n</span><span class="o">+</span><span class="s">"d"</span><span class="o">,</span> <span class="nc">Long</span><span class="o">.</span><span class="na">parseLong</span><span class="o">(</span><span class="n">num1</span><span class="o">)+</span><span class="nc">Long</span><span class="o">.</span><span class="na">parseLong</span><span class="o">(</span><span class="n">num2</span><span class="o">));</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><br /></p>

<h3 id="작성-코드">작성 코드</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">Scanner</span> <span class="n">sc</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Scanner</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
        <span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
        <span class="kt">int</span><span class="o">[]</span> <span class="n">arr1</span> <span class="o">=</span> <span class="o">{</span><span class="mi">9</span><span class="o">,</span><span class="mi">20</span><span class="o">,</span><span class="mi">28</span><span class="o">,</span><span class="mi">18</span><span class="o">,</span><span class="mi">11</span><span class="o">};</span>
        <span class="kt">int</span><span class="o">[]</span> <span class="n">arr2</span> <span class="o">=</span> <span class="o">{</span><span class="mi">30</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="mi">21</span><span class="o">,</span><span class="mi">17</span><span class="o">,</span><span class="mi">28</span><span class="o">};</span>
        <span class="c1">// int[] arr1 = {46, 33, 33, 22, 31, 50};</span>
        <span class="c1">// int[] arr2 = {27, 56, 19, 14, 14, 10};</span>
        <span class="kt">long</span> <span class="n">start</span> <span class="o">=</span> <span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        <span class="n">solution</span><span class="o">(</span><span class="n">n</span><span class="o">,</span> <span class="n">arr1</span><span class="o">,</span> <span class="n">arr2</span><span class="o">);</span>
        <span class="kt">long</span> <span class="n">end</span> <span class="o">=</span> <span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"\n수행시간 = "</span> <span class="o">+</span> <span class="o">(</span><span class="n">end</span><span class="o">-</span><span class="n">start</span><span class="o">));</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="nc">String</span><span class="o">[]</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span> <span class="n">n</span><span class="o">,</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">arr1</span><span class="o">,</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">arr2</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">String</span><span class="o">[]</span> <span class="n">answer</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">String</span><span class="o">[</span><span class="n">n</span><span class="o">];</span>
        <span class="nc">String</span> <span class="n">row_res</span><span class="o">;</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="nc">String</span> <span class="n">num1</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">toBinaryString</span><span class="o">(</span><span class="n">arr1</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
            <span class="nc">String</span> <span class="n">num2</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">toBinaryString</span><span class="o">(</span><span class="n">arr2</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
            <span class="nc">String</span> <span class="n">sum</span> <span class="o">=</span> <span class="nc">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">"%0"</span><span class="o">+</span><span class="n">n</span><span class="o">+</span><span class="s">"d"</span><span class="o">,</span> <span class="nc">Long</span><span class="o">.</span><span class="na">parseLong</span><span class="o">(</span><span class="n">num1</span><span class="o">)+</span><span class="nc">Long</span><span class="o">.</span><span class="na">parseLong</span><span class="o">(</span><span class="n">num2</span><span class="o">));</span>
            <span class="n">row_res</span> <span class="o">=</span> <span class="s">""</span><span class="o">;</span>
            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">j</span><span class="o">&lt;</span><span class="n">sum</span><span class="o">.</span><span class="na">length</span><span class="o">();</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
                <span class="k">if</span><span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">sum</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="n">j</span><span class="o">,</span> <span class="n">j</span><span class="o">+</span><span class="mi">1</span><span class="o">))</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="o">)</span> <span class="n">row_res</span> <span class="o">+=</span> <span class="s">"#"</span><span class="o">;</span>
                <span class="k">else</span> <span class="n">row_res</span> <span class="o">+=</span> <span class="s">" "</span><span class="o">;</span>
            <span class="o">}</span>
            <span class="n">answer</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="n">row_res</span><span class="o">;</span>   
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="회고">회고</h3>
<ul>
  <li>Integer.toString() 메서드의 인자를 넣어 진수 변환을 할 수 있음을 처음 알게 되었다. 또한 Integer.toBinaryString() 메서드에 대해서도 공부할 수 있었다.</li>
  <li>int형과 long형의 제공되는 범위를 적절히 활용해야 한다고 느꼈다.</li>
</ul>]]></content><author><name>lango</name></author><category term="Java" /><category term="blog" /><category term="algorithm" /><category term="study" /><category term="java" /><category term="programmers" /><summary type="html"><![CDATA[level 1 - 비밀 지도]]></summary></entry><entry><title type="html">[알고리즘 스터디 - Java] 프로그래머스(level1) - 가운데 글자 가져오기</title><link href="http://localhost:4000/java/33-post/" rel="alternate" type="text/html" title="[알고리즘 스터디 - Java] 프로그래머스(level1) - 가운데 글자 가져오기" /><published>2022-08-24T00:00:00+09:00</published><updated>2022-08-24T00:00:00+09:00</updated><id>http://localhost:4000/java/33-post</id><content type="html" xml:base="http://localhost:4000/java/33-post/"><![CDATA[<p><br /></p>

<center><img src="/assets/images/programmers/20220824_02.png" width="600" /></center>

<blockquote>
  <p>Input-1 <br />
abced <br />
Output-1 <br />
c</p>
</blockquote>

<blockquote>
  <p>Input-2 <br />
abcd <br />
Output-2 <br />
bc</p>
</blockquote>

<p><br /></p>

<h3 id="문제-풀이">문제 풀이</h3>
<p>주어진 문자열의 길이가 홀수냐 짝수냐에 따라 검증방식을 다르게 접근해야 한다. <br /></p>

<p><strong>홀수일 경우</strong></p>
<ul>
  <li>가운데 문자를 반환한다.</li>
  <li>문자열을 순회하며 주어진 문자열의 길이를 반으로 나눈 수와 같은 수를 찾으면 된다.</li>
</ul>

<p><strong>짝수일 경우</strong></p>
<ul>
  <li>가운데 2개의 문자를 반환한다.</li>
  <li>문자열을 반으로 나눈 수의 인덱스와 인덱스+1의 수를 찾으면 된다.</li>
</ul>

<p><br /></p>

<h3 id="작성-코드">작성 코드</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>
<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="nc">String</span> <span class="nf">solution</span><span class="o">(</span><span class="nc">String</span> <span class="n">s</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">String</span> <span class="n">answer</span> <span class="o">=</span> <span class="s">""</span><span class="o">;</span>
        <span class="k">if</span><span class="o">(</span><span class="n">s</span><span class="o">.</span><span class="na">length</span><span class="o">()%</span><span class="mi">2</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=(</span><span class="n">s</span><span class="o">.</span><span class="na">length</span><span class="o">()/</span><span class="mi">2</span><span class="o">)-</span><span class="mi">1</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;=(</span><span class="n">s</span><span class="o">.</span><span class="na">length</span><span class="o">()/</span><span class="mi">2</span><span class="o">);</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
                <span class="n">answer</span> <span class="o">+=</span> <span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="k">else</span> <span class="o">{</span>
            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">s</span><span class="o">.</span><span class="na">length</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
                <span class="k">if</span><span class="o">(</span><span class="n">i</span> <span class="o">==</span> <span class="nc">Math</span><span class="o">.</span><span class="na">round</span><span class="o">(</span><span class="n">s</span><span class="o">.</span><span class="na">length</span><span class="o">()/</span><span class="mi">2</span><span class="o">))</span> <span class="n">answer</span> <span class="o">+=</span> <span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="회고">회고</h3>
<ul>
  <li>무작정 풀이를 위한 코드보다 간결하게 작성할 수 있는지도 함께 고려할 수 있는 능력을 길러야 함을 느꼈다.</li>
</ul>]]></content><author><name>lango</name></author><category term="Java" /><category term="blog" /><category term="algorithm" /><category term="study" /><category term="java" /><category term="programmers" /><summary type="html"><![CDATA[level 1 - 가운데 글자 가져오기]]></summary></entry></feed>