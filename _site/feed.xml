<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2022-08-05T00:30:24+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">lango’s DevLog</title><subtitle>developer</subtitle><author><name>lango</name></author><entry><title type="html">[알고리즘 스터디 - Java] 백준 1157번</title><link href="http://localhost:4000/java/20-post/" rel="alternate" type="text/html" title="[알고리즘 스터디 - Java] 백준 1157번" /><published>2022-08-05T00:00:00+09:00</published><updated>2022-08-05T00:00:00+09:00</updated><id>http://localhost:4000/java/20-post</id><content type="html" xml:base="http://localhost:4000/java/20-post/"><![CDATA[<p><br /></p>

<center><img src="/assets/images/baekjoon/1157.png" /></center>

<blockquote>
  <p>Input-1 <br />
Mississipi <br />
Output-1 <br />
?</p>
</blockquote>

<blockquote>
  <p>Input-2 <br />
zZa <br />
Output-2 <br />
Z</p>
</blockquote>

<blockquote>
  <p>Input-3 <br />
baaa <br />
Output-3 <br />
A</p>
</blockquote>

<p><br /></p>

<h3 id="문제-풀이">문제 풀이</h3>
<p>알파벳 대소문자로된 단어가 주어지면 해당 단어의 범위는 아래와 같다.</p>
<ul>
  <li>a~z 또는 A~Z</li>
</ul>

<p>이 문제의 핵심은 <strong>문자의 인코딩 값을 다루는 것</strong>이다.</p>

<p>먼저 각 알파벳 별로 사용된 빈도수를 측정하기 위한 배열을 선언한다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="kt">int</span><span class="o">[]</span> <span class="n">alph_list</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="mi">26</span><span class="o">];</span> <span class="c1">// 알파벳은 총 26개</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>그리고 단어를 입력받는데 대소문자는 구분하지 않으니 
대문자이거나 소문자이거나 같은 위치의 배열 값을 증가시켜야 한다.</p>
<ul>
  <li>입력 단어가 C든 c든 alph_list에서는 c의 자리인 2번 원소 값을 증가시켜야 한다.</li>
</ul>

<p><strong>어떻게 대소문자 구분없이 같은 원소에 접근할 수 있을까?</strong><br />
주어진 단어를 아스키코드로 변환하여 접근해야 한다.</p>
<ul>
  <li>소문자인 a~z는 97~122이고 대문자인 A~Z는 65~90이다.</li>
</ul>

<p>만약 대문자 C를 입력받았다면 C를 아스키코드로 변환하면 67이기에 65를 빼면 2이다.
또한 소문자 c를 입력받았다면 c를 아스키코드로 변환하면 99이고 97을 빼면 2가 된다.
2는 alph_list에서 2 원소값을 담당하고 있지 않은가..!</p>

<p>그렇게 주어진 단어를 아스키 코드로 변환하여 
대문자면 65, 소문자면 97를 뺀 값으로 alph_list 배열의 원소로 접근할 수 있다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre><span class="nc">String</span> <span class="n">str</span> <span class="o">=</span> <span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">();</span> <span class="c1">// 입력받은 단어</span>
<span class="c1">// 1. 대문자일 경우 주어진 단어에서 65를 뺀 값으로 원소에 접근하여 증가시킨다.</span>
<span class="c1">// 2. 소문자일 경우 97을 뺀 값으로 원소에 접근하여 증가시킨다.</span>
<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">str</span><span class="o">.</span><span class="na">length</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
    <span class="k">if</span><span class="o">(</span><span class="n">str</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">)&gt;=</span><span class="mi">65</span> <span class="o">&amp;&amp;</span> <span class="n">str</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">)&lt;=</span><span class="mi">90</span><span class="o">)</span> <span class="n">alph_list</span><span class="o">[</span><span class="n">str</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">)-</span><span class="mi">65</span><span class="o">]</span> <span class="o">+=</span> <span class="mi">1</span><span class="o">;</span>
    <span class="k">else</span> <span class="n">alph_list</span><span class="o">[</span><span class="n">str</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">)-</span><span class="mi">97</span><span class="o">]</span> <span class="o">+=</span> <span class="mi">1</span><span class="o">;</span>     
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>주어진 단어를 통해 알파벳 배열에서의 사용 빈도수를 측정했으니 
해당 배열들의 <strong>원소값을 비교하여 가장 큰 값을 가진 원소</strong>를 찾아야 한다.
기존에 알고 있던 배열에서의 최댓값 구하는 로직을 그대로 적용하였다.</p>

<p>가장 큰 값을 가진 원소의 인덱스를 찾으면 대문자로 출력해야 하니 
해당 인덱스에 65를 더하고 char형으로 파싱하여 대문자로 출력할 수 있다.</p>

<p>여기서 만약 가장 큰 값(max)이 2개 이상이라면 ?를 출력할 수 있도록 작성하였다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
</pre></td><td class="rouge-code"><pre><span class="kt">int</span> <span class="n">max</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
<span class="kt">char</span> <span class="n">result</span> <span class="o">=</span> <span class="sc">'?'</span><span class="o">;</span>
<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">j</span><span class="o">&lt;</span><span class="n">alph_list</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
    <span class="k">if</span> <span class="o">(</span><span class="n">max</span> <span class="o">&lt;</span> <span class="n">alph_list</span><span class="o">[</span><span class="n">j</span><span class="o">])</span> <span class="o">{</span>
        <span class="n">max</span> <span class="o">=</span> <span class="n">alph_list</span><span class="o">[</span><span class="n">j</span><span class="o">];</span>
        <span class="n">result</span> <span class="o">=</span> <span class="o">(</span><span class="kt">char</span><span class="o">)</span> <span class="o">(</span><span class="n">j</span><span class="o">+</span><span class="mi">65</span><span class="o">);</span>
    <span class="o">}</span>
    <span class="k">else</span> <span class="nf">if</span> <span class="o">(</span><span class="n">max</span> <span class="o">==</span> <span class="n">alph_list</span><span class="o">[</span><span class="n">j</span><span class="o">])</span> <span class="n">result</span> <span class="o">=</span> <span class="sc">'?'</span><span class="o">;</span>
<span class="o">}</span>
<span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">result</span> <span class="o">+</span> <span class="s">"\n"</span><span class="o">);</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>char형으로 파싱하며 왜 char형은 홑 따옴표를 쓰는지 궁금해서 찾아보았다.</p>

<blockquote>
  <p>문자형 char란?</p>
  <ul>
    <li>하나의 문자를 저장하기 위한 변수를 선언할 때 사용된다.</li>
    <li>말 그대로 하나의 문자만 저장할 수 있다.</li>
    <li>주로 문자, 유니코드, 아스키코드를 나타낼 수 있다.</li>
    <li>꼭 홑 따옴표로 감싸주어야 한다. <strong>ex) char c = ‘a’;</strong></li>
  </ul>
</blockquote>

<p><br /></p>

<h3 id="작성코드">작성코드</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">java.io.*</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">IOException</span> <span class="o">{</span>
        <span class="nc">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>
        <span class="nc">BufferedWriter</span> <span class="n">bw</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedWriter</span><span class="o">(</span><span class="k">new</span> <span class="nc">OutputStreamWriter</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">));</span>
        
        <span class="kt">int</span><span class="o">[]</span> <span class="n">alph_list</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="mi">26</span><span class="o">];</span>
        <span class="nc">String</span> <span class="n">str</span> <span class="o">=</span> <span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">();</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">str</span><span class="o">.</span><span class="na">length</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="n">str</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">)&gt;=</span><span class="mi">65</span> <span class="o">&amp;&amp;</span> <span class="n">str</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">)&lt;=</span><span class="mi">90</span><span class="o">)</span> <span class="n">alph_list</span><span class="o">[</span><span class="n">str</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">)-</span><span class="mi">65</span><span class="o">]</span> <span class="o">+=</span> <span class="mi">1</span><span class="o">;</span>
            <span class="k">else</span> <span class="n">alph_list</span><span class="o">[</span><span class="n">str</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">)-</span><span class="mi">97</span><span class="o">]</span> <span class="o">+=</span> <span class="mi">1</span><span class="o">;</span>
        <span class="o">}</span>

        <span class="kt">int</span> <span class="n">max</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="kt">char</span> <span class="n">result</span> <span class="o">=</span> <span class="sc">'?'</span><span class="o">;</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">j</span><span class="o">&lt;</span><span class="n">alph_list</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">max</span> <span class="o">&lt;</span> <span class="n">alph_list</span><span class="o">[</span><span class="n">j</span><span class="o">])</span> <span class="o">{</span>
                <span class="n">max</span> <span class="o">=</span> <span class="n">alph_list</span><span class="o">[</span><span class="n">j</span><span class="o">];</span>
                <span class="n">result</span> <span class="o">=</span> <span class="o">(</span><span class="kt">char</span><span class="o">)</span> <span class="o">(</span><span class="n">j</span><span class="o">+</span><span class="mi">65</span><span class="o">);</span>
            <span class="o">}</span>
            <span class="k">else</span> <span class="nf">if</span> <span class="o">(</span><span class="n">max</span> <span class="o">==</span> <span class="n">alph_list</span><span class="o">[</span><span class="n">j</span><span class="o">])</span> <span class="n">result</span> <span class="o">=</span> <span class="sc">'?'</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">result</span> <span class="o">+</span> <span class="s">"\n"</span><span class="o">);</span>

        <span class="n">bw</span><span class="o">.</span><span class="na">flush</span><span class="o">();</span>
        <span class="n">bw</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
        <span class="n">br</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="회고">회고</h3>
<ul>
  <li>문자의 인코딩 값에 대해 제대로 파악하지 못해 많은 시간을 들여 문제를 풀게 되었다.</li>
  <li>문자형 char를 활용함으로써 훨씬 안정적이고 좋은 성능을 낼 수 있다고 알게 되었다.</li>
</ul>]]></content><author><name>lango</name></author><category term="Java" /><category term="blog" /><category term="algorithm" /><category term="study" /><category term="java" /><category term="baekjoon" /><summary type="html"><![CDATA[단어 공부]]></summary></entry><entry><title type="html">[알고리즘 스터디 - Java] 백준 1065번</title><link href="http://localhost:4000/java/18-post/" rel="alternate" type="text/html" title="[알고리즘 스터디 - Java] 백준 1065번" /><published>2022-08-04T00:00:00+09:00</published><updated>2022-08-04T00:00:00+09:00</updated><id>http://localhost:4000/java/18-post</id><content type="html" xml:base="http://localhost:4000/java/18-post/"><![CDATA[<p><br /></p>

<center><img src="/assets/images/baekjoon/1065.png" /></center>

<blockquote>
  <p>Input-1 <br />
110 <br />
Output-1 <br />
99</p>
</blockquote>

<blockquote>
  <p>Input-2 <br />
210 <br />
Output-2 <br />
105</p>
</blockquote>

<blockquote>
  <p>Input-3 <br />
1000 <br />
Output-3 <br />
144</p>
</blockquote>

<p><br /></p>

<h3 id="문제-풀이">문제 풀이</h3>
<p>문제 풀이에 앞서 한수가 무엇인지 이해가 잘 되지 않았다.<br />
한수를 알려면 등차수열에 대해서도 알아야 한다.</p>

<blockquote>
  <p><strong>한수란?</strong><br />
어떤 정수 A의 각 자리수가 등차수열을 이루는 수이다.</p>
</blockquote>

<blockquote>
  <p><strong>등차수열이란?</strong><br />
연속된 두 개의 수의 차이가 일정한 수열을 말한다.</p>
</blockquote>

<ol>
  <li>
    <p>그러면 1부터 9까지는 항이 하나뿐인데 등차수열인가?<br />
1~9까지는 하나의 등차수열로 본다.</p>
  </li>
  <li>
    <p>그러면 10부터 99까지는 항이 두개인데 등차수열인가?<br />
10의 경우 길이가 2이고 첫번째 항이 1, 두번째 항이 0이며 공차가 -1인 등차수열로 볼 수 있다.</p>
  </li>
</ol>

<p>두자리수인 <strong>99까지는 모두 등차수열</strong>인 것이다.</p>

<p>자 그러면 <strong>100부터 주어진 수(N)의 자리수별 차이가 같은 수</strong>를 찾으면 된다.</p>

<p>주어진 수가 100 이상이라면 각 자리수를 구하여 첫째항과 둘째항의 차와 둘째항과 셋째항의 차가 같은지 검증하는 로직을
<strong>checkHansoo 함수에 작성</strong>하였다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
</pre></td><td class="rouge-code"><pre><span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">checkHansoo</span><span class="o">(</span><span class="kt">int</span> <span class="n">n</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">list</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>
        <span class="k">while</span><span class="o">(</span><span class="n">n</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span> <span class="c1">// 주어진 수(n)의 자리수를 구해 list에 저장</span>
            <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">n</span> <span class="o">%</span> <span class="mi">10</span><span class="o">);</span>
            <span class="n">n</span> <span class="o">/=</span> <span class="mi">10</span><span class="o">;</span>    
        <span class="o">}</span>
        <span class="k">if</span><span class="o">((</span><span class="n">list</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">)-</span><span class="n">list</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">1</span><span class="o">))</span> <span class="o">==</span> <span class="o">(</span><span class="n">list</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">1</span><span class="o">)-</span><span class="n">list</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">2</span><span class="o">)))</span> <span class="k">return</span> <span class="mi">1</span><span class="o">;</span>
        <span class="k">else</span> <span class="k">return</span> <span class="mi">0</span><span class="o">;</span>
    <span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>마지막은 결국 주어진 수까지 한수의 개수를 구하는 것이기에 주어진 수(N)만큼 반복하며 한수의 개수를 측정하였다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
</pre></td><td class="rouge-code"><pre><span class="k">if</span><span class="o">(</span><span class="n">n</span> <span class="o">&lt;</span> <span class="mi">100</span><span class="o">)</span> <span class="n">hs</span> <span class="o">=</span> <span class="n">n</span><span class="o">;</span> <span class="c1">// 1부터 99까지는 모두 한수</span>
<span class="k">else</span> <span class="o">{</span> <span class="c1">// 100부터 1000까지</span>
    <span class="n">hs</span> <span class="o">=</span> <span class="mi">99</span><span class="o">;</span>
    <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">100</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;=</span><span class="n">n</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
        <span class="n">hs</span> <span class="o">+=</span> <span class="n">checkHansoo</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>        
    <span class="o">}</span>   
    <span class="k">if</span><span class="o">(</span><span class="n">n</span> <span class="o">==</span> <span class="mi">1000</span><span class="o">)</span> <span class="n">hs</span> <span class="o">-=</span> <span class="mi">1</span><span class="o">;</span> 
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><br /></p>

<h3 id="작성코드">작성코드</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">java.io.*</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">IOException</span> <span class="o">{</span>
        <span class="nc">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>
        <span class="nc">BufferedWriter</span> <span class="n">bw</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedWriter</span><span class="o">(</span><span class="k">new</span> <span class="nc">OutputStreamWriter</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">));</span>
        <span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
        <span class="kt">int</span> <span class="n">hs</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>

        <span class="k">if</span><span class="o">(</span><span class="n">n</span> <span class="o">&lt;</span> <span class="mi">100</span><span class="o">)</span> <span class="n">hs</span> <span class="o">=</span> <span class="n">n</span><span class="o">;</span>
        <span class="k">else</span> <span class="o">{</span>
            <span class="n">hs</span> <span class="o">=</span> <span class="mi">99</span><span class="o">;</span>
            <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">100</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;=</span><span class="n">n</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
                <span class="n">hs</span> <span class="o">+=</span> <span class="n">checkHansoo</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>        
            <span class="o">}</span>   
            <span class="k">if</span><span class="o">(</span><span class="n">n</span> <span class="o">==</span> <span class="mi">1000</span><span class="o">)</span> <span class="n">hs</span> <span class="o">-=</span> <span class="mi">1</span><span class="o">;</span> 
        <span class="o">}</span>

        <span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">hs</span> <span class="o">+</span> <span class="s">"\n"</span><span class="o">);</span>
        <span class="n">bw</span><span class="o">.</span><span class="na">flush</span><span class="o">();</span>
        <span class="n">bw</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
        <span class="n">br</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">checkHansoo</span><span class="o">(</span><span class="kt">int</span> <span class="n">n</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">list</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>
        
        <span class="k">while</span><span class="o">(</span><span class="n">n</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">n</span> <span class="o">%</span> <span class="mi">10</span><span class="o">);</span>
            <span class="n">n</span> <span class="o">/=</span> <span class="mi">10</span><span class="o">;</span>    
        <span class="o">}</span>

        <span class="k">if</span><span class="o">((</span><span class="n">list</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">)-</span><span class="n">list</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">1</span><span class="o">))</span> <span class="o">==</span> <span class="o">(</span><span class="n">list</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">1</span><span class="o">)-</span><span class="n">list</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">2</span><span class="o">)))</span> <span class="k">return</span> <span class="mi">1</span><span class="o">;</span>
        <span class="k">else</span> <span class="k">return</span> <span class="mi">0</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="회고">회고</h3>
<ul>
  <li>4673번 셀프넘버 문제에서도 정수의 자리수를 알아야 했는데 이번 1065 문제에서도 동일한 요구사항이 있었던 것으로 보아 자리수 별로 접근하는 방식을 명확하게 알고 있어야 한다고 느꼈다.</li>
</ul>]]></content><author><name>lango</name></author><category term="Java" /><category term="blog" /><category term="algorithm" /><category term="study" /><category term="java" /><category term="baekjoon" /><summary type="html"><![CDATA[한수]]></summary></entry><entry><title type="html">[알고리즘 스터디 - Java] 백준 2675번</title><link href="http://localhost:4000/java/19-post/" rel="alternate" type="text/html" title="[알고리즘 스터디 - Java] 백준 2675번" /><published>2022-08-04T00:00:00+09:00</published><updated>2022-08-04T00:00:00+09:00</updated><id>http://localhost:4000/java/19-post</id><content type="html" xml:base="http://localhost:4000/java/19-post/"><![CDATA[<p><br /></p>

<center><img src="/assets/images/baekjoon/2675.png" /></center>

<blockquote>
  <p>Input <br />
2 <br />
3 ABC <br />
5 /HTP</p>
</blockquote>

<blockquote>
  <p>Output <br />
AAABBBCCC <br />
/////HHHHHTTTTTPPPPP <br /></p>
</blockquote>

<p><br /></p>

<h3 id="문제-풀이">문제 풀이</h3>
<p>테스트케이스의 수를 T, T별로 반복할 횟수를 R, 주어진 문자열을 S, 새로운 문자열을 P라고 해보자.
여기서 테스트케이스만큼 입력받는 동안 S의 각 문자를 R번 반복한 P로 만들어 출력하면 된다.</p>

<p>먼저 T를 입력받고 T만큼 반복하며 입력받은 줄에서 R과 S를 추려낸다.
그리고 S의 각 문자별로 R만큼 반복하여 P를 만든다.
<strong>str.repeat()</strong> 함수를 이용해 S의 각 문자별로 반복할 수 있도록 하였다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="rouge-code"><pre><span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">t</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
    <span class="n">st</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span> <span class="c1">// 하나의 테스트케이스</span>
    <span class="kt">int</span> <span class="n">r</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span> <span class="c1">// 반복횟수 R</span>
    <span class="nc">String</span><span class="o">[]</span> <span class="n">s</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">String</span><span class="o">[</span><span class="n">r</span><span class="o">];</span> <span class="c1">// 주어진 문자열 S 초기화</span>
    <span class="n">s</span> <span class="o">=</span> <span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">().</span><span class="na">split</span><span class="o">(</span><span class="s">""</span><span class="o">);</span> <span class="c1">// S 값 정의</span>
    
    <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">j</span><span class="o">&lt;</span><span class="n">s</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
        <span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">s</span><span class="o">[</span><span class="n">j</span><span class="o">].</span><span class="na">repeat</span><span class="o">(</span><span class="n">r</span><span class="o">)</span> <span class="o">+</span> <span class="s">""</span><span class="o">);</span> <span class="c1">// P 출력</span>
    <span class="o">}</span>
    <span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="s">"\n"</span><span class="o">);</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><br /></p>

<h3 id="작성코드">작성코드</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">java.io.*</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">IOException</span> <span class="o">{</span>
        <span class="nc">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>
        <span class="nc">BufferedWriter</span> <span class="n">bw</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedWriter</span><span class="o">(</span><span class="k">new</span> <span class="nc">OutputStreamWriter</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">));</span>
        
        <span class="kt">int</span> <span class="n">t</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
        <span class="nc">StringTokenizer</span> <span class="n">st</span><span class="o">;</span>
        
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">t</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="n">st</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
            <span class="kt">int</span> <span class="n">r</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
            <span class="nc">String</span><span class="o">[]</span> <span class="n">s</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">String</span><span class="o">[</span><span class="n">r</span><span class="o">];</span>
            <span class="n">s</span> <span class="o">=</span> <span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">().</span><span class="na">split</span><span class="o">(</span><span class="s">""</span><span class="o">);</span>
            
            <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">j</span><span class="o">&lt;</span><span class="n">s</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
                <span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">s</span><span class="o">[</span><span class="n">j</span><span class="o">].</span><span class="na">repeat</span><span class="o">(</span><span class="n">r</span><span class="o">)</span> <span class="o">+</span> <span class="s">""</span><span class="o">);</span>
            <span class="o">}</span>
            <span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="s">"\n"</span><span class="o">);</span>
        <span class="o">}</span>

        <span class="n">bw</span><span class="o">.</span><span class="na">flush</span><span class="o">();</span>
        <span class="n">bw</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
        <span class="n">br</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
    <span class="o">}</span>

<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>]]></content><author><name>lango</name></author><category term="Java" /><category term="blog" /><category term="algorithm" /><category term="study" /><category term="java" /><category term="baekjoon" /><summary type="html"><![CDATA[문자열 반복]]></summary></entry><entry><title type="html">[알고리즘 스터디 - Java] 백준 8958번</title><link href="http://localhost:4000/java/16-post/" rel="alternate" type="text/html" title="[알고리즘 스터디 - Java] 백준 8958번" /><published>2022-08-03T00:00:00+09:00</published><updated>2022-08-03T00:00:00+09:00</updated><id>http://localhost:4000/java/16-post</id><content type="html" xml:base="http://localhost:4000/java/16-post/"><![CDATA[<p><br /></p>

<center><img src="/assets/images/baekjoon/8958.png" /></center>

<blockquote>
  <p>Input-1) <br />
5 <br />
OOXXOXXOOO <br />
OOXXOOXXOO <br />
OXOXOXOXOXOXOX <br />
OOOOOOOOOO <br />
OOOOXOOOOXOOOOX <br /></p>
</blockquote>

<blockquote>
  <p>Output-1) <br />
10 <br />
9 <br />
7 <br />
55 <br />
30 <br /></p>
</blockquote>

<h3 id="접근-방식">접근 방식</h3>
<p>OX 퀴즈 결과 문자열을 순회하며 아래의 조건을 통해 점수를 계산하였다.</p>
<ul>
  <li>1) O인 경우 점수를 1 증가시킨다.</li>
  <li>2) X인 경우 점수를 증가시키지 않는다.</li>
  <li>3) 점수가 계산될 떄마다 해당 점수를 합한다.</li>
</ul>

<p>하나의 OX퀴즈 문자열 점수 계산이 끝나고 합을 구했다면 4) 별도의 합 점수 배열에 담는다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
</pre></td><td class="rouge-code"><pre><span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
    <span class="n">ox_arr</span> <span class="o">=</span> <span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">().</span><span class="na">split</span><span class="o">(</span><span class="s">""</span><span class="o">);</span> <span class="c1">// 입력받을 OX퀴즈 문자열</span>
    <span class="n">sum</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="c1">// 문자열 점수들의 합</span>
    <span class="n">score</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="c1">// 해당 문자열의 점수</span>
    <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">j</span><span class="o">&lt;</span><span class="n">ox_arr</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
        <span class="k">if</span><span class="o">(</span><span class="n">ox_arr</span><span class="o">[</span><span class="n">j</span><span class="o">].</span><span class="na">equals</span><span class="o">(</span><span class="s">"O"</span><span class="o">))</span> <span class="o">{</span> <span class="c1">// 1번</span>
            <span class="n">score</span> <span class="o">+=</span> <span class="mi">1</span><span class="o">;</span> 
            <span class="n">sum</span> <span class="o">+=</span> <span class="n">score</span><span class="o">;</span> <span class="c1">// 3번</span>
        <span class="o">}</span>
        <span class="k">else</span> <span class="o">{</span> <span class="c1">// 2번</span>
            <span class="n">score</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
            <span class="n">sum</span> <span class="o">+=</span> <span class="n">score</span><span class="o">;</span> <span class="c1">// 3번</span>
        <span class="o">}</span>
    <span class="o">}</span>
    <span class="n">ox_scores</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="n">sum</span><span class="o">;</span> <span class="c1">// 4번</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><br /></p>

<h3 id="작성코드">작성코드</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">java.io.BufferedReader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.BufferedWriter</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.InputStreamReader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.OutputStreamWriter</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">IOException</span> <span class="o">{</span>
        
        <span class="nc">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>
        <span class="nc">BufferedWriter</span> <span class="n">bw</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedWriter</span><span class="o">(</span><span class="k">new</span> <span class="nc">OutputStreamWriter</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">));</span>

        <span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
        <span class="kt">int</span> <span class="n">sum</span><span class="o">,</span> <span class="n">score</span><span class="o">;</span>
        <span class="nc">String</span><span class="o">[]</span> <span class="n">ox_arr</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">String</span><span class="o">[</span><span class="n">n</span><span class="o">];</span>
        <span class="kt">int</span><span class="o">[]</span> <span class="n">ox_scores</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">n</span><span class="o">];</span>

        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="n">ox_arr</span> <span class="o">=</span> <span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">().</span><span class="na">split</span><span class="o">(</span><span class="s">""</span><span class="o">);</span>
            <span class="n">sum</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
            <span class="n">score</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
            <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">j</span><span class="o">&lt;</span><span class="n">ox_arr</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
                <span class="k">if</span><span class="o">(</span><span class="n">ox_arr</span><span class="o">[</span><span class="n">j</span><span class="o">].</span><span class="na">equals</span><span class="o">(</span><span class="s">"O"</span><span class="o">))</span> <span class="o">{</span>
                    <span class="n">score</span> <span class="o">+=</span> <span class="mi">1</span><span class="o">;</span>
                    <span class="n">sum</span> <span class="o">+=</span> <span class="n">score</span><span class="o">;</span>
                <span class="o">}</span>
                <span class="k">else</span> <span class="o">{</span>
                    <span class="n">score</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
                    <span class="n">sum</span> <span class="o">+=</span> <span class="n">score</span><span class="o">;</span>
                <span class="o">}</span>
            <span class="o">}</span>
            <span class="n">ox_scores</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="n">sum</span><span class="o">;</span>
        <span class="o">}</span>

        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">ox_score</span> <span class="o">:</span> <span class="n">ox_scores</span><span class="o">)</span> <span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">ox_score</span> <span class="o">+</span> <span class="s">"\n"</span><span class="o">);</span>
        
        <span class="n">bw</span><span class="o">.</span><span class="na">flush</span><span class="o">();</span>
        <span class="n">bw</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
        <span class="n">br</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>]]></content><author><name>lango</name></author><category term="Java" /><category term="Blog" /><category term="algorithm" /><category term="study" /><category term="java" /><category term="baekjoon" /><summary type="html"><![CDATA[OX 퀴즈]]></summary></entry><entry><title type="html">[알고리즘 스터디 - Java] 백준 4673번</title><link href="http://localhost:4000/java/17-post/" rel="alternate" type="text/html" title="[알고리즘 스터디 - Java] 백준 4673번" /><published>2022-08-03T00:00:00+09:00</published><updated>2022-08-03T00:00:00+09:00</updated><id>http://localhost:4000/java/17-post</id><content type="html" xml:base="http://localhost:4000/java/17-post/"><![CDATA[<p><br /></p>

<center><img src="/assets/images/baekjoon/4673.png" /></center>

<blockquote>
  <p>Output</p>
  <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
</pre></td><td class="rouge-code"><pre>1
3
5
7
9
20
31
42
53
64
 |
 |       &lt;-- a lot more numbers
 |
9903
9914
9925
9927
9938
9949
9960
9971
9982
9993
</pre></td></tr></tbody></table></code></pre></div>  </div>
</blockquote>

<h3 id="접근-방식">접근 방식</h3>

<p>핵심은 셀프넘버인 수를 구하는 것이 아니라 셀프넘버가 아닌 수를 구하는 것이다.</p>

<p>먼저 셀프넘버를 구하는 함수(notSelfNum)를 작성하였다.</p>
<ul>
  <li>셀프넘버 = 본인 + <strong>본인의 N자리별 수</strong></li>
</ul>

<p>본인의 N자리별 수를 알아내려면 숫자(a)를 10으로 반복해서 나눠가면서, 10으로 나머지 연산을 하면 일의 자리를 얻어낼 수 있다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
</pre></td><td class="rouge-code"><pre><span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">notSelfNum</span><span class="o">(</span><span class="kt">int</span> <span class="n">a</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">self</span> <span class="o">=</span> <span class="n">a</span><span class="o">;</span>
        <span class="k">while</span><span class="o">(</span><span class="n">a</span> <span class="o">!=</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">self</span> <span class="o">=</span> <span class="n">self</span> <span class="o">+</span> <span class="o">(</span><span class="n">a</span> <span class="o">%</span> <span class="mi">10</span><span class="o">);</span>
            <span class="n">a</span> <span class="o">/=</span> <span class="mi">10</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">self</span><span class="o">;</span>
    <span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<blockquote>
  <p>셀프넘버를 구했으니 셀프넘버가 아닌 수를 어떻게 찾아야 할까?</p>
</blockquote>

<p>1부터 10000까지 수 중 셀프넘버인 수를 제거하는 방식으로 작성하였다.</p>
<ul>
  <li>1-10000까지 모든 수가 존재하는 배열(A)과 1-10000까지의 셀프넘버 배열(B)을 만든다.</li>
  <li>A에서 B의 원소를 제거한다.</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
</pre></td><td class="rouge-code"><pre><span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">result</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span> <span class="c1">// A</span>
<span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">self_nums</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span> <span class="c1">// B</span>

<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;=</span><span class="n">n</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
    <span class="n">result</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">i</span><span class="o">);</span> <span class="c1">// 1-10000까지 모든 수 배열</span>
    <span class="n">self_nums</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="nc">Main</span><span class="o">.</span><span class="na">notSelfNum</span><span class="o">(</span><span class="n">i</span><span class="o">));</span> <span class="c1">// // 1-10000까지 셀프넘버 배열</span>
<span class="o">}</span>
<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">j</span><span class="o">&lt;=</span><span class="n">n</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span> <span class="c1">// A배열에서 셀프넘버 숫자만 제거</span>
    <span class="n">result</span><span class="o">.</span><span class="na">remove</span><span class="o">(</span><span class="n">self_nums</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">j</span><span class="o">));</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><br /></p>

<h3 id="작성코드">작성코드</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="mi">10000</span><span class="o">;</span>
        <span class="n">selfNum</span><span class="o">(</span><span class="n">n</span><span class="o">);</span>   
    <span class="o">}</span>
    
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">selfNum</span><span class="o">(</span><span class="kt">int</span> <span class="n">n</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">result</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>
        <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">self_nums</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;=</span><span class="n">n</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="n">result</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
            <span class="n">self_nums</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="nc">Main</span><span class="o">.</span><span class="na">notSelfNum</span><span class="o">(</span><span class="n">i</span><span class="o">));</span>
        <span class="o">}</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">j</span><span class="o">&lt;=</span><span class="n">n</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
            <span class="n">result</span><span class="o">.</span><span class="na">remove</span><span class="o">(</span><span class="n">self_nums</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">j</span><span class="o">));</span>
        <span class="o">}</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">a</span> <span class="o">:</span> <span class="n">result</span><span class="o">)</span> <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">a</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">notSelfNum</span><span class="o">(</span><span class="kt">int</span> <span class="n">a</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">self</span> <span class="o">=</span> <span class="n">a</span><span class="o">;</span>
        <span class="k">while</span><span class="o">(</span><span class="n">a</span> <span class="o">!=</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">self</span> <span class="o">=</span> <span class="n">self</span> <span class="o">+</span> <span class="o">(</span><span class="n">a</span> <span class="o">%</span> <span class="mi">10</span><span class="o">);</span>
            <span class="n">a</span> <span class="o">/=</span> <span class="mi">10</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">self</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="회고">회고</h3>
<ul>
  <li>셀프넘버를 구하는 로직을 별도로 함수를 작성하여 핵심 비즈니스 로직을 분리함으로 깔끔한 코드를 작성할 수 있다는 것을 알게되었다.</li>
  <li>효율적인 알고리즘 패턴을 우선적으로 찾지 않고 코딩부터 시작하였는데, 더 효율적인 패턴을 찾게되면 로직을 변경해야 하는 경우가 생겨 불필요한 시간을 소모하였다.</li>
</ul>]]></content><author><name>lango</name></author><category term="Java" /><category term="Blog" /><category term="algorithm" /><category term="study" /><category term="java" /><category term="baekjoon" /><summary type="html"><![CDATA[셀프 넘버]]></summary></entry><entry><title type="html">[알고리즘 스터디 - Java] 백준 2577번</title><link href="http://localhost:4000/java/15-post/" rel="alternate" type="text/html" title="[알고리즘 스터디 - Java] 백준 2577번" /><published>2022-08-02T00:00:00+09:00</published><updated>2022-08-02T00:00:00+09:00</updated><id>http://localhost:4000/java/15-post</id><content type="html" xml:base="http://localhost:4000/java/15-post/"><![CDATA[<p><br /></p>

<center><img src="/assets/images/baekjoon/2577.png" /></center>

<blockquote>
  <p>Input-1) <br />
150 <br />
266 <br />
427 <br /></p>
</blockquote>

<blockquote>
  <p>Output-1) <br />
3 <br />
1 <br />
0 <br />
2 <br />
0 <br />
0 <br />
0 <br />
2 <br />
0 <br />
0 <br /></p>
</blockquote>

<h3 id="접근-방식">접근 방식</h3>
<p>a, b, c를 곱한 값을 arr(배열)로 가지고 있다고 하면, 
0부터 9까지의 인덱스가 arr의 값과 <strong>중복</strong>되는지를 검증하여 세면 될 것이라 생각했다.</p>

<p>먼저 a, b, c를 곱하여 arr이라는 배열로 파싱한다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="c1">// 세 수를 곱한 값을 배열로 파싱</span>
<span class="nc">String</span><span class="o">[]</span> <span class="n">arr</span> <span class="o">=</span> <span class="nc">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">a</span><span class="o">*</span><span class="n">b</span><span class="o">*</span><span class="n">c</span><span class="o">).</span><span class="na">split</span><span class="o">(</span><span class="s">""</span><span class="o">);</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>그리고 반복문을 통해 0~9까지 돌며 arr 배열의 값과 같은지를 검증한다.
같다면 cnt(개수)를 증가시킨다.
바깥 반복문 사이클이 한바퀴씩 돌때마다 <strong>cnt를 0으로 초기화</strong>하여 인덱스별 개수를 세도록 하였다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre><span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;=</span><span class="mi">9</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span> 
    <span class="n">cnt</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="c1">// i가 한바퀴 돌때마다 cnt 초기화</span>
    <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">j</span><span class="o">&lt;</span><span class="n">arr</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span> <span class="c1">// arr를 돌며 같으면 cnt 증가</span>
        <span class="k">if</span><span class="o">(</span><span class="n">i</span> <span class="o">==</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">arr</span><span class="o">[</span><span class="n">j</span><span class="o">]))</span> <span class="n">cnt</span> <span class="o">+=</span> <span class="mi">1</span><span class="o">;</span>
    <span class="o">}</span>
    <span class="n">counter</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">toString</span><span class="o">(</span><span class="n">i</span><span class="o">),</span> <span class="n">cnt</span><span class="o">);</span> <span class="c1">// 현재 i까지 저장된 cnt를 counter 맵에 저장</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><br /></p>

<h3 id="작성코드">작성코드</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">java.io.BufferedReader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.BufferedWriter</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.InputStreamReader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.OutputStreamWriter</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.HashMap</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">IOException</span> <span class="o">{</span>
        <span class="nc">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>
        <span class="nc">BufferedWriter</span> <span class="n">bw</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedWriter</span><span class="o">(</span><span class="k">new</span> <span class="nc">OutputStreamWriter</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">));</span>

        <span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
        <span class="kt">int</span> <span class="n">b</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
        <span class="kt">int</span> <span class="n">c</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
        <span class="kt">int</span> <span class="n">cnt</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        
        <span class="nc">String</span><span class="o">[]</span> <span class="n">arr</span> <span class="o">=</span> <span class="nc">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">a</span><span class="o">*</span><span class="n">b</span><span class="o">*</span><span class="n">c</span><span class="o">).</span><span class="na">split</span><span class="o">(</span><span class="s">""</span><span class="o">);</span>
        <span class="nc">HashMap</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">counter</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HashMap</span><span class="o">&lt;&gt;();</span>

        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;=</span><span class="mi">9</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="n">cnt</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
            <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">j</span><span class="o">&lt;</span><span class="n">arr</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
                <span class="k">if</span><span class="o">(</span><span class="n">i</span> <span class="o">==</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">arr</span><span class="o">[</span><span class="n">j</span><span class="o">]))</span> <span class="n">cnt</span> <span class="o">+=</span> <span class="mi">1</span><span class="o">;</span>
            <span class="o">}</span>
            <span class="n">counter</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">toString</span><span class="o">(</span><span class="n">i</span><span class="o">),</span> <span class="n">cnt</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">res</span> <span class="o">:</span> <span class="n">counter</span><span class="o">.</span><span class="na">values</span><span class="o">())</span> <span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">res</span> <span class="o">+</span> <span class="s">"\n"</span><span class="o">);</span>

        <span class="n">bw</span><span class="o">.</span><span class="na">flush</span><span class="o">();</span>
        <span class="n">bw</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
        <span class="n">br</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>]]></content><author><name>lango</name></author><category term="Java" /><category term="Blog" /><category term="algorithm" /><category term="study" /><category term="java" /><category term="baekjoon" /><summary type="html"><![CDATA[숫자의 개수]]></summary></entry><entry><title type="html">[알고리즘 스터디 - Java] 백준 1110번</title><link href="http://localhost:4000/java/14-post/" rel="alternate" type="text/html" title="[알고리즘 스터디 - Java] 백준 1110번" /><published>2022-08-02T00:00:00+09:00</published><updated>2022-08-02T00:00:00+09:00</updated><id>http://localhost:4000/java/14-post</id><content type="html" xml:base="http://localhost:4000/java/14-post/"><![CDATA[<p><br /></p>

<center><img src="/assets/images/baekjoon/1110.png" /></center>

<blockquote>
  <p>Input-1) <br />
26 <br /></p>
</blockquote>

<blockquote>
  <p>Output-1) <br />
4 <br /></p>
</blockquote>

<blockquote>
  <p>Input-2) <br />
55 <br /></p>
</blockquote>

<blockquote>
  <p>Output-2) <br />
3 <br /></p>
</blockquote>

<h3 id="접근-방식">접근 방식</h3>
<p>주어진 수를 N, 새로운 수를 T라고 가정하자.<br />
<strong>N의 일의 자리가 T의 십의 자리수가 되고, N을 합한 수의 일의 자리가 T의 일의 자리수가 된다.</strong></p>
<ul>
  <li>N[0] + N[1] = T[ N[1] + (N[0]+N[1])[1] ]</li>
</ul>

<p>N과 T의 자리수를 파악할 수 있게 2칸 크기의 문자열 배열을 통해 위 패턴을 구현하였다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="rouge-code"><pre><span class="nc">String</span> <span class="n">n</span> <span class="o">=</span> <span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">();</span> <span class="c1">// 입력값</span>
<span class="kt">int</span> <span class="n">first</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">n</span><span class="o">);</span> <span class="c1">// 최초 입력 숫자 저장</span>
<span class="nc">String</span> <span class="no">N</span><span class="o">[]</span> <span class="o">=</span> <span class="n">n</span><span class="o">.</span><span class="na">split</span><span class="o">(</span><span class="s">""</span><span class="o">);</span> <span class="c1">// 입력 숫자 배열</span>
<span class="nc">String</span> <span class="no">T</span><span class="o">[]</span> <span class="o">=</span> <span class="n">n</span><span class="o">.</span><span class="na">split</span><span class="o">(</span><span class="s">""</span><span class="o">);</span> <span class="c1">// 입력 숫자 합 배열</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>또한 T를 만들려면 N의 합이 필요하기에 N의 합을 구한 뒤 
sum(N의 합)이 10 보다 큰지 작은지 여부를 검증한 후 T의 자리수를 세팅하였다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
</pre></td><td class="rouge-code"><pre><span class="n">sum</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="no">N</span><span class="o">[</span><span class="mi">0</span><span class="o">])</span> <span class="o">+</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="no">N</span><span class="o">[</span><span class="mi">1</span><span class="o">]);</span>
<span class="k">if</span><span class="o">(</span><span class="n">sum</span> <span class="o">&gt;=</span> <span class="mi">10</span><span class="o">)</span> <span class="o">{</span>
    <span class="no">T</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">=</span> <span class="no">N</span><span class="o">[</span><span class="mi">1</span><span class="o">];</span>
    <span class="no">T</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="o">=</span> <span class="nc">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">sum</span><span class="o">).</span><span class="na">split</span><span class="o">(</span><span class="s">""</span><span class="o">)[</span><span class="mi">1</span><span class="o">];</span>
<span class="o">}</span><span class="k">else</span> <span class="o">{</span>
    <span class="no">T</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">=</span> <span class="no">N</span><span class="o">[</span><span class="mi">1</span><span class="o">];</span>
    <span class="no">T</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="o">=</span> <span class="nc">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">sum</span><span class="o">);</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>주어진 N의 값이 계속해서 새로운 T값으로 대체해줘야 하기에 
T가 구해지면 N값으로 대체하도록 하였다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="no">N</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">=</span> <span class="no">T</span><span class="o">[</span><span class="mi">0</span><span class="o">];</span>
<span class="no">N</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="o">=</span> <span class="no">T</span><span class="o">[</span><span class="mi">1</span><span class="o">];</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>결국 N의 정수값이 최초 입력받은 first값과 동일할 경우 반복문에서 탈출하도록 구현하였다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="k">if</span><span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="no">N</span><span class="o">[</span><span class="mi">0</span><span class="o">])*</span><span class="mi">10</span> <span class="o">+</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="no">N</span><span class="o">[</span><span class="mi">1</span><span class="o">])</span> <span class="o">==</span> <span class="n">first</span><span class="o">)</span> <span class="k">break</span><span class="o">;</span>    
</pre></td></tr></tbody></table></code></pre></div></div>

<p><br /></p>

<h3 id="문제-해결">문제 해결</h3>
<ol>
  <li>N의 초기값이 10 이하인 수라면 반복문에서 예외가 발생한다.<br />
<strong>N이 10 이하일 경우 앞에 “0”을 붙이도록 수정하였다.</strong></li>
</ol>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="k">if</span><span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">n</span><span class="o">)</span> <span class="o">&lt;</span> <span class="mi">10</span><span class="o">)</span> <span class="n">n</span> <span class="o">=</span> <span class="s">"0"</span> <span class="o">+</span> <span class="n">n</span><span class="o">;</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><br /></p>

<h3 id="작성코드">작성코드</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">java.io.BufferedReader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.BufferedWriter</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.InputStreamReader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.OutputStreamWriter</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">IOException</span> <span class="o">{</span>
        <span class="nc">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>
        <span class="nc">BufferedWriter</span> <span class="n">bw</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedWriter</span><span class="o">(</span><span class="k">new</span> <span class="nc">OutputStreamWriter</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">));</span>
        <span class="nc">String</span> <span class="n">n</span> <span class="o">=</span> <span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">();</span>
        <span class="kt">int</span> <span class="n">sum</span><span class="o">,</span> <span class="n">cnt</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">first</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">n</span><span class="o">);</span> <span class="c1">// 최초 입력 숫자 저장</span>
        <span class="k">if</span><span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">n</span><span class="o">)</span> <span class="o">&lt;</span> <span class="mi">10</span><span class="o">)</span> <span class="n">n</span> <span class="o">=</span> <span class="s">"0"</span> <span class="o">+</span> <span class="n">n</span><span class="o">;</span>
        <span class="nc">String</span> <span class="no">N</span><span class="o">[]</span> <span class="o">=</span> <span class="n">n</span><span class="o">.</span><span class="na">split</span><span class="o">(</span><span class="s">""</span><span class="o">);</span> <span class="c1">// 입력 숫자 배열</span>
        <span class="nc">String</span> <span class="no">T</span><span class="o">[]</span> <span class="o">=</span> <span class="n">n</span><span class="o">.</span><span class="na">split</span><span class="o">(</span><span class="s">""</span><span class="o">);</span> <span class="c1">// 입력 숫자 합 배열</span>
        <span class="k">while</span> <span class="o">(</span><span class="kc">true</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">n</span><span class="o">)</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">cnt</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
                <span class="k">break</span><span class="o">;</span>
            <span class="o">}</span>
            <span class="n">sum</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="no">N</span><span class="o">[</span><span class="mi">0</span><span class="o">])</span> <span class="o">+</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="no">N</span><span class="o">[</span><span class="mi">1</span><span class="o">]);</span>
            <span class="k">if</span><span class="o">(</span><span class="n">sum</span> <span class="o">&gt;=</span> <span class="mi">10</span><span class="o">)</span> <span class="o">{</span>
                <span class="no">T</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">=</span> <span class="no">N</span><span class="o">[</span><span class="mi">1</span><span class="o">];</span>
                <span class="no">T</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="o">=</span> <span class="nc">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">sum</span><span class="o">).</span><span class="na">split</span><span class="o">(</span><span class="s">""</span><span class="o">)[</span><span class="mi">1</span><span class="o">];</span>
            <span class="o">}</span><span class="k">else</span> <span class="o">{</span>
                <span class="no">T</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">=</span> <span class="no">N</span><span class="o">[</span><span class="mi">1</span><span class="o">];</span>
                <span class="no">T</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="o">=</span> <span class="nc">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">sum</span><span class="o">);</span>
            <span class="o">}</span>
            <span class="no">N</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">=</span> <span class="no">T</span><span class="o">[</span><span class="mi">0</span><span class="o">];</span>
            <span class="no">N</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="o">=</span> <span class="no">T</span><span class="o">[</span><span class="mi">1</span><span class="o">];</span>
            <span class="n">cnt</span> <span class="o">+=</span> <span class="mi">1</span><span class="o">;</span>
            <span class="k">if</span><span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="no">N</span><span class="o">[</span><span class="mi">0</span><span class="o">])*</span><span class="mi">10</span> <span class="o">+</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="no">N</span><span class="o">[</span><span class="mi">1</span><span class="o">])</span> <span class="o">==</span> <span class="n">first</span><span class="o">)</span> <span class="k">break</span><span class="o">;</span>    
        <span class="o">}</span>
        <span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">cnt</span> <span class="o">+</span> <span class="s">"\n"</span><span class="o">);</span>
        <span class="n">bw</span><span class="o">.</span><span class="na">flush</span><span class="o">();</span>
        <span class="n">bw</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
        <span class="n">br</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><br /></p>

<h2 id="회고">회고</h2>
<ul>
  <li>1110번 문제의 알고리즘 패턴의 경우 생각보다는 단순해보였는데, 실제로 해당 로직을 구현하고 보니, 더 좋은 패턴으로 풀 수 있었을 것 같다.</li>
  <li>십의 자리수와 일의 자리수 조합을 아름답게 사용하면 코드길이를 대폭 줄일 수 있을 것 같다.</li>
</ul>]]></content><author><name>lango</name></author><category term="Java" /><category term="Blog" /><category term="algorithm" /><category term="study" /><category term="java" /><category term="baekjoon" /><summary type="html"><![CDATA[더하기 사이클]]></summary></entry><entry><title type="html">[알고리즘 스터디 - Java] 백준 10951번</title><link href="http://localhost:4000/java/13-post/" rel="alternate" type="text/html" title="[알고리즘 스터디 - Java] 백준 10951번" /><published>2022-08-01T00:00:00+09:00</published><updated>2022-08-01T00:00:00+09:00</updated><id>http://localhost:4000/java/13-post</id><content type="html" xml:base="http://localhost:4000/java/13-post/"><![CDATA[<p><br /></p>

<h1 id="ab---4">A+B - 4</h1>
<p>두 정수 A와 B를 입력받은 다음, A+B를 출력하는 프로그램을 작성하시오.
입력은 여러 개의 테스트 케이스로 이루어져 있다.
각 테스트 케이스는 한 줄로 이루어져 있으며, 각 줄에 A와 B가 주어진다. (0 &lt; A, B &lt; 10)</p>

<blockquote>
  <p>Input-1) <br />
1 1 <br />
2 3 <br />
3 4 <br />
9 8 <br />
5 2 <br /></p>
</blockquote>

<blockquote>
  <p>Output-1) <br />
2 <br />
5 <br />
7 <br />
17 <br />
7 <br /></p>
</blockquote>

<h3 id="접근-방식">접근 방식</h3>
<ul>
  <li>해당 문제에서 핵심은 입력 종료 조건이 없다는 것이다.
그래서 더 이상 읽을 수 있는 데이터가 없다면 반복을 종료하라는 것으로 판단하였다.</li>
</ul>

<blockquote>
  <ol>
    <li>A, B는 공백으로 구분된다.</li>
    <li><strong>EOF(읽을 수 없는 데이터)</strong> 가 존재할 경우 입력을 종료한다.
<br /></li>
  </ol>
</blockquote>

<blockquote>
  <p>EOF 란?
데이터가 더이상 존재하지 않을 때 우리는 EOF (End of File) 즉, 파일의 끝이라고 한다.</p>
</blockquote>

<p><br /></p>

<h3 id="문제-해결-과정">문제 해결 과정</h3>
<ul>
  <li>Scanner와 입력받는 방식과 BufferedReader로 입력받는 방식으로 풀어볼 것이다.</li>
</ul>

<p><br /></p>

<h3 id="scanner를-통한-풀이과정">Scanner를 통한 풀이과정</h3>
<ul>
  <li>Scanner 클래스의 hasNext() 메서드를 이용해 입력의 종료를 검증하였다.
hasNext()나 hasNextInt() 둘중 아무거나 사용해도 무관하지만 
nextInt()를 통해 정수를 입력받으니 hasNextInt()를 사용하였다.
    <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="nc">Scanner</span> <span class="n">sc</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Scanner</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
<span class="k">while</span> <span class="o">(</span><span class="n">sc</span><span class="o">.</span><span class="na">hasNextInt</span><span class="o">())</span> <span class="o">...</span>
</pre></td></tr></tbody></table></code></pre></div>    </div>
  </li>
</ul>

<h4 id="scanner-작성코드">Scanner 작성코드</h4>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">java.util.Scanner</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">Scanner</span> <span class="n">sc</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Scanner</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
        <span class="kt">int</span> <span class="n">a</span><span class="o">,</span> <span class="n">b</span><span class="o">;</span>
        <span class="k">while</span> <span class="o">(</span><span class="n">sc</span><span class="o">.</span><span class="na">hasNextInt</span><span class="o">())</span> <span class="o">{</span>
            <span class="n">a</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
            <span class="n">b</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">a</span><span class="o">+</span><span class="n">b</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="n">sc</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><br /></p>

<h3 id="bufferedreader를-통한-풀이과정">BufferedReader를 통한 풀이과정</h3>
<ul>
  <li>readLine을 통해 입력을 받아 input에 저장된 값이 null일 경우 입력의 종료라고 판단하고 반복문을 종료하도록 작성하였다.
    <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="nc">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>
<span class="k">while</span><span class="o">((</span><span class="n">input</span> <span class="o">=</span> <span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">())</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">...</span>
</pre></td></tr></tbody></table></code></pre></div>    </div>
  </li>
</ul>

<h4 id="bufferedreader-작성코드">BufferedReader 작성코드</h4>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">java.io.BufferedReader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.BufferedWriter</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.InputStreamReader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.OutputStreamWriter</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.StringTokenizer</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">IOException</span> <span class="o">{</span>
        <span class="nc">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>
        <span class="nc">BufferedWriter</span> <span class="n">bw</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedWriter</span><span class="o">(</span><span class="k">new</span> <span class="nc">OutputStreamWriter</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">));</span>
        <span class="kt">int</span> <span class="n">a</span><span class="o">,</span> <span class="n">b</span><span class="o">;</span>
        <span class="nc">String</span> <span class="n">input</span><span class="o">;</span>
        <span class="k">while</span><span class="o">((</span><span class="n">input</span> <span class="o">=</span> <span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">())</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
            <span class="nc">StringTokenizer</span> <span class="n">st</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">input</span><span class="o">);</span>
            <span class="n">a</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
            <span class="n">b</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
            <span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">((</span><span class="n">a</span><span class="o">+</span><span class="n">b</span><span class="o">)</span> <span class="o">+</span> <span class="s">"\n"</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="n">bw</span><span class="o">.</span><span class="na">flush</span><span class="o">();</span>
        <span class="n">bw</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
        <span class="n">br</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><br /></p>

<h2 id="회고">회고</h2>
<ul>
  <li>Python으로는 손쉽게 풀수 있었으나 Java로 풀어보니 EOF를 고려하지 않을 수 없었다. 그래서 EOF에 대해서 다시 복습할 수 있었다.</li>
  <li>그리고 입력값이 많아질수록 Scanner보다 BufferedReader가 실행 속도에 있어서 메리트가 있음을 알게 되었다.</li>
</ul>]]></content><author><name>lango</name></author><category term="Java" /><category term="Blog" /><category term="algorithm" /><category term="study" /><category term="java" /><category term="baekjoon" /><summary type="html"><![CDATA[A+B - 4]]></summary></entry><entry><title type="html">[알고리즘 스터디] 백준 1316번</title><link href="http://localhost:4000/python/12-post/" rel="alternate" type="text/html" title="[알고리즘 스터디] 백준 1316번" /><published>2022-07-21T00:00:00+09:00</published><updated>2022-07-21T00:00:00+09:00</updated><id>http://localhost:4000/python/12-post</id><content type="html" xml:base="http://localhost:4000/python/12-post/"><![CDATA[<p><br /></p>

<h1 id="그룹-단어-체커">그룹 단어 체커</h1>
<p>그룹 단어란 단어에 존재하는 모든 문자에 대해서, 각 문자가 연속해서 나타나는 경우만을 말한다. 예를 들면, ccazzzzbb는 c, a, z, b가 모두 연속해서 나타나고, kin도 k, i, n이 연속해서 나타나기 때문에 그룹 단어이지만, aabbbccb는 b가 떨어져서 나타나기 때문에 그룹 단어가 아니다. 단어 N개를 입력으로 받아 그룹 단어의 개수를 출력하는 프로그램을 작성하시오.</p>

<blockquote>
  <p>Input-1) <br />
3 <br />
happy <br />
new <br />
year <br /></p>
</blockquote>

<blockquote>
  <p>Output-1) <br />
3</p>
</blockquote>

<blockquote>
  <p>Input-2) <br />
4 <br />
aba <br />
abab <br />
abcabc <br />
a</p>
</blockquote>

<blockquote>
  <p>Output-2) <br />
1</p>
</blockquote>

<p><br /></p>

<h3 id="접근-방식">접근 방식</h3>
<ol>
  <li>2글자 이하의 문자열은 무조건 조건을 충족하기에 그룹 단어로 포함한다.</li>
  <li>3글자 이상의 문자열일 경우 별도의 조건을 통해 검증한다.
    <ul>
      <li>문자열 중 같은 문자가 여러개일 경우 연속된 문자인지 확인한다.</li>
      <li>현재 문자가 뒷 문자열에 없는지 확인한다.</li>
    </ul>
  </li>
  <li>2번 조건을 충족할 경우 그룹단어로 포함한다.</li>
</ol>

<p><br /></p>

<h3 id="문제">문제</h3>
<ul>
  <li>3글자 이상의 문자열이면서, 같은 문자가 여러개 존재할 경우 조건을 일일이 부여해야 했다.</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="rouge-code"><pre><span class="k">if</span> <span class="n">group_word</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">!=</span> <span class="n">group_word</span><span class="p">[</span><span class="n">j</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span> <span class="ow">and</span> <span class="n">group_word</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">!=</span> <span class="n">group_word</span><span class="p">[</span><span class="n">j</span><span class="o">-</span><span class="mi">1</span><span class="p">]:</span>
    <span class="n">status</span> <span class="o">=</span> <span class="bp">False</span>
<span class="k">if</span> <span class="n">group_word</span><span class="p">[</span><span class="n">j</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="n">group_word</span><span class="p">[</span><span class="n">j</span><span class="o">+</span><span class="mi">1</span><span class="p">]:</span>
    <span class="n">status</span> <span class="o">=</span> <span class="bp">False</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<ul>
  <li>현재 문자 기준으로 뒷 문자와 앞 문자가 같은 경우(aba 등)는 고려할 수 있으나 같은 문자가 서로 멀리 존재할 경우(aabcbb)도 고려해야 했다.</li>
</ul>

<p><br /></p>

<h3 id="문제-해결">문제 해결</h3>
<p>조건을 일일이 부여하여 검증하는 것이 아니라 슬라이싱 방식을 통해 같은 문자가 여러개 이면서 연속되었는지 여부를 검증하도록 수정하였다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="k">if</span> <span class="n">g_word</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="ow">in</span> <span class="n">g_word</span><span class="p">[</span><span class="n">j</span><span class="o">+</span><span class="mi">1</span><span class="p">:]:</span>
    <span class="p">...</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<ul>
  <li>위와 같이 현재 문자가 현재 문자 이후의 문자열에 포함되어 있는지 여부를 통해 같은 문자가 서로 멀리 존재할 경우를 고려할 수 있다.</li>
</ul>

<p><br /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="rouge-code"><pre><span class="n">n</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">())</span>
<span class="n">result</span> <span class="o">=</span> <span class="n">n</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">n</span><span class="p">):</span>
    <span class="n">g_word</span> <span class="o">=</span> <span class="nb">input</span><span class="p">()</span>
    <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">g_word</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="p">):</span>
        <span class="k">if</span> <span class="n">g_word</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">==</span> <span class="n">g_word</span><span class="p">[</span><span class="n">j</span><span class="o">+</span><span class="mi">1</span><span class="p">]:</span> <span class="c1"># 연속된 문자일 경우
</span>           <span class="k">continue</span>
        <span class="k">if</span> <span class="n">g_word</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="ow">in</span> <span class="n">g_word</span><span class="p">[</span><span class="n">j</span><span class="o">+</span><span class="mi">1</span><span class="p">:]:</span> <span class="c1"># 뒷 문자열에 존재할 경우
</span>            <span class="n">result</span> <span class="o">-=</span> <span class="mi">1</span>
            <span class="k">break</span>
<span class="k">print</span><span class="p">(</span><span class="n">result</span><span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h2 id="회고">회고</h2>
<p>1316번 문제를 통해 인덱싱도 중요하지만, 슬라이싱 문법에 대해 확실하게 복습할 수 있었다.</p>]]></content><author><name>lango</name></author><category term="Python" /><category term="Blog" /><category term="algorithm" /><category term="study" /><category term="python" /><category term="baekjoon" /><summary type="html"><![CDATA[그룹 단어 체커]]></summary></entry><entry><title type="html">[알고리즘 스터디] 백준 2941번</title><link href="http://localhost:4000/python/11-post/" rel="alternate" type="text/html" title="[알고리즘 스터디] 백준 2941번" /><published>2022-07-14T00:00:00+09:00</published><updated>2022-07-14T00:00:00+09:00</updated><id>http://localhost:4000/python/11-post</id><content type="html" xml:base="http://localhost:4000/python/11-post/"><![CDATA[<h1 id="크로아티아-알파벳">크로아티아 알파벳</h1>
<p>ljes=njak은 크로아티아 알파벳 6개(lj, e, š, nj, a, k)로 이루어져 있다. 단어가 주어졌을 때, 몇 개의 크로아티아 알파벳으로 이루어져 있는지 출력한다.
dž는 무조건 하나의 알파벳으로 쓰이고, d와 ž가 분리된 것으로 보지 않는다. lj와 nj도 마찬가지이다. 위 목록에 없는 알파벳은 한 글자씩 센다.</p>

<blockquote>
  <p>Input-1) <br />
ljes=njak <br />
Output-1) <br />
6</p>
</blockquote>

<blockquote>
  <p>Input-2) <br />
ddz=z= <br />
Output-2) <br />
3</p>
</blockquote>

<p><br /></p>

<h3 id="최초-접근-방식">최초 접근 방식</h3>
<ol>
  <li>내 입력에 크로아티아 알파벳(이하 alph)이 포함되어 있는지 확인한다.</li>
  <li>포함되어 있으면 점수를 1개 증가시키고 내 입력 문자열에서 해당 alph를 공백값으로 치환한다.</li>
  <li>1번 검증이 완료되고 남은 입력 문자열에서 공백을 없앤 후 갯수를 점수에 증가시킨다.</li>
</ol>

<p><br /></p>

<h3 id="문제-해결">문제 해결</h3>
<p>위와 같이 구현하니, dz=dz=, ljlj 등과 같이 연속으로 alph에 포함된 문자열이 주어졌을 때 한꺼번에 처리하는 문제가 발생하였다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="rouge-code"><pre><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">cro_alph</span><span class="p">:</span>
    <span class="k">if</span> <span class="n">n</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="n">i</span><span class="p">)</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="p">:</span>
        <span class="n">n</span> <span class="o">=</span> <span class="n">n</span><span class="p">.</span><span class="n">replace</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="s">' '</span><span class="p">)</span>
        <span class="n">cnt</span> <span class="o">+=</span> <span class="mi">1</span>
<span class="n">n</span> <span class="o">=</span> <span class="n">n</span><span class="p">.</span><span class="n">replace</span><span class="p">(</span><span class="s">' '</span><span class="p">,</span> <span class="s">''</span><span class="p">)</span>
<span class="n">cnt</span> <span class="o">+=</span> <span class="nb">len</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>그렇다면 아예 문자열을 치환할 때 공백값이 아닌 문자로 치환한 다음, 치환한 문자와 남은 문자의 갯수를 함께 세면 어떨까? 라는 방식으로 문제 해결을 시도했다.</p>

<h3 id="문제-해결을-위한-접근-방식-수정">문제 해결을 위한 접근 방식 수정</h3>
<ol>
  <li>내 입력 문자열에 크로아티아 알파벳(이하 alph)이 포함되어 있는지 확인한다.</li>
  <li>포함되어 있으면 <del>점수를 1개 증가시키고</del> <strong>내 입력 문자열에서 해당 alph를 ‘*‘으로 치환한다.</strong></li>
  <li>1번 검증이 완료되고 입력 문자열에서 <strong>‘*‘의 갯수를 점수에 증가</strong>시킨다.</li>
  <li>이후 입력 문자열에서 ‘*‘을 제거하여 alph에 포함되지 않은 문자열 갯수를 점수에 증가시킨다.</li>
</ol>

<p><br /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
</pre></td><td class="rouge-code"><pre><span class="n">n</span> <span class="o">=</span> <span class="nb">str</span><span class="p">(</span><span class="nb">input</span><span class="p">())</span>
<span class="n">cro_alph</span> <span class="o">=</span> <span class="p">[</span><span class="s">'c='</span><span class="p">,</span> <span class="s">'c-'</span><span class="p">,</span> <span class="s">'dz='</span><span class="p">,</span> <span class="s">'d-'</span><span class="p">,</span> <span class="s">'lj'</span><span class="p">,</span> <span class="s">'nj'</span><span class="p">,</span> <span class="s">'s='</span><span class="p">,</span> <span class="s">'z='</span><span class="p">]</span>
<span class="n">cnt</span> <span class="o">=</span> <span class="mi">0</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">cro_alph</span><span class="p">:</span>
    <span class="k">if</span> <span class="n">n</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="n">i</span><span class="p">)</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="p">:</span>
        <span class="n">n</span> <span class="o">=</span> <span class="n">n</span><span class="p">.</span><span class="n">replace</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="s">'*'</span><span class="p">)</span>
<span class="n">cnt</span> <span class="o">+=</span> <span class="n">n</span><span class="p">.</span><span class="n">count</span><span class="p">(</span><span class="s">'*'</span><span class="p">)</span>
<span class="n">n</span> <span class="o">=</span> <span class="n">n</span><span class="p">.</span><span class="n">replace</span><span class="p">(</span><span class="s">'*'</span><span class="p">,</span> <span class="s">''</span><span class="p">)</span>
<span class="n">cnt</span> <span class="o">+=</span> <span class="nb">len</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">cnt</span><span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>]]></content><author><name>lango</name></author><category term="Python" /><category term="Blog" /><category term="algorithm" /><category term="study" /><category term="python" /><category term="baekjoon" /><summary type="html"><![CDATA[크로아티아 알파벳]]></summary></entry></feed>